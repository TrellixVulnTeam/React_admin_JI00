{"ast":null,"code":"import \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport axios from 'axios';\nexport default function ajax(url, data = {}, type = 'GET') {\n  return new Promise((resolve, reject) => {\n    let promise; //1.执行异步ajax请求\n\n    if (type === 'GET') {\n      //发送GET请求\n      promise = axios.get(url, {\n        //配置对象\n        params: data //指定请求参数\n\n      });\n    } else {\n      //发送POST请求\n      promise = axios.post(url, data);\n    } //2.如果成功了，调用resolve(value)  promise.then()返回一个promise对象\n\n\n    promise.then(value => {\n      resolve(value); //3.如果失败了，不调用reject(reason),而是提示错误信息\n    }).catch(error => {\n      _message.error('请求出错了：' + error.message);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/api/ajax.js"],"names":["axios","ajax","url","data","type","Promise","resolve","reject","promise","get","params","post","then","value","catch","error","message"],"mappings":";;AAIA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe,SAASC,IAAT,CAAcC,GAAd,EAAkBC,IAAI,GAAC,EAAvB,EAA0BC,IAAI,GAAC,KAA/B,EAAqC;AAChD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAkB;AACjC,QAAIC,OAAJ,CADiC,CAEjC;;AACA,QAAGJ,IAAI,KAAG,KAAV,EAAgB;AAAe;AAC3BI,MAAAA,OAAO,GAAER,KAAK,CAACS,GAAN,CAAUP,GAAV,EAAc;AAAM;AACzBQ,QAAAA,MAAM,EAACP,IADY,CACI;;AADJ,OAAd,CAAT;AAGH,KAJD,MAIK;AAA0B;AAC5BK,MAAAA,OAAO,GAAER,KAAK,CAACW,IAAN,CAAWT,GAAX,EAAeC,IAAf,CAAT;AACF,KATgC,CAUhC;;;AACLK,IAAAA,OAAO,CAACI,IAAR,CAAcC,KAAD,IAAS;AAClBP,MAAAA,OAAO,CAACO,KAAD,CAAP,CADkB,CAEtB;AACC,KAHD,EAGGC,KAHH,CAGUC,KAAD,IAAS;AACd,eAAQA,KAAR,CAAc,WAASA,KAAK,CAACC,OAA7B;AACH,KALD;AAMC,GAjBM,CAAP;AAqBH","sourcesContent":["//能发送异步请求的ajax模块\r\n//函数的返回值是promise对象\r\n\r\nimport {message} from 'antd'\r\nimport axios from 'axios'\r\nexport default function ajax(url,data={},type='GET'){\r\n    return new Promise((resolve,reject)=>{\r\n        let promise\r\n        //1.执行异步ajax请求\r\n        if(type==='GET'){              //发送GET请求\r\n            promise= axios.get(url,{     //配置对象\r\n                params:data            //指定请求参数\r\n            })\r\n        }else{                         //发送POST请求\r\n           promise= axios.post(url,data)\r\n        }\r\n         //2.如果成功了，调用resolve(value)  promise.then()返回一个promise对象\r\n    promise.then((value)=>{\r\n        resolve(value)\r\n    //3.如果失败了，不调用reject(reason),而是提示错误信息\r\n    }).catch((error)=>{\r\n        message.error('请求出错了：'+error.message)\r\n    })\r\n    })\r\n\r\n   \r\n\r\n}"]},"metadata":{},"sourceType":"module"}