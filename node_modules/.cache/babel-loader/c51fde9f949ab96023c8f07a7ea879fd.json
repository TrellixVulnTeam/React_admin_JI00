{"ast":null,"code":"import _objectSpread from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/*\r\n用来根据老的state和指定的action生成并返回新的state的函数\r\n */import{combineReducers}from'redux';/*\r\n用来管理头部标题的reducer函数\r\n */import storageUtils from\"../utils/storageUtils\";import{SET_HEAD_TITLE,RECEIVE_USER,SHOW_ERROR_MSG,RESET_USER}from'./action-types';var initHeadTitle='';function headTitle(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initHeadTitle;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_HEAD_TITLE:return action.data;default:return state;}}/*\r\n用来管理当前登陆用户的reducer函数\r\n */var initUser=storageUtils.getUser();function user(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initUser;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case RECEIVE_USER:return action.user;case SHOW_ERROR_MSG:var errorMsg=action.errorMsg;// state.errorMsg = errorMsg  // 不要直接修改原本状态数据\nreturn _objectSpread(_objectSpread({},state),{},{errorMsg:errorMsg});case RESET_USER:return{};default:return state||{};}}/*\r\n向外默认暴露的是合并产生的总的reducer函数\r\n管理的总的state的结构:\r\n  {\r\n    headTitle: '首页',\r\n    user: {}\r\n  }\r\n */export default combineReducers({headTitle:headTitle,user:user});","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/redux/reducer.js"],"names":["combineReducers","storageUtils","SET_HEAD_TITLE","RECEIVE_USER","SHOW_ERROR_MSG","RESET_USER","initHeadTitle","headTitle","state","action","type","data","initUser","getUser","user","errorMsg"],"mappings":"gKAAA;AACA;AACA,GACA,OAAQA,eAAR,KAA8B,OAA9B,CAEA;AACA;AACA,GACA,MAAOC,CAAAA,YAAP,KAAyB,uBAAzB,CACA,OACEC,cADF,CAEEC,YAFF,CAGEC,cAHF,CAIEC,UAJF,KAKO,gBALP,CAOA,GAAMC,CAAAA,aAAa,CAAG,EAAtB,CAEA,QAASC,CAAAA,SAAT,EAAkD,IAA/BC,CAAAA,KAA+B,2DAAvBF,aAAuB,IAARG,CAAAA,MAAQ,2CAChD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKR,CAAAA,cAAL,CACE,MAAOO,CAAAA,MAAM,CAACE,IAAd,CACF,QACE,MAAOH,CAAAA,KAAP,CAJJ,CAMD,CAED;AACA;AACA,GACA,GAAMI,CAAAA,QAAQ,CAAGX,YAAY,CAACY,OAAb,EAAjB,CAEA,QAASC,CAAAA,IAAT,EAAwC,IAA1BN,CAAAA,KAA0B,2DAAlBI,QAAkB,IAARH,CAAAA,MAAQ,2CACtC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKP,CAAAA,YAAL,CACE,MAAOM,CAAAA,MAAM,CAACK,IAAd,CACF,IAAKV,CAAAA,cAAL,CACE,GAAMW,CAAAA,QAAQ,CAAGN,MAAM,CAACM,QAAxB,CACA;AACA,sCAAWP,KAAX,MAAkBO,QAAQ,CAARA,QAAlB,GACF,IAAKV,CAAAA,UAAL,CACE,MAAO,EAAP,CACF,QACE,MAAOG,CAAAA,KAAK,EAAG,EAAf,CAVJ,CAYD,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,cAAeR,CAAAA,eAAe,CAAC,CAC7BO,SAAS,CAATA,SAD6B,CAE7BO,IAAI,CAAJA,IAF6B,CAAD,CAA9B","sourcesContent":["/*\r\n用来根据老的state和指定的action生成并返回新的state的函数\r\n */\r\nimport {combineReducers} from 'redux'\r\n\r\n/*\r\n用来管理头部标题的reducer函数\r\n */\r\nimport storageUtils from \"../utils/storageUtils\"\r\nimport {\r\n  SET_HEAD_TITLE,\r\n  RECEIVE_USER,\r\n  SHOW_ERROR_MSG,\r\n  RESET_USER\r\n} from './action-types'\r\n\r\nconst initHeadTitle = ''\r\n\r\nfunction headTitle(state = initHeadTitle, action) {\r\n  switch (action.type) {\r\n    case SET_HEAD_TITLE:\r\n      return action.data \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/*\r\n用来管理当前登陆用户的reducer函数\r\n */\r\nconst initUser = storageUtils.getUser()\r\n\r\nfunction user(state = initUser, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_USER:\r\n      return action.user\r\n    case SHOW_ERROR_MSG:\r\n      const errorMsg = action.errorMsg\r\n      // state.errorMsg = errorMsg  // 不要直接修改原本状态数据\r\n      return {...state, errorMsg}\r\n    case RESET_USER:\r\n      return {}\r\n    default:\r\n      return state ||{}\r\n  }\r\n}\r\n\r\n/*\r\n向外默认暴露的是合并产生的总的reducer函数\r\n管理的总的state的结构:\r\n  {\r\n    headTitle: '首页',\r\n    user: {}\r\n  }\r\n */\r\nexport default combineReducers({\r\n  headTitle,\r\n  user\r\n})"]},"metadata":{},"sourceType":"module"}