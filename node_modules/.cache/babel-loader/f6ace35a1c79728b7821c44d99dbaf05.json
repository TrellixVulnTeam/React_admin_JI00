{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"C:\\\\Users\\\\itryl\\\\Desktop\\\\React client\\\\client\\\\src\\\\pages\\\\products\\\\pictures-wall.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n} //用于图片上传的组件\n\n\nexport default class PicturesWall extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      previewVisible: false,\n      //标识是否显示大图预览 Modal\n      previewImage: '',\n      //大图的地址\n      fileList: [//   {\n        //     uid: '-1',  //每个file都有一个对应的id\n        //     name: 'image.png',  //图片文件名\n        //     status: 'done',  //图片状态  done已上传  uploading 正在上传  removed 已删除\n        //     url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',  //图片地址\n        //   },\n      ]\n    };\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.handlePreview = async file => {\n      //显示指定file对应的大图\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true\n      });\n    };\n\n    this.handleChange = ({\n      file,\n      fileList\n    }) => {\n      //一旦上传成功，将当前上传的file的信息修正（name,url）\n      if (file.status === 'done') {\n        const result = file.response;\n\n        if (result.status === 0) {\n          _message.success('上传图片成功！');\n\n          const {\n            name,\n            url\n          } = result.data;\n          file = fileList[fileList.length - 1];\n          file.name = name;\n          file.url = url;\n        } else {\n          _message.error('上传图片失败');\n        }\n      }\n\n      this.setState({\n        //在操作（上传/删除）过程中更新fileList状态\n        fileList\n      });\n    };\n  }\n\n  render() {\n    const {\n      previewVisible,\n      previewImage,\n      fileList\n    } = this.state;\n\n    const uploadButton =\n    /*#__PURE__*/\n    //上传的按钮\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(_Icon, {\n        type: \"plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(_Upload, {\n        action: \"/manage/img/upload\" //上传图片的接口地址\n        ,\n        accept: \"image/*\" //指定上传的为任意类型的图片\n        ,\n        listType: \"picture-card\" //上传列表的内建样式，支持三种基本样式 text, picture 和 picture-card\n        ,\n        name: \"image\" //发到后台的文件参数名  请求参数名\n        ,\n        fileList: fileList //所有已上传图片文件对象的数组\n        ,\n        onPreview: this.handlePreview,\n        onChange: this.handleChange,\n        children: fileList.length >= 8 ? null : uploadButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n        visible: previewVisible,\n        footer: null,\n        onCancel: this.handleCancel,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"example\",\n          style: {\n            width: '100%'\n          },\n          src: previewImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/pages/products/pictures-wall.jsx"],"names":["React","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","PicturesWall","Component","state","previewVisible","previewImage","fileList","handleCancel","setState","handlePreview","url","preview","originFileObj","handleChange","status","response","success","name","data","length","render","uploadButton","width"],"mappings":"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","sourcesContent":["import { Upload, Icon, Modal, message } from 'antd';\r\nimport React from 'react'\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\n//用于图片上传的组件\r\nexport default class PicturesWall extends React.Component {\r\n  state = {\r\n    previewVisible: false,  //标识是否显示大图预览 Modal\r\n    previewImage: '',    //大图的地址\r\n    fileList: [\r\n    //   {\r\n    //     uid: '-1',  //每个file都有一个对应的id\r\n    //     name: 'image.png',  //图片文件名\r\n    //     status: 'done',  //图片状态  done已上传  uploading 正在上传  removed 已删除\r\n    //     url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',  //图片地址\r\n    //   },\r\n    ],\r\n  };\r\n //隐藏Modal\r\n  handleCancel = () => this.setState({ previewVisible: false });  \r\n\r\n  handlePreview = async file => {\r\n      //显示指定file对应的大图\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n  //fileList所有已上传图片文件对象的数组\r\n  //file 当前操作的图片文件（上传/删除）\r\n  handleChange = ({ file,fileList }) => {\r\n      //一旦上传成功，将当前上传的file的信息修正（name,url）\r\n      if(file.status==='done'){\r\n          const result=file.response \r\n          if(result.status===0){\r\n              message.success('上传图片成功！')\r\n              const {name,url}=result.data\r\n              file=fileList[fileList.length-1]\r\n              file.name=name\r\n              file.url=url\r\n          }else{\r\n              message.error('上传图片失败')\r\n          }\r\n      }\r\n      this.setState({    //在操作（上传/删除）过程中更新fileList状态\r\n      fileList \r\n    })};\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state; \r\n    const uploadButton = (   //上传的按钮\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div >Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <Upload\r\n          action=\"/manage/img/upload\"   //上传图片的接口地址\r\n          accept='image/*'  //指定上传的为任意类型的图片\r\n          listType=\"picture-card\"  //上传列表的内建样式，支持三种基本样式 text, picture 和 picture-card\r\n          name='image'            //发到后台的文件参数名  请求参数名\r\n          fileList={fileList}    //所有已上传图片文件对象的数组\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 8 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}