{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"C:\\\\Users\\\\itryl\\\\Desktop\\\\React client\\\\client\\\\src\\\\pages\\\\category\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport './index.less';\nimport LinkButton from '../../components/link-button';\nimport { reqCategorys, reqUpdateCategory, reqAddCategory } from '../../api/index';\nimport AddForm from './add-form';\nimport UpdateForm from './update-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Category extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      categorys: [],\n      //一级分类列表\n      subCategorys: [],\n      //二级分类列表\n      loading: false,\n      //是否正在获取数据\n      parentId: '0',\n      //当前需要显示的分类列表的父分类ID\n      parentName: '',\n      //当前需要显示的分类列表的父分类名称\n      showStatus: 0 //标识添加/更新的确认框是否显示，0：都不显示  1：显示添加 2：显示更新\n\n    };\n\n    this.initColumns = () => {\n      this.columns = [{\n        title: '分类的名称',\n        dataIndex: 'name',\n        //显示数据的对应的属性名\n        key: 'name'\n      }, {\n        title: '操作',\n        width: 300,\n        dataIndex: '',\n        //显示数据的对应的属性名\n        key: 'x',\n        render: category =>\n        /*#__PURE__*/\n        //返回需要指定的界面标签\n        _jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(LinkButton, {\n            onClick: () => {\n              this.showUpdate(category);\n            },\n            children: \"\\u4FEE\\u6539\\u5206\\u7C7B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), this.state.parentId === '0' ? /*#__PURE__*/_jsxDEV(LinkButton, {\n            onClick: () => {\n              this.showSubCategorys(category);\n            },\n            children: \"\\u67E5\\u770B\\u5B50\\u5206\\u7C7B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 56\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }];\n    };\n\n    this.showAdd = () => {\n      this.setState({\n        showStatus: 1\n      });\n    };\n\n    this.addCategory = () => {\n      this.form.validateFields(async (err, values) => {\n        if (!err) {\n          // console.log('添加分类')\n          this.setState({\n            showStatus: 0\n          }); //获取数据  收集数据 提交请求\n          // const parentId = this.form.getFieldValue('parentId')\n          // const categoryName = this.form.getFieldValue('categoryName')\n\n          const {\n            parentId,\n            categoryName\n          } = values; //重置输入的数据\n\n          this.form.resetFields();\n          const result = await reqAddCategory(categoryName, parentId);\n\n          if (result.status === 0) {\n            //修改成功\n            //3.重新获取当前分类列表  添加的分类就是当前分类列表下的分类\n            if (parentId === this.state.parentId) {\n              this.getCategorys();\n            } else if (parentId === '0') {\n              //在二级分类列表下添加一级分类,重新获取一级分类列表 不需要显示一级分类\n              this.getCategorys('0');\n            }\n          }\n        }\n      });\n    };\n\n    this.showUpdate = category => {\n      //保存分类对象\n      this.category = category; // console.log(categorys)\n\n      this.setState({\n        showStatus: 2\n      });\n    };\n\n    this.updateCategory = () => {\n      //先进行表单验证，通过了才处理\n      this.form.validateFields(async (err, values) => {\n        if (!err) {\n          //1.隐藏确认框\n          this.setState({\n            showStatus: 0\n          }); //2.发送请求更新\n          //准备数据\n\n          const categoryId = this.category._id; //分类名字  接受子组件传来手动输入的值\n          // const categoryName = this.form.getFieldValue('categoryName')\n\n          const {\n            categoryName\n          } = values; //重置输入的数据\n\n          this.form.resetFields();\n          const result = await reqUpdateCategory({\n            categoryId,\n            categoryName\n          });\n\n          if (result.status === 0) {\n            //修改成功\n            //3.重新显示列表\n            this.getCategorys();\n          }\n        }\n      });\n    };\n\n    this.handleCancel = () => {\n      //重置输入的数据\n      this.form.resetFields(); //隐藏确认框\n\n      this.setState({\n        showStatus: 0\n      });\n    };\n\n    this.showFirstCategorys = () => {\n      this.setState({\n        parentId: '0',\n        parentName: '',\n        subCategorys: []\n      });\n    };\n\n    this.showSubCategorys = categorys => {\n      //更新状态(异步更新) setState不能立即获取最新的状态：因为setState是异步更新的\n      this.setState({\n        parentId: categorys._id,\n        parentName: categorys.name\n      }, () => {\n        //  console.log(this.state.parentId)  //在状态更新后且render()后执行\n        this.getCategorys();\n      }); //二级分类列表\n      // console.log(this.state.parentId,'21321')\n      //  this.getCategorys()\n    };\n\n    this.getCategorys = async parentId => {\n      //在发送请求前,显示loading\n      this.setState({\n        loading: true\n      }); //发异步ajax请求，获取数据\n\n      parentId = parentId || this.state.parentId;\n      const res = await reqCategorys(parentId); //在请求完成后,隐藏loading\n\n      this.setState({\n        loading: false\n      });\n\n      if (res.status === 0) {\n        const categorys = res.data; //这个数组可能是一级的，也可能是二级的数组\n        //更新状态\n\n        if (parentId === '0') {\n          //更新一级分类状态\n          this.setState({\n            categorys: categorys\n          });\n        } else {}\n\n        this.setState({\n          subCategorys: categorys\n        });\n      } else {\n        _message.error('获取分类列表失败');\n      }\n    };\n  }\n\n  //初始化所有Table所有列的数组\n  componentWillMount() {\n    this.initColumns(); //初始化所有列的数组方法\n  } //发送异步ajax请求 \n\n\n  componentDidMount() {\n    this.getCategorys();\n  } //初始化列的方法\n\n\n  render() {\n    //读取状态数据\n    const {\n      categorys,\n      loading,\n      subCategorys,\n      parentId,\n      parentName,\n      showStatus\n    } = this.state; // console.log(this.columns)\n    //读取指定的分类\n\n    const category = this.category || {}; //如果还没有，先指定空对象\n    //card的左侧\n\n    const title = parentId === '0' ? '一级分类列表' : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(LinkButton, {\n        onClick: this.showFirstCategorys,\n        children: \"\\u4E00\\u7EA7\\u5206\\u7C7B\\u5217\\u8868\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Icon, {\n        type: \"arrow-right\",\n        style: {\n          marginRight: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: parentName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this); //card的右侧\n\n    const extra = /*#__PURE__*/_jsxDEV(_Button, {\n      type: \"primary\",\n      onClick: this.showAdd,\n      children: [/*#__PURE__*/_jsxDEV(_Icon, {\n        type: \"plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), \"\\u6DFB\\u52A0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(_Card, {\n        title: title,\n        extra: extra,\n        children: [/*#__PURE__*/_jsxDEV(_Table, {\n          loading: loading,\n          dataSource: parentId === '0' ? categorys : subCategorys,\n          columns: this.columns,\n          bordered: true,\n          rowKey: \"_id\",\n          pagination: {\n            defaultPageSize: 8,\n            showQuickJumper: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n          title: \"\\u6DFB\\u52A0\\u5206\\u7C7B\",\n          visible: showStatus === 1 ? true : false //添加分类\n          ,\n          onOk: this.addCategory,\n          onCancel: this.handleCancel,\n          children: /*#__PURE__*/_jsxDEV(AddForm, {\n            categorys: categorys,\n            parentId: parentId,\n            setForm: form => {\n              this.form = form;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n          title: \"\\u66F4\\u65B0\\u5206\\u7C7B\",\n          visible: showStatus === 2 ? true : false //修改分类\n          ,\n          onOk: this.updateCategory,\n          onCancel: this.handleCancel,\n          children: /*#__PURE__*/_jsxDEV(UpdateForm, {\n            categoryName: category.name,\n            setForm: form => {\n              this.form = form;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/pages/category/index.jsx"],"names":["React","Component","LinkButton","reqCategorys","reqUpdateCategory","reqAddCategory","AddForm","UpdateForm","Category","state","categorys","subCategorys","loading","parentId","parentName","showStatus","initColumns","columns","title","dataIndex","key","width","render","category","showUpdate","showSubCategorys","showAdd","setState","addCategory","form","validateFields","err","values","categoryName","resetFields","result","status","getCategorys","updateCategory","categoryId","_id","handleCancel","showFirstCategorys","name","res","data","error","componentWillMount","componentDidMount","marginRight","extra","defaultPageSize","showQuickJumper"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,cAAP;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,YAAT,EAAuBC,iBAAvB,EAA0CC,cAA1C,QAAgE,iBAAhE;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AACA,eAAe,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC5CQ,KAD4C,GACpC;AACJC,MAAAA,SAAS,EAAE,EADP;AACa;AACjBC,MAAAA,YAAY,EAAE,EAFV;AAEe;AACnBC,MAAAA,OAAO,EAAE,KAHL;AAGc;AAClBC,MAAAA,QAAQ,EAAE,GAJN;AAIW;AACfC,MAAAA,UAAU,EAAE,EALR;AAKa;AACjBC,MAAAA,UAAU,EAAE,CANR,CAMU;;AANV,KADoC;;AAAA,SAmB5CC,WAnB4C,GAmB9B,MAAM;AAChB,WAAKC,OAAL,GAAe,CACX;AACIC,QAAAA,KAAK,EAAE,OADX;AAEIC,QAAAA,SAAS,EAAE,MAFf;AAEuB;AACnBC,QAAAA,GAAG,EAAE;AAHT,OADW,EAMX;AACIF,QAAAA,KAAK,EAAE,IADX;AAEIG,QAAAA,KAAK,EAAE,GAFX;AAGIF,QAAAA,SAAS,EAAE,EAHf;AAGoB;AAChBC,QAAAA,GAAG,EAAE,GAJT;AAKIE,QAAAA,MAAM,EAAGC,QAAD;AAAA;AAAiB;AACrB;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAE,MAAM;AAAE,mBAAKC,UAAL,CAAgBD,QAAhB;AAA2B,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAGK,KAAKd,KAAL,CAAWI,QAAX,KAAwB,GAAxB,gBAA8B,QAAC,UAAD;AAAY,YAAA,OAAO,EAAE,MAAM;AAAE,mBAAKY,gBAAL,CAAsBF,QAAtB;AAAiC,aAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA9B,GAAmH,IAHxH;AAAA;AAAA;AAAA;AAAA;AAAA;AANR,OANW,CAAf;AAoBH,KAxC2C;;AAAA,SA0C5CG,OA1C4C,GA0ClC,MAAM;AACZ,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,UAAU,EAAE;AAAd,OAAd;AACH,KA5C2C;;AAAA,SA8C5Ca,WA9C4C,GA8C9B,MAAM;AAClB,WAAKC,IAAL,CAAUC,cAAV,CAAyB,OAAMC,GAAN,EAAUC,MAAV,KAAmB;AACxC,YAAG,CAACD,GAAJ,EAAQ;AACF;AACR,eAAKJ,QAAL,CAAc;AAAEZ,YAAAA,UAAU,EAAE;AAAd,WAAd,EAFU,CAGV;AACA;AACA;;AACA,gBAAM;AAACF,YAAAA,QAAD;AAAUoB,YAAAA;AAAV,cAAwBD,MAA9B,CANU,CAQR;;AACA,eAAKH,IAAL,CAAUK,WAAV;AACL,gBAAMC,MAAM,GAAI,MAAM9B,cAAc,CAAC4B,YAAD,EAAcpB,QAAd,CAApC;;AACA,cAAIsB,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB;AAAG;AACxB;AACF,gBAAGvB,QAAQ,KAAG,KAAKJ,KAAL,CAAWI,QAAzB,EAAkC;AACjC,mBAAKwB,YAAL;AACA,aAFD,MAEM,IAAGxB,QAAQ,KAAG,GAAd,EAAkB;AAAG;AAC1B,mBAAKwB,YAAL,CAAkB,GAAlB;AACA;AACH;AACM;AACJ,OArBD;AAsBD,KArE2C;;AAAA,SAuE5Cb,UAvE4C,GAuE9BD,QAAD,IAAc;AACvB;AACA,WAAKA,QAAL,GAAgBA,QAAhB,CAFuB,CAGvB;;AACA,WAAKI,QAAL,CAAc;AAAEZ,QAAAA,UAAU,EAAE;AAAd,OAAd;AACH,KA5E2C;;AAAA,SA8E5CuB,cA9E4C,GA8E1B,MAAM;AACpB;AACA,WAAKT,IAAL,CAAUC,cAAV,CAAyB,OAAMC,GAAN,EAAUC,MAAV,KAAmB;AACxC,YAAG,CAACD,GAAJ,EAAQ;AACF;AACV,eAAKJ,QAAL,CAAc;AAAEZ,YAAAA,UAAU,EAAE;AAAd,WAAd,EAFY,CAGZ;AACA;;AACA,gBAAMwB,UAAU,GAAG,KAAKhB,QAAL,CAAciB,GAAjC,CALY,CAMZ;AACA;;AACA,gBAAM;AAACP,YAAAA;AAAD,cAAeD,MAArB,CARY,CASZ;;AACA,eAAKH,IAAL,CAAUK,WAAV;AACA,gBAAMC,MAAM,GAAG,MAAM/B,iBAAiB,CAAC;AAAEmC,YAAAA,UAAF;AAAcN,YAAAA;AAAd,WAAD,CAAtC;;AAEA,cAAIE,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB;AAAG;AACxB;AACA,iBAAKC,YAAL;AACH;AACI;AACJ,OAnBD;AAoBH,KApG2C;;AAAA,SAsG5CI,YAtG4C,GAsG7B,MAAM;AACjB;AACA,WAAKZ,IAAL,CAAUK,WAAV,GAFiB,CAGjB;;AACA,WAAKP,QAAL,CAAc;AAAEZ,QAAAA,UAAU,EAAE;AAAd,OAAd;AACH,KA3G2C;;AAAA,SA8G5C2B,kBA9G4C,GA8GvB,MAAM;AACvB,WAAKf,QAAL,CAAc;AACVd,QAAAA,QAAQ,EAAE,GADA;AAEVC,QAAAA,UAAU,EAAE,EAFF;AAGVH,QAAAA,YAAY,EAAE;AAHJ,OAAd;AAKH,KApH2C;;AAAA,SAsH5Cc,gBAtH4C,GAsHxBf,SAAD,IAAe;AAC9B;AACA,WAAKiB,QAAL,CAAc;AACVd,QAAAA,QAAQ,EAAEH,SAAS,CAAC8B,GADV;AAEV1B,QAAAA,UAAU,EAAEJ,SAAS,CAACiC;AAFZ,OAAd,EAGG,MAAM;AACL;AACA,aAAKN,YAAL;AACH,OAND,EAF8B,CAU9B;AACA;AACA;AACH,KAnI2C;;AAAA,SAuI5CA,YAvI4C,GAuI7B,MAAOxB,QAAP,IAAoB;AAC/B;AACA,WAAKc,QAAL,CAAc;AAAEf,QAAAA,OAAO,EAAE;AAAX,OAAd,EAF+B,CAG/B;;AACAC,MAAAA,QAAQ,GAAIA,QAAQ,IAAE,KAAKJ,KAAL,CAAWI,QAAjC;AACA,YAAM+B,GAAG,GAAG,MAAMzC,YAAY,CAACU,QAAD,CAA9B,CAL+B,CAO/B;;AACA,WAAKc,QAAL,CAAc;AAAEf,QAAAA,OAAO,EAAE;AAAX,OAAd;;AAEA,UAAIgC,GAAG,CAACR,MAAJ,KAAe,CAAnB,EAAsB;AAClB,cAAM1B,SAAS,GAAGkC,GAAG,CAACC,IAAtB,CADkB,CACY;AAC9B;;AACA,YAAIhC,QAAQ,KAAK,GAAjB,EAAsB;AAAI;AACtB,eAAKc,QAAL,CAAc;AAAEjB,YAAAA,SAAS,EAAEA;AAAb,WAAd;AACH,SAFD,MAEO,CAEN;;AAAC,aAAKiB,QAAL,CAAc;AAAEhB,UAAAA,YAAY,EAAED;AAAhB,SAAd;AACL,OARD,MAQO;AACH,iBAAQoC,KAAR,CAAc,UAAd;AACH;AACJ,KA5J2C;AAAA;;AAS5C;AACAC,EAAAA,kBAAkB,GAAG;AACjB,SAAK/B,WAAL,GADiB,CACI;AACxB,GAZ2C,CAc5C;;;AACAgC,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,YAAL;AACH,GAjB2C,CAkB5C;;;AA2IAf,EAAAA,MAAM,GAAG;AACL;AACA,UAAM;AAAEZ,MAAAA,SAAF;AAAaE,MAAAA,OAAb;AAAsBD,MAAAA,YAAtB;AAAoCE,MAAAA,QAApC;AAA8CC,MAAAA,UAA9C;AAA0DC,MAAAA;AAA1D,QAAyE,KAAKN,KAApF,CAFK,CAGL;AACA;;AACA,UAAMc,QAAQ,GAAG,KAAKA,QAAL,IAAiB,EAAlC,CALK,CAKiC;AACtC;;AACA,UAAML,KAAK,GAAGL,QAAQ,KAAK,GAAb,GAAmB,QAAnB,gBACV;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAE,KAAK6B,kBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,KAAK,EAAE;AAAEO,UAAAA,WAAW,EAAE;AAAf;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAOnC;AAAP;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAPK,CAcL;;AACA,UAAMoC,KAAK,gBACP;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,KAAKxB,OAArC;AAAA,8BACI;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;;AAMA,wBACI;AAAA,6BACI;AAAM,QAAA,KAAK,EAAER,KAAb;AAAoB,QAAA,KAAK,EAAEgC,KAA3B;AAAA,gCACI;AAAO,UAAA,OAAO,EAAEtC,OAAhB;AAAyB,UAAA,UAAU,EAAEC,QAAQ,KAAK,GAAb,GAAmBH,SAAnB,GAA+BC,YAApE;AAAkF,UAAA,OAAO,EAAE,KAAKM,OAAhG;AAAyG,UAAA,QAAQ,MAAjH;AAAkH,UAAA,MAAM,EAAC,KAAzH;AACC,UAAA,UAAU,EAAE;AAAEkC,YAAAA,eAAe,EAAE,CAAnB;AAAsBC,YAAAA,eAAe,EAAE;AAAvC;AADb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AACI,UAAA,KAAK,EAAC,0BADV;AAEI,UAAA,OAAO,EAAErC,UAAU,KAAK,CAAf,GAAmB,IAAnB,GAA0B,KAFvC,CAGI;AAHJ;AAII,UAAA,IAAI,EAAE,KAAKa,WAJf;AAKI,UAAA,QAAQ,EAAE,KAAKa,YALnB;AAAA,iCAOI,QAAC,OAAD;AAAS,YAAA,SAAS,EAAE/B,SAApB;AAA+B,YAAA,QAAQ,EAAEG,QAAzC;AACA,YAAA,OAAO,EAAGgB,IAAD,IAAQ;AAAC,mBAAKA,IAAL,GAAUA,IAAV;AAAe;AADjC;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAaI;AACI,UAAA,KAAK,EAAC,0BADV;AAEI,UAAA,OAAO,EAAEd,UAAU,KAAK,CAAf,GAAmB,IAAnB,GAA0B,KAFvC,CAGI;AAHJ;AAII,UAAA,IAAI,EAAE,KAAKuB,cAJf;AAKI,UAAA,QAAQ,EAAE,KAAKG,YALnB;AAAA,iCAOI,QAAC,UAAD;AAAY,YAAA,YAAY,EAAElB,QAAQ,CAACoB,IAAnC;AACI,YAAA,OAAO,EAAGd,IAAD,IAAU;AAAE,mBAAKA,IAAL,GAAYA,IAAZ;AAAkB;AAD3C;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA4BH;;AA9M2C","sourcesContent":["import React, { Component } from 'react'\r\nimport { Card, Table, Button, Icon, message, Modal } from 'antd';\r\nimport './index.less'\r\nimport LinkButton from '../../components/link-button'\r\nimport { reqCategorys, reqUpdateCategory, reqAddCategory } from '../../api/index'\r\nimport AddForm from './add-form'\r\nimport UpdateForm from './update-form'\r\nexport default class Category extends Component {\r\n    state = {\r\n        categorys: [],   //一级分类列表\r\n        subCategorys: [],  //二级分类列表\r\n        loading: false,   //是否正在获取数据\r\n        parentId: '0', //当前需要显示的分类列表的父分类ID\r\n        parentName: '',  //当前需要显示的分类列表的父分类名称\r\n        showStatus: 0,//标识添加/更新的确认框是否显示，0：都不显示  1：显示添加 2：显示更新\r\n    }\r\n    //初始化所有Table所有列的数组\r\n    componentWillMount() {\r\n        this.initColumns()   //初始化所有列的数组方法\r\n    }\r\n\r\n    //发送异步ajax请求 \r\n    componentDidMount() {\r\n        this.getCategorys()\r\n    }\r\n    //初始化列的方法\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title: '分类的名称',\r\n                dataIndex: 'name', //显示数据的对应的属性名\r\n                key: 'name',\r\n            },\r\n            {\r\n                title: '操作',\r\n                width: 300,\r\n                dataIndex: '',  //显示数据的对应的属性名\r\n                key: 'x',\r\n                render: (category) => (  //返回需要指定的界面标签\r\n                    <span>\r\n                        <LinkButton onClick={() => { this.showUpdate(category) }}>修改分类</LinkButton>\r\n                        {/* 向事件回调函数传递参数 ：先定义一个匿名函数，在函数调用处理的函数并传入数据*/}\r\n                        {this.state.parentId === '0' ? <LinkButton onClick={() => { this.showSubCategorys(category) }}>查看子分类</LinkButton> : null}\r\n                    </span>\r\n                )\r\n            },\r\n        ]\r\n    }\r\n    //先显示添加 显示添加的确认框\r\n    showAdd = () => {\r\n        this.setState({ showStatus: 1 })\r\n    }\r\n    //点击添加分类\r\n    addCategory = () => {\r\n      this.form.validateFields(async(err,values)=>{\r\n          if(!err){\r\n                // console.log('添加分类')\r\n        this.setState({ showStatus: 0 })\r\n        //获取数据  收集数据 提交请求\r\n        // const parentId = this.form.getFieldValue('parentId')\r\n        // const categoryName = this.form.getFieldValue('categoryName')\r\n        const {parentId,categoryName}=values\r\n\r\n          //重置输入的数据\r\n          this.form.resetFields()\r\n     const result=   await reqAddCategory(categoryName,parentId)\r\n     if (result.status === 0) {  //修改成功\r\n         //3.重新获取当前分类列表  添加的分类就是当前分类列表下的分类\r\n       if(parentId===this.state.parentId){\r\n        this.getCategorys()\r\n       }else if(parentId==='0'){  //在二级分类列表下添加一级分类,重新获取一级分类列表 不需要显示一级分类\r\n        this.getCategorys('0')\r\n       }\r\n    }\r\n          }\r\n      })\r\n    }\r\n    //先显示更新 显示更新的确认框\r\n    showUpdate = (category) => {\r\n        //保存分类对象\r\n        this.category = category\r\n        // console.log(categorys)\r\n        this.setState({ showStatus: 2 })\r\n    }\r\n    //更新分类\r\n    updateCategory =  () => {\r\n        //先进行表单验证，通过了才处理\r\n        this.form.validateFields(async(err,values)=>{\r\n            if(!err){\r\n                  //1.隐藏确认框\r\n        this.setState({ showStatus: 0 })\r\n        //2.发送请求更新\r\n        //准备数据\r\n        const categoryId = this.category._id\r\n        //分类名字  接受子组件传来手动输入的值\r\n        // const categoryName = this.form.getFieldValue('categoryName')\r\n        const {categoryName}=values\r\n        //重置输入的数据\r\n        this.form.resetFields()\r\n        const result = await reqUpdateCategory({ categoryId, categoryName })\r\n\r\n        if (result.status === 0) {  //修改成功\r\n            //3.重新显示列表\r\n            this.getCategorys()\r\n        }\r\n            }\r\n        })\r\n    }\r\n    //取消的按钮:隐藏确认框\r\n    handleCancel = () => {\r\n        //重置输入的数据\r\n        this.form.resetFields()\r\n        //隐藏确认框\r\n        this.setState({ showStatus: 0 })\r\n    }\r\n\r\n    //点击一级分类名称回到一级分类列表  更新为显示一级列表状态\r\n    showFirstCategorys = () => {\r\n        this.setState({\r\n            parentId: '0',\r\n            parentName: '',\r\n            subCategorys: []\r\n        })\r\n    }\r\n    //点击查看子分类  显示指定一级分类对象的二级分类列表\r\n    showSubCategorys = (categorys) => {\r\n        //更新状态(异步更新) setState不能立即获取最新的状态：因为setState是异步更新的\r\n        this.setState({\r\n            parentId: categorys._id,\r\n            parentName: categorys.name\r\n        }, () => {\r\n            //  console.log(this.state.parentId)  //在状态更新后且render()后执行\r\n            this.getCategorys()\r\n        }\r\n        )\r\n        //二级分类列表\r\n        // console.log(this.state.parentId,'21321')\r\n        //  this.getCategorys()\r\n    }\r\n\r\n    //异步获取一级、二级分类列表\r\n    //parentId:如果没有指定根据状态中的parentId请求，如果指定了根据指定的请求\r\n    getCategorys = async (parentId) => {\r\n        //在发送请求前,显示loading\r\n        this.setState({ loading: true })\r\n        //发异步ajax请求，获取数据\r\n        parentId  = parentId||this.state.parentId\r\n        const res = await reqCategorys(parentId)\r\n\r\n        //在请求完成后,隐藏loading\r\n        this.setState({ loading: false })\r\n\r\n        if (res.status === 0) {\r\n            const categorys = res.data    //这个数组可能是一级的，也可能是二级的数组\r\n            //更新状态\r\n            if (parentId === '0') {   //更新一级分类状态\r\n                this.setState({ categorys: categorys })\r\n            } else {\r\n\r\n            } this.setState({ subCategorys: categorys })\r\n        } else {\r\n            message.error('获取分类列表失败')\r\n        }\r\n    }\r\n    render() {\r\n        //读取状态数据\r\n        const { categorys, loading, subCategorys, parentId, parentName, showStatus } = this.state\r\n        // console.log(this.columns)\r\n        //读取指定的分类\r\n        const category = this.category || {}  //如果还没有，先指定空对象\r\n        //card的左侧\r\n        const title = parentId === '0' ? '一级分类列表' : (\r\n            <span>\r\n                <LinkButton onClick={this.showFirstCategorys}>一级分类列表</LinkButton>\r\n                <Icon type='arrow-right' style={{ marginRight: 10 }}></Icon>\r\n                <span>{parentName}</span>\r\n            </span>\r\n        )\r\n        //card的右侧\r\n        const extra = (\r\n            <Button type=\"primary\" onClick={this.showAdd}>\r\n                <Icon type='plus'></Icon>\r\n                添加\r\n            </Button>\r\n        )\r\n        return (\r\n            <div>\r\n                <Card title={title} extra={extra} >\r\n                    <Table loading={loading} dataSource={parentId === '0' ? categorys : subCategorys} columns={this.columns} bordered rowKey='_id'\r\n                     pagination={{ defaultPageSize: 8, showQuickJumper: true }} />\r\n                    <Modal\r\n                        title=\"添加分类\"\r\n                        visible={showStatus === 1 ? true : false}\r\n                        //添加分类\r\n                        onOk={this.addCategory}\r\n                        onCancel={this.handleCancel}\r\n                    >\r\n                        <AddForm categorys={categorys} parentId={parentId}\r\n                        setForm={(form)=>{this.form=form}}></AddForm> \r\n                    </Modal>\r\n                    <Modal\r\n                        title=\"更新分类\"\r\n                        visible={showStatus === 2 ? true : false}\r\n                        //修改分类\r\n                        onOk={this.updateCategory}\r\n                        onCancel={this.handleCancel}\r\n                    >\r\n                        <UpdateForm categoryName={category.name}\r\n                            setForm={(form) => { this.form = form }}></UpdateForm>\r\n                    </Modal>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}