{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nvar _jsxFileName = \"C:\\\\Users\\\\itryl\\\\Desktop\\\\React client\\\\client\\\\src\\\\pages\\\\user\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport formateDate from '../../utils/dateUtils';\nimport { reqUsers } from '../../api/index';\nimport LinkButton from '../../components/link-button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class User extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isShow: false,\n      //对话框的显示隐藏\n      users: [] //所有用户的数组\n\n    };\n\n    this.getUsers = async () => {\n      const result = await reqUsers(); //    this.setState({users:result.data.users})\n    };\n\n    this.initColumns = () => {\n      this.columns = [{\n        title: '用户名',\n        dataIndex: 'username'\n      }, {\n        title: '邮箱',\n        dataIndex: 'email'\n      }, {\n        title: '电话',\n        dataIndex: 'phone'\n      }, {\n        title: '注册时间',\n        dataIndex: 'create_time',\n        render: formateDate\n      }, {\n        title: '所属角色',\n        dataIndex: '_id'\n      }, {\n        title: '操作',\n        render: user => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(LinkButton, {\n            children: \"\\u4FEE\\u6539\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(LinkButton, {\n            children: \"\\u5220\\u9664\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }];\n    };\n\n    this.handleOk = () => {\n      this.setState({\n        isShow: false\n      });\n    };\n  }\n\n  componentWillMount() {\n    //调用初始化列的方法\n    this.initColumns(); //调用所有用户的列表\n\n    this.getUsers();\n  }\n\n  render() {\n    const title = /*#__PURE__*/_jsxDEV(_Button, {\n      type: \"primary\",\n      onClick: () => {\n        this.setState({\n          isShow: true\n        });\n      },\n      children: \"\\u521B\\u5EFA\\u7528\\u6237\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n\n    const {\n      isShow,\n      users\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      title: title,\n      children: [/*#__PURE__*/_jsxDEV(_Table, {\n        bordered: true,\n        rowKey: \"\" // dataSource={users}\n        ,\n        columns: this.columns,\n        pagination: {\n          defaultPageSize: 5,\n          showQuickJumper: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n        title: \"\\u521B\\u5EFA\\u89D2\\u8272\",\n        visible: isShow,\n        onOk: this.handleOk,\n        onCancel: () => {\n          this.setState({\n            isShow: false\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/pages/user/index.jsx"],"names":["React","Component","formateDate","reqUsers","LinkButton","User","state","isShow","users","getUsers","result","initColumns","columns","title","dataIndex","render","user","handleOk","setState","componentWillMount","defaultPageSize","showQuickJumper"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAIA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AACA,eAAe,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACxCK,KADwC,GAClC;AACFC,MAAAA,MAAM,EAAC,KADL;AACa;AACfC,MAAAA,KAAK,EAAC,EAFJ,CAES;;AAFT,KADkC;;AAAA,SAMxCC,QANwC,GAM/B,YAAS;AACd,YAAMC,MAAM,GAAC,MAAMP,QAAQ,EAA3B,CADc,CAElB;AACC,KATuC;;AAAA,SAWxCQ,WAXwC,GAW5B,MAAI;AACZ,WAAKC,OAAL,GAAa,CACT;AACIC,QAAAA,KAAK,EAAC,KADV;AAEIC,QAAAA,SAAS,EAAC;AAFd,OADS,EAKT;AACID,QAAAA,KAAK,EAAC,IADV;AAEIC,QAAAA,SAAS,EAAC;AAFd,OALS,EAST;AACID,QAAAA,KAAK,EAAC,IADV;AAEIC,QAAAA,SAAS,EAAC;AAFd,OATS,EAaT;AACID,QAAAA,KAAK,EAAC,MADV;AAEIC,QAAAA,SAAS,EAAC,aAFd;AAGIC,QAAAA,MAAM,EAACb;AAHX,OAbS,EAkBT;AACIW,QAAAA,KAAK,EAAC,MADV;AAEIC,QAAAA,SAAS,EAAC;AAFd,OAlBS,EAsBT;AACID,QAAAA,KAAK,EAAC,IADV;AAEIE,QAAAA,MAAM,EAAEC,IAAD,iBACH;AAAA,kCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHR,OAtBS,CAAb;AAgCH,KA5CuC;;AAAA,SAmDxCC,QAnDwC,GAmD/B,MAAI;AACT,WAAKC,QAAL,CAAc;AAACX,QAAAA,MAAM,EAAC;AAAR,OAAd;AACH,KArDuC;AAAA;;AA6CxCY,EAAAA,kBAAkB,GAAE;AAChB;AACA,SAAKR,WAAL,GAFgB,CAGhB;;AACA,SAAKF,QAAL;AACH;;AAIDM,EAAAA,MAAM,GAAG;AACL,UAAMF,KAAK,gBACP;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,MAAI;AAAC,aAAKK,QAAL,CAAc;AAACX,UAAAA,MAAM,EAAC;AAAR,SAAd;AAA6B,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;;AAGA,UAAM;AAACA,MAAAA,MAAD;AAAQC,MAAAA;AAAR,QAAe,KAAKF,KAA1B;AACA,wBACG;AAAM,MAAA,KAAK,EAAEO,KAAb;AAAA,8BACI;AACC,QAAA,QAAQ,MADT;AAEC,QAAA,MAAM,EAAC,EAFR,CAGC;AAHD;AAIC,QAAA,OAAO,EAAE,KAAKD,OAJf;AAKC,QAAA,UAAU,EAAE;AAACQ,UAAAA,eAAe,EAAC,CAAjB;AAAmBC,UAAAA,eAAe,EAAC;AAAnC;AALb;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AACC,QAAA,KAAK,EAAC,0BADP;AAEC,QAAA,OAAO,EAAEd,MAFV;AAGC,QAAA,IAAI,EAAE,KAAKU,QAHZ;AAIC,QAAA,QAAQ,EAAE,MAAI;AAAC,eAAKC,QAAL,CAAc;AAACX,YAAAA,MAAM,EAAC;AAAR,WAAd;AAA8B;AAJ9C;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AAmBH;;AA9EuC","sourcesContent":["import React, { Component } from 'react'\r\nimport{\r\n    Card,Button,Table,Modal\r\n} from 'antd'\r\nimport formateDate from '../../utils/dateUtils'\r\nimport {reqUsers} from '../../api/index'\r\nimport LinkButton from '../../components/link-button'\r\nexport default class User extends Component {\r\n    state={\r\n        isShow:false,  //对话框的显示隐藏\r\n        users:[],  //所有用户的数组\r\n    }\r\n    //获取所有用户的方法\r\n    getUsers=async()=>{\r\n        const result=await reqUsers()\r\n    //    this.setState({users:result.data.users})\r\n    }\r\n    //初始化列的方法\r\n    initColumns=()=>{\r\n        this.columns=[\r\n            {\r\n                title:'用户名',\r\n                dataIndex:'username',\r\n            },\r\n            {\r\n                title:'邮箱',\r\n                dataIndex:'email'\r\n            },\r\n            {\r\n                title:'电话',\r\n                dataIndex:'phone'\r\n            },\r\n            {\r\n                title:'注册时间',\r\n                dataIndex:'create_time',\r\n                render:formateDate\r\n            },\r\n            {\r\n                title:'所属角色',\r\n                dataIndex:'_id',\r\n            },\r\n            {\r\n                title:'操作',\r\n                render:(user)=>(\r\n                    <span>\r\n                        <LinkButton>修改</LinkButton>\r\n                        <LinkButton>删除</LinkButton>\r\n                    </span>\r\n                )\r\n            }\r\n        ]\r\n    }\r\n    componentWillMount(){\r\n        //调用初始化列的方法\r\n        this.initColumns()\r\n        //调用所有用户的列表\r\n        this.getUsers()\r\n    }\r\n    handleOk=()=>{\r\n        this.setState({isShow:false})\r\n    }\r\n    render() {\r\n        const title=(\r\n            <Button type='primary' onClick={()=>{this.setState({isShow:true})}}>创建用户</Button>\r\n        )\r\n        const {isShow,users}=this.state\r\n        return (\r\n           <Card title={title}>\r\n               <Table\r\n                bordered\r\n                rowKey=''\r\n                // dataSource={users}\r\n                columns={this.columns}\r\n                pagination={{defaultPageSize:5,showQuickJumper:true}}\r\n               >\r\n               </Table>\r\n               <Modal\r\n                title=\"创建角色\"\r\n                visible={isShow}\r\n                onOk={this.handleOk}\r\n                onCancel={()=>{this.setState({isShow:false})}}\r\n               >\r\n               </Modal>\r\n           </Card>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}