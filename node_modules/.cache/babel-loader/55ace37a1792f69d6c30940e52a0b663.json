{"ast":null,"code":"import\"antd/es/card/style\";import _Card from\"antd/es/card\";import\"antd/es/modal/style\";import _Modal from\"antd/es/modal\";import\"antd/es/table/style\";import _Table from\"antd/es/table\";import\"antd/es/button/style\";import _Button from\"antd/es/button\";import _regeneratorRuntime from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import\"antd/es/message/style\";import _message from\"antd/es/message\";import _asyncToGenerator from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{reqRoles,reqAddRole,reqUpdateRole}from'../../api';import AddForm from'./add-form';import AuthForm from'./auth-form';// import memoryUtils from '../../utils/memoryUtils'\nimport formateDate from'../../utils/dateUtils';// import storageUtils from '../../utils/storageUtils'\nimport{connect}from'react-redux';import{logout}from'../../redux/actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Role=/*#__PURE__*/function(_Component){_inherits(Role,_Component);var _super=_createSuper(Role);function Role(props){var _this;_classCallCheck(this,Role);_this=_super.call(this,props);_this.state={roles:[],//所有角色的数组\nrole:{},//选中的role \nisShowAdd:false,//标识确认框的显示 隐藏 添加角色\nisShowAuth:false//角色权限的显示 隐藏 \n};_this.initColumn=function(){_this.columns=[{title:'角色名称',dataIndex:'name'},{title:'创建时间',dataIndex:'create_time',render:function render(create_time){return formateDate(create_time);}},{title:'授权时间',dataIndex:'auth_time',render:formateDate},{title:'授权人',dataIndex:'auth_name'}];};_this.updateRole=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var role,menus,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:role=_this.state.role;//旧的role\n//得到最新的menus\nmenus=_this.auth.current.getMenus();role.menus=menus;role.auth_name=_this.props.user.username;//授权人\n//更新权限的接口\n_context.next=6;return reqUpdateRole(role);case 6:result=_context.sent;if(result.status===0){_this.getRoles();//如果当前更新的是自己角色的权限,强制退出\nif(role._id===_this.props.user.role._id){_this.props.logout();_message.error('当前用户修改了权限，重新登录');}else{_message.success('设置权限成功');_this.setState({roles:_toConsumableArray(_this.state.roles)});}}else{_message.error('设置权限失败');}_this.setState({isShowAuth:false});case 9:case\"end\":return _context.stop();}}},_callee);}));_this.addRole=function(){_this.form.validateFields(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(err,values){var roleName,result,role;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(err){_context2.next=10;break;}//收集输入数据\nroleName=values.roleName;_this.form.resetFields();//清除表单数据\n//请求添加\n_context2.next=5;return reqAddRole(roleName);case 5:result=_context2.sent;if(result.status===0){_message.success('添加角色成功');// this.getRoles()   //重新获取角色列表\nrole=result.data;//拿到新产生的角色\n//更新roles状态\n//   const roles=[role,...this.state.roles]\n//    this.setState({\n//        roles\n//    })\n//更新roles状态：基于原本状态数据更新\n_this.setState(function(state){return{roles:[role].concat(_toConsumableArray(state.roles))};});}else{_message.error('添加角色失败');}//隐藏确认框\n_this.setState({isShowAdd:false//隐藏确认框\n});_context2.next=11;break;case 10:_message.error('请输入角色名称');case 11:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}());};_this.getRoles=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var result,roles;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return reqRoles();case 2:result=_context3.sent;if(result.status===0){roles=result.data;_this.setState({roles:roles});}case 4:case\"end\":return _context3.stop();}}},_callee3);}));_this.onRow=function(role){//role是点击当前行的的角色\nreturn{onClick:function onClick(event){// 点击行\n// console.log('row onClick()', role)\n_this.setState({role:role//将选中的角色存起来\n});}};};_this.auth=/*#__PURE__*/React.createRef();//创建一个容器为了拿到子组件里面的东西\nreturn _this;}//列的数组  初始化列的数组\n_createClass(Role,[{key:\"componentWillMount\",value:function componentWillMount(){this.initColumn();}},{key:\"componentDidMount\",value:function componentDidMount(){this.getRoles();//获取所有角色列表\n}},{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,roles=_this$state.roles,role=_this$state.role,isShowAdd=_this$state.isShowAdd,isShowAuth=_this$state.isShowAuth;var title=/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(_Button,{type:\"primary\",onClick:function onClick(){_this2.setState({isShowAdd:true});},children:\"\\u521B\\u5EFA\\u89D2\\u8272\"}),\"\\xA0\",/*#__PURE__*/_jsx(_Button,{type:\"primary\",disabled:!role._id,onClick:function onClick(){_this2.setState({isShowAuth:true});},children:\"\\u8BBE\\u7F6E\\u89D2\\u8272\\u6743\\u9650\"})]});return/*#__PURE__*/_jsxs(_Card,{title:title,children:[/*#__PURE__*/_jsx(_Table,{bordered:true,rowKey:\"_id\"//哪一行被选中\n,pagination:{defaultPageSize:5,showQuickJumper:true},dataSource:roles//每一行的数据\n,columns:this.columns//每一列的数据\n,rowSelection:{//选择功能的配置\nselectedRowKeys:[role._id],//指定选中项的 key 数组，需要和 onChange 进行配合\ntype:'radio',//配置选择项是单选还是多选\nonSelect:function onSelect(role){//选择某个radio的时候回调\n_this2.setState({role:role//将选中的角色存起来\n});}},onRow:this.onRow//点击每一行的事件，可以看出是点击的哪一行\n}),/*#__PURE__*/_jsx(_Modal,{title:\"\\u6DFB\\u52A0\\u89D2\\u8272\",visible:isShowAdd//添加分类\n,onOk:this.addRole,onCancel:function onCancel(){_this2.setState({isShowAdd:false});_this2.form.resetFields();//点击取消的时候，清除输入框的内容\n},children:/*#__PURE__*/_jsx(AddForm,{setForm:function setForm(form){_this2.form=form;}})}),/*#__PURE__*/_jsx(_Modal,{title:\"\\u8BBE\\u7F6E\\u89D2\\u8272\\u6743\\u9650\",visible:isShowAuth//设置角色权限\n,onOk:this.updateRole,onCancel:function onCancel(){_this2.setState({isShowAuth:false});},children:/*#__PURE__*/_jsx(AuthForm,{role:role,ref:this.auth})})]});}}]);return Role;}(Component);export default connect(function(state){return{user:state.user};},{logout:logout})(Role);","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/pages/role/index.jsx"],"names":["React","Component","reqRoles","reqAddRole","reqUpdateRole","AddForm","AuthForm","formateDate","connect","logout","Role","props","state","roles","role","isShowAdd","isShowAuth","initColumn","columns","title","dataIndex","render","create_time","updateRole","menus","auth","current","getMenus","auth_name","user","username","result","status","getRoles","_id","error","success","setState","addRole","form","validateFields","err","values","roleName","resetFields","data","onRow","onClick","event","createRef","defaultPageSize","showQuickJumper","selectedRowKeys","type","onSelect"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Card, Button, Table, Modal, message } from 'antd'\r\nimport { reqRoles, reqAddRole,reqUpdateRole } from '../../api'\r\nimport AddForm from './add-form'\r\nimport AuthForm from './auth-form'\r\n// import memoryUtils from '../../utils/memoryUtils'\r\nimport formateDate from '../../utils/dateUtils'\r\n// import storageUtils from '../../utils/storageUtils'\r\nimport {connect} from 'react-redux'\r\nimport {logout} from '../../redux/actions'\r\n class Role extends Component {\r\n    state = {\r\n        roles: [],    //所有角色的数组\r\n        role: {},  //选中的role \r\n        isShowAdd: false,  //标识确认框的显示 隐藏 添加角色\r\n        isShowAuth:false,  //角色权限的显示 隐藏 \r\n    }\r\n    constructor(props){\r\n        super(props)\r\n        this.auth=React.createRef()  //创建一个容器为了拿到子组件里面的东西\r\n    }\r\n    //列的数组  初始化列的数组\r\n    initColumn = () => {\r\n        this.columns = [\r\n            {\r\n                title: '角色名称',\r\n                dataIndex: 'name',\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'create_time',\r\n                render:(create_time)=>formateDate(create_time)\r\n            }, \r\n            {\r\n                title: '授权时间',\r\n                dataIndex: 'auth_time',\r\n                render:formateDate\r\n            },\r\n            {\r\n                title: '授权人',\r\n                dataIndex: 'auth_name',\r\n            }\r\n        ]\r\n    }\r\n    //更新角色的回调  设置角色的权限\r\n    updateRole=async()=>{\r\n        const {role}=this.state   //旧的role\r\n        //得到最新的menus\r\n        const menus=this.auth.current.getMenus()\r\n        role.menus=menus\r\n        role.auth_name=this.props.user.username   //授权人\r\n        //更新权限的接口\r\n         const result= await reqUpdateRole(role)\r\n         if(result.status===0){\r\n             this.getRoles()\r\n             //如果当前更新的是自己角色的权限,强制退出\r\n             if(role._id===this.props.user.role._id){\r\n               this.props.logout()\r\n                message.error('当前用户修改了权限，重新登录')\r\n             }else{\r\n                 message.success('设置权限成功')\r\n                this.setState({\r\n                    roles:[...this.state.roles]\r\n                })\r\n             }\r\n\r\n         }else{\r\n             message.error('设置权限失败')\r\n         }\r\n        this.setState({isShowAuth:false})\r\n    }\r\n    //添加角色 添加角色的确认按钮\r\n    addRole =() => {\r\n        this.form.validateFields(async(err, values) => {\r\n            //进行表单验证，只有通过了，才向下处理\r\n            if (!err) {\r\n                  //收集输入数据\r\n                  const {roleName}=values\r\n                  this.form.resetFields()  //清除表单数据\r\n                //请求添加\r\n                const result = await reqAddRole(roleName)\r\n                if(result.status===0){\r\n                    message.success('添加角色成功')\r\n                    // this.getRoles()   //重新获取角色列表\r\n                    const role=result.data  //拿到新产生的角色\r\n                    //更新roles状态\r\n                //   const roles=[role,...this.state.roles]\r\n                //    this.setState({\r\n                //        roles\r\n                //    })\r\n\r\n                //更新roles状态：基于原本状态数据更新\r\n                this.setState(state=>({\r\n                    roles:[role,...state.roles]\r\n                }))\r\n                }else{\r\n                    message.error('添加角色失败')\r\n                }\r\n                //隐藏确认框\r\n                this.setState({\r\n                    isShowAdd: false  //隐藏确认框\r\n                })\r\n            }else{\r\n                message.error('请输入角色名称')\r\n            }\r\n        })\r\n    }\r\n\r\n    //获取角色列表的方法\r\n    getRoles = async () => {\r\n        const result = await reqRoles()\r\n        if (result.status === 0) {\r\n            const roles = result.data\r\n            this.setState({\r\n                roles\r\n            })\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.initColumn()\r\n    }\r\n    componentDidMount() {\r\n        this.getRoles()   //获取所有角色列表\r\n    }\r\n    onRow = (role) => {  //role是点击当前行的的角色\r\n        return {\r\n            onClick: event => { // 点击行\r\n                // console.log('row onClick()', role)\r\n                this.setState({\r\n                    role   //将选中的角色存起来\r\n                })\r\n            },\r\n        }\r\n    }\r\n    render() {\r\n        const { roles, role, isShowAdd ,isShowAuth} = this.state\r\n        const title = (\r\n            <span>\r\n                <Button type='primary' onClick={() => { this.setState({ isShowAdd: true }) }}>创建角色</Button>&nbsp;\r\n                <Button type='primary' disabled={!role._id} onClick={()=>{this.setState({isShowAuth:true})}}>设置角色权限</Button>\r\n            </span>\r\n        )\r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                    bordered\r\n                    rowKey='_id'  //哪一行被选中\r\n                    pagination={{ defaultPageSize: 5, showQuickJumper: true }}\r\n                    dataSource={roles}   //每一行的数据\r\n                    columns={this.columns} //每一列的数据\r\n                    rowSelection={{   //选择功能的配置\r\n                        selectedRowKeys: [role._id],  //指定选中项的 key 数组，需要和 onChange 进行配合\r\n                        type: 'radio',   //配置选择项是单选还是多选\r\n                        onSelect:(role)=>{  //选择某个radio的时候回调\r\n                            this.setState({\r\n                                role   //将选中的角色存起来\r\n                            })\r\n                        }\r\n                    }}\r\n                    onRow={this.onRow}  //点击每一行的事件，可以看出是点击的哪一行\r\n                >\r\n                </Table>\r\n                <Modal\r\n                    title=\"添加角色\"\r\n                    visible={isShowAdd}\r\n                    //添加分类\r\n                    onOk={this.addRole}\r\n                    onCancel={() => { this.setState({ isShowAdd: false })\r\n                    this.form.resetFields()   //点击取消的时候，清除输入框的内容\r\n                }}\r\n                >\r\n                    {/* 把接收的form存到父组件里面 */}\r\n                    <AddForm setForm={(form) => { this.form = form }}></AddForm>\r\n                </Modal>\r\n                <Modal\r\n                    title=\"设置角色权限\"\r\n                    visible={isShowAuth}\r\n                    //设置角色权限\r\n                    onOk={this.updateRole}\r\n                    onCancel={() => { this.setState({ isShowAuth: false })\r\n                }}\r\n                >\r\n                    {/* 把当前选中的role传给权限子组件 */}\r\n                    <AuthForm role={role} ref={this.auth}></AuthForm>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nexport default connect(\r\n    state=>({user:state.user}),\r\n    {logout}\r\n)(Role)"]},"metadata":{},"sourceType":"module"}