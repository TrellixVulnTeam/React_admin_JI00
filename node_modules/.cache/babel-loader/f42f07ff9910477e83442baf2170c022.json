{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"C:\\\\Users\\\\itryl\\\\Desktop\\\\React client\\\\client\\\\src\\\\pages\\\\role\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { reqRoles, reqAddRole } from '../../api';\nimport AddForm from './add-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Role extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      roles: [],\n      //所有角色的数组\n      role: {},\n      //选中的role \n      isShowAdd: false //标识确认框的显示 隐藏\n\n    };\n\n    this.initColumn = () => {\n      this.columns = [{\n        title: '角色名称',\n        dataIndex: 'name'\n      }, {\n        title: '创建时间',\n        dataIndex: 'create_time'\n      }, {\n        title: '授权时间',\n        dataIndex: 'auth_time'\n      }, {\n        title: '授权人',\n        dataIndex: 'auth_name'\n      }];\n    };\n\n    this.addRole = () => {\n      this.form.validateFields(async (err, values) => {\n        //进行表单验证，只有通过了，才向下处理\n        if (!err) {\n          //收集输入数据\n          const {\n            roleName\n          } = values;\n          this.form.resetFields(); //清除表单数据\n          //请求添加\n\n          const result = await reqAddRole(roleName);\n\n          if (result.status === 0) {\n            _message.success('添加角色成功'); // this.getRoles()   //重新获取角色列表\n\n\n            const role = result.data; //拿到新产生的角色\n            //更新roles状态\n\n            const roles = this.state.roles;\n            roles = [...roles, role];\n            this.setState({\n              roles\n            });\n          } else {\n            _message.error('添加角色失败');\n          } //根据结果提示信息\n\n\n          this.setState({\n            isShowAdd: false\n          });\n        } else {\n          _message.error('请输入角色名称');\n        }\n      });\n    };\n\n    this.getRoles = async () => {\n      const result = await reqRoles();\n\n      if (result.status === 0) {\n        const roles = result.data;\n        this.setState({\n          roles\n        });\n      }\n    };\n\n    this.onRow = role => {\n      //role是点击当前行的的角色\n      return {\n        onClick: event => {\n          // 点击行\n          console.log('row onClick()', role);\n          this.setState({\n            role //将选中的角色存起来\n\n          });\n        }\n      };\n    };\n  }\n\n  componentWillMount() {\n    this.initColumn();\n  }\n\n  componentDidMount() {\n    this.getRoles(); //获取所有角色列表\n  }\n\n  render() {\n    const {\n      roles,\n      role,\n      isShowAdd\n    } = this.state;\n\n    const title = /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(_Button, {\n        type: \"primary\",\n        onClick: () => {\n          this.setState({\n            isShowAdd: true\n          });\n        },\n        children: \"\\u521B\\u5EFA\\u89D2\\u8272\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(_Button, {\n        type: \"primary\",\n        disabled: !role._id,\n        children: \"\\u8BBE\\u7F6E\\u89D2\\u8272\\u6743\\u9650\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      title: title,\n      children: [/*#__PURE__*/_jsxDEV(_Table, {\n        bordered: true,\n        rowKey: \"_id\",\n        pagination: {\n          defaultPageSize: 5,\n          showQuickJumper: true\n        },\n        dataSource: roles //每一行的数据\n        ,\n        columns: this.columns //每一列的数据\n        ,\n        rowSelection: {\n          //选择功能的配置\n          selectedRowKeys: [role._id],\n          //指定选中项的 key 数组，需要和 onChange 进行配合\n          type: 'radio' //配置选择项是单选还是多选\n\n        },\n        onRow: this.onRow //点击每一行的事件，可以看出是点击的哪一行\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n        title: \"\\u6DFB\\u52A0\\u89D2\\u8272\",\n        visible: isShowAdd //添加分类\n        ,\n        onOk: this.addRole,\n        onCancel: () => {\n          this.setState({\n            isShowAdd: false\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(AddForm, {\n          setForm: form => {\n            this.form = form;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/pages/role/index.jsx"],"names":["React","Component","reqRoles","reqAddRole","AddForm","Role","state","roles","role","isShowAdd","initColumn","columns","title","dataIndex","addRole","form","validateFields","err","values","roleName","resetFields","result","status","success","data","setState","error","getRoles","onRow","onClick","event","console","log","componentWillMount","componentDidMount","render","_id","defaultPageSize","showQuickJumper","selectedRowKeys","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Card, Button, Table, Modal, message } from 'antd'\r\nimport { reqRoles, reqAddRole } from '../../api'\r\nimport AddForm from './add-form'\r\nexport default class Role extends Component {\r\n    state = {\r\n        roles: [],    //所有角色的数组\r\n        role: {},  //选中的role \r\n        isShowAdd: false  //标识确认框的显示 隐藏\r\n    }\r\n    //列的数组  初始化列的数组\r\n    initColumn = () => {\r\n        this.columns = [\r\n            {\r\n                title: '角色名称',\r\n                dataIndex: 'name',\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'create_time',\r\n            },\r\n            {\r\n                title: '授权时间',\r\n                dataIndex: 'auth_time',\r\n            },\r\n            {\r\n                title: '授权人',\r\n                dataIndex: 'auth_name',\r\n            }\r\n        ]\r\n    }\r\n    //添加角色 添加角色的确认按钮\r\n    addRole =() => {\r\n        this.form.validateFields(async(err, values) => {\r\n            //进行表单验证，只有通过了，才向下处理\r\n            if (!err) {\r\n                  //收集输入数据\r\n                  const {roleName}=values\r\n                  this.form.resetFields()  //清除表单数据\r\n                //请求添加\r\n                const result = await reqAddRole(roleName)\r\n                if(result.status===0){\r\n                    message.success('添加角色成功')\r\n                    // this.getRoles()   //重新获取角色列表\r\n                    const role=result.data  //拿到新产生的角色\r\n                    //更新roles状态\r\n                    const roles=this.state.roles\r\n                   roles=[...roles,role]\r\n                   this.setState({\r\n                       roles\r\n                   })\r\n                }else{\r\n                    message.error('添加角色失败')\r\n                }\r\n                //根据结果提示信息\r\n                this.setState({\r\n                    isShowAdd: false\r\n                })\r\n            }else{\r\n                message.error('请输入角色名称')\r\n            }\r\n        })\r\n    }\r\n\r\n    //获取角色列表的方法\r\n    getRoles = async () => {\r\n        const result = await reqRoles()\r\n        if (result.status === 0) {\r\n            const roles = result.data\r\n            this.setState({\r\n                roles\r\n            })\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.initColumn()\r\n    }\r\n    componentDidMount() {\r\n        this.getRoles()   //获取所有角色列表\r\n    }\r\n    onRow = (role) => {  //role是点击当前行的的角色\r\n        return {\r\n            onClick: event => { // 点击行\r\n                console.log('row onClick()', role)\r\n                this.setState({\r\n                    role   //将选中的角色存起来\r\n                })\r\n            },\r\n        }\r\n    }\r\n    render() {\r\n        const { roles, role, isShowAdd } = this.state\r\n        const title = (\r\n            <span>\r\n                <Button type='primary' onClick={() => { this.setState({ isShowAdd: true }) }}>创建角色</Button>&nbsp;\r\n                <Button type='primary' disabled={!role._id}>设置角色权限</Button>\r\n            </span>\r\n        )\r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                    bordered\r\n                    rowKey='_id'\r\n                    pagination={{ defaultPageSize: 5, showQuickJumper: true }}\r\n                    dataSource={roles}   //每一行的数据\r\n                    columns={this.columns} //每一列的数据\r\n                    rowSelection={{   //选择功能的配置\r\n                        selectedRowKeys: [role._id],  //指定选中项的 key 数组，需要和 onChange 进行配合\r\n                        type: 'radio'   //配置选择项是单选还是多选\r\n                    }}\r\n                    onRow={this.onRow}  //点击每一行的事件，可以看出是点击的哪一行\r\n                >\r\n                </Table>\r\n                <Modal\r\n                    title=\"添加角色\"\r\n                    visible={isShowAdd}\r\n                    //添加分类\r\n                    onOk={this.addRole}\r\n                    onCancel={() => { this.setState({ isShowAdd: false }) }}\r\n                >\r\n                    {/* 把接收的form存到父组件里面 */}\r\n                    <AddForm setForm={(form) => { this.form = form }}></AddForm>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}