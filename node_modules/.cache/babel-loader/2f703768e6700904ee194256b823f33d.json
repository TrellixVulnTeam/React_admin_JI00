{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"C:\\\\Users\\\\itryl\\\\Desktop\\\\React client\\\\client\\\\src\\\\pages\\\\role\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { PAGE_SIZE } from \"../../utils/constants\";\nimport { reqRoles, reqAddRole, reqUpdateRole } from '../../api';\nimport AddForm from './add-form';\nimport AuthForm from './auth-form'; // import {formateDate} from '../../utils/dateUtils'\n\nimport { logout } from '../../redux/actions';\n/*\r\n角色路由\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Role extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roles: [],\n      // 所有角色的列表\n      role: {},\n      // 选中的role\n      isShowAdd: false,\n      // 是否显示添加界面\n      isShowAuth: false // 是否显示设置权限界面\n\n    };\n\n    this.initColumn = () => {\n      this.columns = [{\n        title: '角色名称',\n        dataIndex: 'name'\n      }, {\n        title: '创建时间',\n        dataIndex: 'create_time',\n        render: create_time => formateDate(create_time)\n      }, {\n        title: '授权时间',\n        dataIndex: 'auth_time',\n        render: formateDate\n      }, {\n        title: '授权人',\n        dataIndex: 'auth_name'\n      }];\n    };\n\n    this.getRoles = async () => {\n      const result = await reqRoles();\n\n      if (result.status === 0) {\n        const roles = result.data;\n        this.setState({\n          roles\n        });\n      }\n    };\n\n    this.onRow = role => {\n      return {\n        onClick: event => {\n          // 点击行\n          console.log('row onClick()', role); // alert('点击行')\n\n          this.setState({\n            role\n          });\n        }\n      };\n    };\n\n    this.addRole = () => {\n      // 进行表单验证, 只能通过了才向下处理\n      this.form.validateFields(async (error, values) => {\n        if (!error) {\n          // 隐藏确认框\n          this.setState({\n            isShowAdd: false\n          }); // 收集输入数据\n\n          const {\n            roleName\n          } = values;\n          this.form.resetFields(); // 请求添加\n\n          const result = await reqAddRole(roleName); // 根据结果提示/更新列表显示\n\n          if (result.status === 0) {\n            _message.success('添加角色成功'); // this.getRoles()\n            // 新产生的角色\n\n\n            const role = result.data; // 更新roles状态\n\n            /*const roles = this.state.roles\r\n            roles.push(role)\r\n            this.setState({\r\n              roles\r\n            })*/\n            // 更新roles状态: 基于原本状态数据更新\n\n            this.setState(state => ({\n              roles: [...state.roles, role]\n            }));\n          } else {\n            _message.success('添加角色失败');\n          }\n        }\n      });\n    };\n\n    this.updateRole = async () => {\n      // 隐藏确认框\n      this.setState({\n        isShowAuth: false\n      });\n      const role = this.state.role; // 得到最新的menus\n\n      const menus = this.auth.current.getMenus();\n      role.menus = menus;\n      role.auth_time = Date.now();\n      role.auth_name = this.props.user.username; // 请求更新\n\n      const result = await reqUpdateRole(role);\n\n      if (result.status === 0) {\n        // this.getRoles()\n        // 如果当前更新的是自己角色的权限, 强制退出\n        if (role._id === this.props.user.role_id) {\n          this.props.logout();\n\n          _message.success('当前用户角色权限成功');\n        } else {\n          _message.success('设置角色权限成功');\n\n          this.setState({\n            roles: [...this.state.roles]\n          });\n        }\n      }\n    };\n\n    this.auth = /*#__PURE__*/React.createRef();\n  }\n\n  componentWillMount() {\n    this.initColumn();\n  }\n\n  componentDidMount() {\n    this.getRoles();\n  }\n\n  render() {\n    const {\n      roles,\n      role,\n      isShowAdd,\n      isShowAuth\n    } = this.state;\n\n    const title = /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(_Button, {\n        type: \"primary\",\n        onClick: () => this.setState({\n          isShowAdd: true\n        }),\n        children: \"\\u521B\\u5EFA\\u89D2\\u8272\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), \" \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(_Button, {\n        type: \"primary\",\n        disabled: !role._id,\n        onClick: () => this.setState({\n          isShowAuth: true\n        }),\n        children: \"\\u8BBE\\u7F6E\\u89D2\\u8272\\u6743\\u9650\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      title: title,\n      children: [/*#__PURE__*/_jsxDEV(_Table, {\n        bordered: true,\n        rowKey: \"_id\",\n        dataSource: roles,\n        columns: this.columns,\n        pagination: {\n          defaultPageSize: PAGE_SIZE\n        },\n        rowSelection: {\n          type: 'radio',\n          selectedRowKeys: [role._id],\n          onSelect: role => {\n            // 选择某个radio时回调\n            this.setState({\n              role\n            });\n          }\n        },\n        onRow: this.onRow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n        title: \"\\u6DFB\\u52A0\\u89D2\\u8272\",\n        visible: isShowAdd,\n        onOk: this.addRole,\n        onCancel: () => {\n          this.setState({\n            isShowAdd: false\n          });\n          this.form.resetFields();\n        },\n        children: /*#__PURE__*/_jsxDEV(AddForm, {\n          setForm: form => this.form = form\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n        title: \"\\u8BBE\\u7F6E\\u89D2\\u8272\\u6743\\u9650\",\n        visible: isShowAuth,\n        onOk: this.updateRole,\n        onCancel: () => {\n          this.setState({\n            isShowAuth: false\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(AuthForm, {\n          ref: this.auth,\n          role: role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user\n}), {\n  logout\n})(Role);","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/pages/role/index.jsx"],"names":["React","Component","connect","PAGE_SIZE","reqRoles","reqAddRole","reqUpdateRole","AddForm","AuthForm","logout","Role","constructor","props","state","roles","role","isShowAdd","isShowAuth","initColumn","columns","title","dataIndex","render","create_time","formateDate","getRoles","result","status","data","setState","onRow","onClick","event","console","log","addRole","form","validateFields","error","values","roleName","resetFields","success","updateRole","menus","auth","current","getMenus","auth_time","Date","now","auth_name","user","username","_id","role_id","createRef","componentWillMount","componentDidMount","defaultPageSize","type","selectedRowKeys","onSelect"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  message\r\n} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {PAGE_SIZE} from \"../../utils/constants\"\r\nimport {reqRoles, reqAddRole, reqUpdateRole} from '../../api'\r\nimport AddForm from './add-form'\r\nimport AuthForm from './auth-form'\r\n// import {formateDate} from '../../utils/dateUtils'\r\nimport {logout} from '../../redux/actions'\r\n\r\n/*\r\n角色路由\r\n */\r\nclass Role extends Component {\r\n\r\n  state = {\r\n    roles: [], // 所有角色的列表\r\n    role: {}, // 选中的role\r\n    isShowAdd: false, // 是否显示添加界面\r\n    isShowAuth: false, // 是否显示设置权限界面\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.auth = React.createRef()\r\n  }\r\n\r\n  initColumn = () => {\r\n    this.columns = [\r\n      {\r\n        title: '角色名称',\r\n        dataIndex: 'name'\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'create_time',\r\n        render: (create_time) => formateDate(create_time)\r\n      },\r\n      {\r\n        title: '授权时间',\r\n        dataIndex: 'auth_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '授权人',\r\n        dataIndex: 'auth_name'\r\n      },\r\n    ]\r\n  }\r\n\r\n  getRoles = async () => {\r\n    const result = await reqRoles()\r\n    if (result.status===0) {\r\n      const roles = result.data\r\n      this.setState({\r\n        roles\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  onRow = (role) => {\r\n    return {\r\n      onClick: event => { // 点击行\r\n        console.log('row onClick()', role)\r\n        // alert('点击行')\r\n        this.setState({\r\n          role\r\n        })\r\n      },\r\n    }\r\n  }\r\n\r\n  /*\r\n  添加角色\r\n   */\r\n  addRole = () => {\r\n    // 进行表单验证, 只能通过了才向下处理\r\n    this.form.validateFields(async (error, values) => {\r\n      if (!error) {\r\n\r\n        // 隐藏确认框\r\n        this.setState({\r\n          isShowAdd: false\r\n        })\r\n\r\n        // 收集输入数据\r\n        const {roleName} = values\r\n        this.form.resetFields()\r\n\r\n        // 请求添加\r\n        const result = await reqAddRole(roleName)\r\n        // 根据结果提示/更新列表显示\r\n        if (result.status===0) {\r\n          message.success('添加角色成功')\r\n          // this.getRoles()\r\n          // 新产生的角色\r\n          const role = result.data\r\n          // 更新roles状态\r\n          /*const roles = this.state.roles\r\n          roles.push(role)\r\n          this.setState({\r\n            roles\r\n          })*/\r\n\r\n          // 更新roles状态: 基于原本状态数据更新\r\n          this.setState(state => ({\r\n            roles: [...state.roles, role]\r\n          }))\r\n\r\n        } else {\r\n          message.success('添加角色失败')\r\n        }\r\n\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  /*\r\n  更新角色\r\n   */\r\n  updateRole = async () => {\r\n\r\n    // 隐藏确认框\r\n    this.setState({\r\n      isShowAuth: false\r\n    })\r\n\r\n    const role = this.state.role\r\n    // 得到最新的menus\r\n    const menus = this.auth.current.getMenus()\r\n    role.menus = menus\r\n    role.auth_time = Date.now()\r\n    role.auth_name = this.props.user.username\r\n\r\n    // 请求更新\r\n    const result = await reqUpdateRole(role)\r\n    if (result.status===0) {\r\n      // this.getRoles()\r\n      // 如果当前更新的是自己角色的权限, 强制退出\r\n      if (role._id === this.props.user.role_id) {\r\n        this.props.logout()\r\n        message.success('当前用户角色权限成功')\r\n      } else {\r\n        message.success('设置角色权限成功')\r\n        this.setState({\r\n          roles: [...this.state.roles]\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.initColumn()\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getRoles()\r\n  }\r\n\r\n  render() {\r\n\r\n    const {roles, role, isShowAdd, isShowAuth} = this.state\r\n\r\n    const title = (\r\n      <span>\r\n        <Button type='primary' onClick={() => this.setState({isShowAdd: true})}>创建角色</Button> &nbsp;&nbsp;\r\n        <Button type='primary' disabled={!role._id} onClick={() => this.setState({isShowAuth: true})}>设置角色权限</Button>\r\n      </span>\r\n    )\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          dataSource={roles}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize: PAGE_SIZE}}\r\n          rowSelection={{\r\n            type: 'radio',\r\n            selectedRowKeys: [role._id],\r\n            onSelect: (role) => { // 选择某个radio时回调\r\n              this.setState({\r\n                role\r\n              })\r\n            }\r\n\r\n          }}\r\n          onRow={this.onRow}\r\n        />\r\n\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={isShowAdd}\r\n          onOk={this.addRole}\r\n          onCancel={() => {\r\n            this.setState({isShowAdd: false})\r\n            this.form.resetFields()\r\n          }}\r\n        >\r\n          <AddForm\r\n            setForm={(form) => this.form = form}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"设置角色权限\"\r\n          visible={isShowAuth}\r\n          onOk={this.updateRole}\r\n          onCancel={() => {\r\n            this.setState({isShowAuth: false})\r\n          }}\r\n        >\r\n          <AuthForm ref={this.auth} role={role}/>\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {logout}\r\n)(Role)"]},"metadata":{},"sourceType":"module"}