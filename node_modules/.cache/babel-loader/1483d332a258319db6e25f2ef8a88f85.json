{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import\"antd/es/modal/style\";import _Modal from\"antd/es/modal\";import _classCallCheck from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./index.less';import formateDate from'../../utils/dateUtils';import{reqWeather}from'../../api/index';import{withRouter}from'react-router-dom';import LinkButton from'../../components/link-button';import{connect}from'react-redux';import{logout}from'../../redux/actions';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Header=/*#__PURE__*/function(_Component){_inherits(Header,_Component);var _super=_createSuper(Header);function Header(){var _this;_classCallCheck(this,Header);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={currentTime:formateDate(Date.now()),//当前时间字符串\ncity:'',//城市\nweather:'',//天气\ntemperature:'',//温度\ntimer:''};_this.logout=function(){//显示确认框\n_Modal.confirm({title:'确定退出吗',// content: 'Some descriptions',\nonOk:function onOk(){_this.props.logout();//跳转到到login页面\n//   this.props.history.replace('/login')\n}});};_this.getTime=function(){//每隔1s获取当前时间，并且更新状态数据 currentTime\n_this.timer=setInterval(function(){var currentTime=formateDate(Date.now());_this.setState({currentTime:currentTime});},1000);};_this.getWeather=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$reqWeather,city,weather,temperature;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return reqWeather('410100');case 2:_yield$reqWeather=_context.sent;city=_yield$reqWeather.city;weather=_yield$reqWeather.weather;temperature=_yield$reqWeather.temperature;_this.setState({city:city,weather:weather,temperature:temperature});case 7:case\"end\":return _context.stop();}}},_callee);}));return _this;}_createClass(Header,[{key:\"componentWillUnmount\",value://清除定时器 当前组件死亡之前\nfunction componentWillUnmount(){clearInterval(this.timer);}//获取天气 \n},{key:\"componentDidMount\",value:// //获取标题\n// getTitle=()=>{\n//     //得到当前请求路径\n//     const path=this.props.location.pathname\n//     let title\n//     menuList.forEach((item)=>{\n//             if(item.key===path){  //如果当前item的key与path一致，那么就取出当前标题title\n//                title= item.title\n//             }else if(item.children){\n//                 //在所有的子item中查找\n//             const cItem=item.children.find(cItem=>\n//                      path.indexOf(cItem.key)===0)\n//                 //如果有值，则匹配到了\n//                 if(cItem){\n//                     title=cItem.title\n//                 }\n//             }\n//     })\n//     return title\n// }\n//第一次render之后执行，再次执行异步操作  \n//（1）发ajax请求 （2启动定时器\nfunction componentDidMount(){//获取当前时间\nthis.getTime();//获取当前天气显示\nthis.getWeather('410100');}},{key:\"render\",value:function render(){var _this$state=this.state,city=_this$state.city,temperature=_this$state.temperature,weather=_this$state.weather,currentTime=_this$state.currentTime;var username=this.props.user.username;//获取当前需要显示的标题\n// const title=this.getTitle()\nvar title=this.props.headTitle;//react-redux实现\n// console.log(title)\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-top\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u6B22\\u8FCE\\uFF0C\",username]}),/*#__PURE__*/_jsx(LinkButton,{onClick:this.logout,children:\"\\u9000\\u51FA\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-bottom\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header-bottom-left\",children:title}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-bottom-right\",children:[/*#__PURE__*/_jsx(\"span\",{children:currentTime}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u57CE\\u5E02\\uFF1A\",city]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u5929\\u6C14\\uFF1A\",weather]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u6E29\\u5EA6\\uFF1A\",temperature,\"\\u2103\"]})]})]})]});}}]);return Header;}(Component);export default connect(function(state){return{headTitle:state.headTitle,user:state.user};},{logout:logout})(withRouter(Header));","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/components/header/index.jsx"],"names":["React","Component","formateDate","reqWeather","withRouter","LinkButton","connect","logout","Header","state","currentTime","Date","now","city","weather","temperature","timer","confirm","title","onOk","props","getTime","setInterval","setState","getWeather","clearInterval","username","user","headTitle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './index.less'\r\nimport formateDate from '../../utils/dateUtils'\r\nimport  {reqWeather} from '../../api/index'\r\nimport {withRouter} from 'react-router-dom'\r\nimport LinkButton from '../../components/link-button'\r\nimport { Modal } from 'antd';\r\nimport {connect} from 'react-redux'\r\nimport {logout} from '../../redux/actions'\r\n  class Header extends Component {\r\n    state={\r\n        currentTime:formateDate(Date.now()),   //当前时间字符串\r\n        city:'',  //城市\r\n        weather:'', //天气\r\n        temperature:'', //温度\r\n        timer:''\r\n    }\r\n \r\n    //退出登录\r\n    logout=()=>{\r\n        //显示确认框\r\n        Modal.confirm({\r\n            title: '确定退出吗', \r\n            // content: 'Some descriptions',\r\n            onOk:()=> {\r\n             this.props.logout()\r\n              //跳转到到login页面\r\n            //   this.props.history.replace('/login')\r\n            },\r\n        })\r\n    }\r\n    //获取时间\r\n    getTime=()=>{\r\n        //每隔1s获取当前时间，并且更新状态数据 currentTime\r\n       this.timer= setInterval(()=>{\r\n           const currentTime=formateDate(Date.now())\r\n           this.setState({currentTime})\r\n        },1000)\r\n    }\r\n\r\n    //清除定时器 当前组件死亡之前\r\n    componentWillUnmount(){\r\n        clearInterval(this.timer)\r\n    }\r\n\r\n    //获取天气 \r\n     getWeather=async()=>{\r\n        const{city,weather,temperature}=await reqWeather('410100')\r\n        this.setState({city,weather,temperature})\r\n    }\r\n\r\n    // //获取标题\r\n    // getTitle=()=>{\r\n    //     //得到当前请求路径\r\n    //     const path=this.props.location.pathname\r\n    //     let title\r\n    //     menuList.forEach((item)=>{\r\n    //             if(item.key===path){  //如果当前item的key与path一致，那么就取出当前标题title\r\n    //                title= item.title\r\n    //             }else if(item.children){\r\n    //                 //在所有的子item中查找\r\n    //             const cItem=item.children.find(cItem=>\r\n    //                      path.indexOf(cItem.key)===0)\r\n                    \r\n    //                 //如果有值，则匹配到了\r\n    //                 if(cItem){\r\n    //                     title=cItem.title\r\n    //                 }\r\n    //             }\r\n    //     })\r\n    //     return title\r\n    // }\r\n\r\n   //第一次render之后执行，再次执行异步操作  \r\n    //（1）发ajax请求 （2启动定时器\r\n    componentDidMount(){\r\n        //获取当前时间\r\n        this.getTime()\r\n        //获取当前天气显示\r\n        this.getWeather('410100')\r\n     }\r\n \r\n    render() {\r\n        const {city,temperature,weather,currentTime}=this.state\r\n        const username=this.props.user.username\r\n             //获取当前需要显示的标题\r\n        // const title=this.getTitle()\r\n        const title=this.props.headTitle  //react-redux实现\r\n        // console.log(title)\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header-top\">\r\n                    <span>欢迎，{username}</span>\r\n                   <LinkButton onClick={this.logout}>退出</LinkButton>\r\n                </div>\r\n                <div className=\"header-bottom\">\r\n                    <div className=\"header-bottom-left\">{title}</div>\r\n                    <div className=\"header-bottom-right\">\r\n                        <span>{currentTime}</span>\r\n                        {/* 当前城市 */}\r\n                        <span>城市：{city}</span>  \r\n                        {/* 天气 */}\r\n                        <span>天气：{weather}</span>\r\n                        {/* 温度 */}\r\n                        <span>温度：{temperature}℃</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(\r\n    state=>({headTitle:state.headTitle,user:state.user}),\r\n    {logout}\r\n)(withRouter(Header))"]},"metadata":{},"sourceType":"module"}