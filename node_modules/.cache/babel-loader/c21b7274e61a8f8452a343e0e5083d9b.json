{"ast":null,"code":"import _classCallCheck from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/*\r\n用来指定商品详情的富文本编辑器组件\r\n */import React,{Component}from'react';import{EditorState,convertToRaw,ContentState}from'draft-js';import{Editor}from'react-draft-wysiwyg';import draftToHtml from'draftjs-to-html';import htmlToDraft from'html-to-draftjs';import'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';import{jsx as _jsx}from\"react/jsx-runtime\";var RichTextEditor=/*#__PURE__*/function(_Component){_inherits(RichTextEditor,_Component);var _super=_createSuper(RichTextEditor);function RichTextEditor(props){var _this;_classCallCheck(this,RichTextEditor);_this=_super.call(this,props);_this.state={editorState:EditorState.createEmpty()// 创建一个没有内容的编辑对象\n};_this.onEditorStateChange=function(editorState){// console.log('onEditorStateChange()')\n_this.setState({editorState:editorState});};_this.getDetail=function(){// 返回输入数据对应的html格式的文本\nreturn draftToHtml(convertToRaw(_this.state.editorState.getCurrentContent()));};_this.uploadImageCallBack=function(file){return new Promise(function(resolve,reject){var xhr=new XMLHttpRequest();xhr.open('POST','/manage/img/upload');var data=new FormData();data.append('image',file);xhr.send(data);xhr.addEventListener('load',function(){var response=JSON.parse(xhr.responseText);var url=response.data.url;// 得到图片的url\nresolve({data:{link:url}});});xhr.addEventListener('error',function(){var error=JSON.parse(xhr.responseText);reject(error);});});};var html=_this.props.detail;if(html){// 如果有值, 根据html格式字符串创建一个对应的编辑对象\nvar contentBlock=htmlToDraft(html);var contentState=ContentState.createFromBlockArray(contentBlock.contentBlocks);var editorState=EditorState.createWithContent(contentState);_this.state={editorState:editorState};}else{_this.state={editorState:EditorState.createEmpty()// 创建一个没有内容的编辑对象\n};}return _this;}/*\r\n  输入过程中实时的回调\r\n   */_createClass(RichTextEditor,[{key:\"render\",value:function render(){var editorState=this.state.editorState;return/*#__PURE__*/_jsx(Editor,{editorState:editorState,editorStyle:{border:'1px solid black',minHeight:200,paddingLeft:10},onEditorStateChange:this.onEditorStateChange,toolbar:{image:{uploadCallback:this.uploadImageCallBack,alt:{present:true,mandatory:true}}}});}}]);return RichTextEditor;}(Component);export{RichTextEditor as default};","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/pages/products/rich-test-editor.jsx"],"names":["React","Component","EditorState","convertToRaw","ContentState","Editor","draftToHtml","htmlToDraft","RichTextEditor","props","state","editorState","createEmpty","onEditorStateChange","setState","getDetail","getCurrentContent","uploadImageCallBack","file","Promise","resolve","reject","xhr","XMLHttpRequest","open","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","url","link","error","html","detail","contentBlock","contentState","createFromBlockArray","contentBlocks","createWithContent","border","minHeight","paddingLeft","image","uploadCallback","alt","present","mandatory"],"mappings":"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","sourcesContent":["/*\r\n用来指定商品详情的富文本编辑器组件\r\n */\r\nimport React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {EditorState, convertToRaw, ContentState} from 'draft-js'\r\nimport {Editor} from 'react-draft-wysiwyg'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport htmlToDraft from 'html-to-draftjs'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\n\r\n\r\nexport default class RichTextEditor extends Component {\r\n  \r\n  static propTypes = {\r\n    detail: PropTypes.string  //接受传过来的商品详情\r\n  }\r\n  \r\n  state = {\r\n    editorState: EditorState.createEmpty(), // 创建一个没有内容的编辑对象\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    const html = this.props.detail\r\n    if (html) { // 如果有值, 根据html格式字符串创建一个对应的编辑对象\r\n      const contentBlock = htmlToDraft(html)\r\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks)\r\n      const editorState = EditorState.createWithContent(contentState)\r\n      this.state = {\r\n        editorState,\r\n      }\r\n    } else {\r\n      this.state = { \r\n        editorState: EditorState.createEmpty(), // 创建一个没有内容的编辑对象\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /*\r\n  输入过程中实时的回调\r\n   */\r\n  onEditorStateChange = (editorState) => {\r\n    // console.log('onEditorStateChange()')\r\n    this.setState({\r\n      editorState,\r\n    })\r\n  }\r\n\r\n  getDetail = () => {\r\n    // 返回输入数据对应的html格式的文本\r\n    return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n  }\r\n\r\n  uploadImageCallBack = (file) => {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        const xhr = new XMLHttpRequest()\r\n        xhr.open('POST', '/manage/img/upload')\r\n        const data = new FormData()\r\n        data.append('image', file)\r\n        xhr.send(data)\r\n        xhr.addEventListener('load', () => {\r\n          const response = JSON.parse(xhr.responseText)\r\n          const url = response.data.url // 得到图片的url\r\n          resolve({data: {link: url}})\r\n        })\r\n        xhr.addEventListener('error', () => {\r\n          const error = JSON.parse(xhr.responseText)\r\n          reject(error)\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {editorState} = this.state\r\n    return (\r\n      <Editor\r\n        editorState={editorState}\r\n        editorStyle={{border: '1px solid black', minHeight: 200, paddingLeft: 10}}\r\n        onEditorStateChange={this.onEditorStateChange}\r\n        toolbar={{\r\n          image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}