{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"C:\\\\Users\\\\itryl\\\\Desktop\\\\React client\\\\client\\\\src\\\\pages\\\\role\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { reqRoles, reqAddRole } from '../../api';\nimport AddForm from './add-form';\nimport AuthForm from './auth-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Role extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roles: [],\n      //所有角色的数组\n      role: {},\n      //选中的role \n      isShowAdd: false,\n      //标识确认框的显示 隐藏 添加角色\n      isShowAuth: false //角色权限的显示 隐藏 \n\n    };\n\n    this.initColumn = () => {\n      this.columns = [{\n        title: '角色名称',\n        dataIndex: 'name'\n      }, {\n        title: '创建时间',\n        dataIndex: 'create_time'\n      }, {\n        title: '授权时间',\n        dataIndex: 'auth_time'\n      }, {\n        title: '授权人',\n        dataIndex: 'auth_name'\n      }];\n    };\n\n    this.updateRole = () => {\n      const result = this.refs.auth;\n      console.log(result);\n      this.setState({\n        isShowAuth: false\n      });\n    };\n\n    this.addRole = () => {\n      this.form.validateFields(async (err, values) => {\n        //进行表单验证，只有通过了，才向下处理\n        if (!err) {\n          //收集输入数据\n          const {\n            roleName\n          } = values;\n          this.form.resetFields(); //清除表单数据\n          //请求添加\n\n          const result = await reqAddRole(roleName);\n\n          if (result.status === 0) {\n            _message.success('添加角色成功'); // this.getRoles()   //重新获取角色列表\n\n\n            const role = result.data; //拿到新产生的角色\n            //更新roles状态\n            //   const roles=[role,...this.state.roles]\n            //    this.setState({\n            //        roles\n            //    })\n            //更新roles状态：基于原本状态数据更新\n\n            this.setState(state => ({\n              roles: [role, ...state.roles]\n            }));\n          } else {\n            _message.error('添加角色失败');\n          } //隐藏确认框\n\n\n          this.setState({\n            isShowAdd: false //隐藏确认框\n\n          });\n        } else {\n          _message.error('请输入角色名称');\n        }\n      });\n    };\n\n    this.getRoles = async () => {\n      const result = await reqRoles();\n\n      if (result.status === 0) {\n        const roles = result.data;\n        this.setState({\n          roles\n        });\n      }\n    };\n\n    this.onRow = role => {\n      //role是点击当前行的的角色\n      return {\n        onClick: event => {\n          // 点击行\n          // console.log('row onClick()', role)\n          this.setState({\n            role //将选中的角色存起来\n\n          });\n        }\n      };\n    };\n\n    this.auth = /*#__PURE__*/React.createRef(); //创建一个容器为了拿到子组件里面的东西\n  } //列的数组  初始化列的数组\n\n\n  componentWillMount() {\n    this.initColumn();\n  }\n\n  componentDidMount() {\n    this.getRoles(); //获取所有角色列表\n  }\n\n  render() {\n    const {\n      roles,\n      role,\n      isShowAdd,\n      isShowAuth\n    } = this.state;\n\n    const title = /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(_Button, {\n        type: \"primary\",\n        onClick: () => {\n          this.setState({\n            isShowAdd: true\n          });\n        },\n        children: \"\\u521B\\u5EFA\\u89D2\\u8272\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(_Button, {\n        type: \"primary\",\n        disabled: !role._id,\n        onClick: () => {\n          this.setState({\n            isShowAuth: true\n          });\n        },\n        children: \"\\u8BBE\\u7F6E\\u89D2\\u8272\\u6743\\u9650\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      title: title,\n      children: [/*#__PURE__*/_jsxDEV(_Table, {\n        bordered: true,\n        rowKey: \"_id\" //哪一行被选中\n        ,\n        pagination: {\n          defaultPageSize: 5,\n          showQuickJumper: true\n        },\n        dataSource: roles //每一行的数据\n        ,\n        columns: this.columns //每一列的数据\n        ,\n        rowSelection: {\n          //选择功能的配置\n          selectedRowKeys: [role._id],\n          //指定选中项的 key 数组，需要和 onChange 进行配合\n          type: 'radio' //配置选择项是单选还是多选\n\n        },\n        onRow: this.onRow //点击每一行的事件，可以看出是点击的哪一行\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n        title: \"\\u6DFB\\u52A0\\u89D2\\u8272\",\n        visible: isShowAdd //添加分类\n        ,\n        onOk: this.addRole,\n        onCancel: () => {\n          this.setState({\n            isShowAdd: false\n          });\n          this.form.resetFields(); //点击取消的时候，清除输入框的内容\n        },\n        children: /*#__PURE__*/_jsxDEV(AddForm, {\n          setForm: form => {\n            this.form = form;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n        title: \"\\u8BBE\\u7F6E\\u89D2\\u8272\\u6743\\u9650\",\n        visible: isShowAuth //设置角色权限\n        ,\n        onOk: this.updateRole,\n        onCancel: () => {\n          this.setState({\n            isShowAuth: false\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(AuthForm, {\n          role: role,\n          ref: this.auth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/pages/role/index.jsx"],"names":["React","Component","reqRoles","reqAddRole","AddForm","AuthForm","Role","constructor","props","state","roles","role","isShowAdd","isShowAuth","initColumn","columns","title","dataIndex","updateRole","result","refs","auth","console","log","setState","addRole","form","validateFields","err","values","roleName","resetFields","status","success","data","error","getRoles","onRow","onClick","event","createRef","componentWillMount","componentDidMount","render","_id","defaultPageSize","showQuickJumper","selectedRowKeys","type"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,WAArC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AACA,eAAe,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAOxCM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SANlBC,KAMkB,GANV;AACJC,MAAAA,KAAK,EAAE,EADH;AACU;AACdC,MAAAA,IAAI,EAAE,EAFF;AAEO;AACXC,MAAAA,SAAS,EAAE,KAHP;AAGe;AACnBC,MAAAA,UAAU,EAAC,KAJP,CAIe;;AAJf,KAMU;;AAAA,SAKlBC,UALkB,GAKL,MAAM;AACf,WAAKC,OAAL,GAAe,CACX;AACIC,QAAAA,KAAK,EAAE,MADX;AAEIC,QAAAA,SAAS,EAAE;AAFf,OADW,EAKX;AACID,QAAAA,KAAK,EAAE,MADX;AAEIC,QAAAA,SAAS,EAAE;AAFf,OALW,EASX;AACID,QAAAA,KAAK,EAAE,MADX;AAEIC,QAAAA,SAAS,EAAE;AAFf,OATW,EAaX;AACID,QAAAA,KAAK,EAAE,KADX;AAEIC,QAAAA,SAAS,EAAE;AAFf,OAbW,CAAf;AAkBH,KAxBiB;;AAAA,SA0BlBC,UA1BkB,GA0BP,MAAI;AACX,YAAMC,MAAM,GAAC,KAAKC,IAAL,CAAUC,IAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA,WAAKK,QAAL,CAAc;AAACX,QAAAA,UAAU,EAAC;AAAZ,OAAd;AACH,KA9BiB;;AAAA,SAgClBY,OAhCkB,GAgCT,MAAM;AACX,WAAKC,IAAL,CAAUC,cAAV,CAAyB,OAAMC,GAAN,EAAWC,MAAX,KAAsB;AAC3C;AACA,YAAI,CAACD,GAAL,EAAU;AACJ;AACA,gBAAM;AAACE,YAAAA;AAAD,cAAWD,MAAjB;AACA,eAAKH,IAAL,CAAUK,WAAV,GAHI,CAGqB;AAC3B;;AACA,gBAAMZ,MAAM,GAAG,MAAMhB,UAAU,CAAC2B,QAAD,CAA/B;;AACA,cAAGX,MAAM,CAACa,MAAP,KAAgB,CAAnB,EAAqB;AACjB,qBAAQC,OAAR,CAAgB,QAAhB,EADiB,CAEjB;;;AACA,kBAAMtB,IAAI,GAACQ,MAAM,CAACe,IAAlB,CAHiB,CAGO;AACxB;AACJ;AACA;AACA;AACA;AAEA;;AACA,iBAAKV,QAAL,CAAcf,KAAK,KAAG;AAClBC,cAAAA,KAAK,EAAC,CAACC,IAAD,EAAM,GAAGF,KAAK,CAACC,KAAf;AADY,aAAH,CAAnB;AAGC,WAdD,MAcK;AACD,qBAAQyB,KAAR,CAAc,QAAd;AACH,WAtBK,CAuBN;;;AACA,eAAKX,QAAL,CAAc;AACVZ,YAAAA,SAAS,EAAE,KADD,CACQ;;AADR,WAAd;AAGH,SA3BD,MA2BK;AACD,mBAAQuB,KAAR,CAAc,SAAd;AACH;AACJ,OAhCD;AAiCH,KAlEiB;;AAAA,SAqElBC,QArEkB,GAqEP,YAAY;AACnB,YAAMjB,MAAM,GAAG,MAAMjB,QAAQ,EAA7B;;AACA,UAAIiB,MAAM,CAACa,MAAP,KAAkB,CAAtB,EAAyB;AACrB,cAAMtB,KAAK,GAAGS,MAAM,CAACe,IAArB;AACA,aAAKV,QAAL,CAAc;AACVd,UAAAA;AADU,SAAd;AAGH;AACJ,KA7EiB;;AAAA,SAoFlB2B,KApFkB,GAoFT1B,IAAD,IAAU;AAAG;AACjB,aAAO;AACH2B,QAAAA,OAAO,EAAEC,KAAK,IAAI;AAAE;AAChB;AACA,eAAKf,QAAL,CAAc;AACVb,YAAAA,IADU,CACH;;AADG,WAAd;AAGH;AANE,OAAP;AAQH,KA7FiB;;AAEd,SAAKU,IAAL,gBAAUrB,KAAK,CAACwC,SAAN,EAAV,CAFc,CAEe;AAChC,GAVuC,CAWxC;;;AA0EAC,EAAAA,kBAAkB,GAAG;AACjB,SAAK3B,UAAL;AACH;;AACD4B,EAAAA,iBAAiB,GAAG;AAChB,SAAKN,QAAL,GADgB,CACE;AACrB;;AAWDO,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEjC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA,SAAf;AAA0BC,MAAAA;AAA1B,QAAwC,KAAKJ,KAAnD;;AACA,UAAMO,KAAK,gBACP;AAAA,8BACI;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKQ,QAAL,CAAc;AAAEZ,YAAAA,SAAS,EAAE;AAAb,WAAd;AAAoC,SAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,uBAEI;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAE,CAACD,IAAI,CAACiC,GAAvC;AAA4C,QAAA,OAAO,EAAE,MAAI;AAAC,eAAKpB,QAAL,CAAc;AAACX,YAAAA,UAAU,EAAC;AAAZ,WAAd;AAAiC,SAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;;AAMA,wBACI;AAAM,MAAA,KAAK,EAAEG,KAAb;AAAA,8BACI;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,MAAM,EAAC,KAFX,CAEkB;AAFlB;AAGI,QAAA,UAAU,EAAE;AAAE6B,UAAAA,eAAe,EAAE,CAAnB;AAAsBC,UAAAA,eAAe,EAAE;AAAvC,SAHhB;AAII,QAAA,UAAU,EAAEpC,KAJhB,CAIyB;AAJzB;AAKI,QAAA,OAAO,EAAE,KAAKK,OALlB,CAK2B;AAL3B;AAMI,QAAA,YAAY,EAAE;AAAI;AACdgC,UAAAA,eAAe,EAAE,CAACpC,IAAI,CAACiC,GAAN,CADP;AACoB;AAC9BI,UAAAA,IAAI,EAAE,OAFI,CAEM;;AAFN,SANlB;AAUI,QAAA,KAAK,EAAE,KAAKX,KAVhB,CAUwB;;AAVxB;AAAA;AAAA;AAAA;AAAA,cADJ,eAcI;AACI,QAAA,KAAK,EAAC,0BADV;AAEI,QAAA,OAAO,EAAEzB,SAFb,CAGI;AAHJ;AAII,QAAA,IAAI,EAAE,KAAKa,OAJf;AAKI,QAAA,QAAQ,EAAE,MAAM;AAAE,eAAKD,QAAL,CAAc;AAAEZ,YAAAA,SAAS,EAAE;AAAb,WAAd;AAClB,eAAKc,IAAL,CAAUK,WAAV,GADgB,CACU;AAC7B,SAPD;AAAA,+BAUI,QAAC,OAAD;AAAS,UAAA,OAAO,EAAGL,IAAD,IAAU;AAAE,iBAAKA,IAAL,GAAYA,IAAZ;AAAkB;AAAhD;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,cAdJ,eA0BI;AACI,QAAA,KAAK,EAAC,sCADV;AAEI,QAAA,OAAO,EAAEb,UAFb,CAGI;AAHJ;AAII,QAAA,IAAI,EAAE,KAAKK,UAJf;AAKI,QAAA,QAAQ,EAAE,MAAM;AAAE,eAAKM,QAAL,CAAc;AAAEX,YAAAA,UAAU,EAAE;AAAd,WAAd;AACrB,SAND;AAAA,+BASI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEF,IAAhB;AAAsB,UAAA,GAAG,EAAE,KAAKU;AAAhC;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,cA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAwCH;;AArJuC","sourcesContent":["import React, { Component } from 'react'\r\nimport { Card, Button, Table, Modal, message } from 'antd'\r\nimport { reqRoles, reqAddRole } from '../../api'\r\nimport AddForm from './add-form'\r\nimport AuthForm from './auth-form'\r\nexport default class Role extends Component {\r\n    state = {\r\n        roles: [],    //所有角色的数组\r\n        role: {},  //选中的role \r\n        isShowAdd: false,  //标识确认框的显示 隐藏 添加角色\r\n        isShowAuth:false,  //角色权限的显示 隐藏 \r\n    }\r\n    constructor(props){\r\n        super(props)\r\n        this.auth=React.createRef()  //创建一个容器为了拿到子组件里面的东西\r\n    }\r\n    //列的数组  初始化列的数组\r\n    initColumn = () => {\r\n        this.columns = [\r\n            {\r\n                title: '角色名称',\r\n                dataIndex: 'name',\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'create_time',\r\n            },\r\n            {\r\n                title: '授权时间',\r\n                dataIndex: 'auth_time',\r\n            },\r\n            {\r\n                title: '授权人',\r\n                dataIndex: 'auth_name',\r\n            }\r\n        ]\r\n    }\r\n    //更新角色的回调  设置角色的权限\r\n    updateRole=()=>{\r\n        const result=this.refs.auth\r\n        console.log(result)\r\n        this.setState({isShowAuth:false})\r\n    }\r\n    //添加角色 添加角色的确认按钮\r\n    addRole =() => {\r\n        this.form.validateFields(async(err, values) => {\r\n            //进行表单验证，只有通过了，才向下处理\r\n            if (!err) {\r\n                  //收集输入数据\r\n                  const {roleName}=values\r\n                  this.form.resetFields()  //清除表单数据\r\n                //请求添加\r\n                const result = await reqAddRole(roleName)\r\n                if(result.status===0){\r\n                    message.success('添加角色成功')\r\n                    // this.getRoles()   //重新获取角色列表\r\n                    const role=result.data  //拿到新产生的角色\r\n                    //更新roles状态\r\n                //   const roles=[role,...this.state.roles]\r\n                //    this.setState({\r\n                //        roles\r\n                //    })\r\n\r\n                //更新roles状态：基于原本状态数据更新\r\n                this.setState(state=>({\r\n                    roles:[role,...state.roles]\r\n                }))\r\n                }else{\r\n                    message.error('添加角色失败')\r\n                }\r\n                //隐藏确认框\r\n                this.setState({\r\n                    isShowAdd: false  //隐藏确认框\r\n                })\r\n            }else{\r\n                message.error('请输入角色名称')\r\n            }\r\n        })\r\n    }\r\n\r\n    //获取角色列表的方法\r\n    getRoles = async () => {\r\n        const result = await reqRoles()\r\n        if (result.status === 0) {\r\n            const roles = result.data\r\n            this.setState({\r\n                roles\r\n            })\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.initColumn()\r\n    }\r\n    componentDidMount() {\r\n        this.getRoles()   //获取所有角色列表\r\n    }\r\n    onRow = (role) => {  //role是点击当前行的的角色\r\n        return {\r\n            onClick: event => { // 点击行\r\n                // console.log('row onClick()', role)\r\n                this.setState({\r\n                    role   //将选中的角色存起来\r\n                })\r\n            },\r\n        }\r\n    }\r\n    render() {\r\n        const { roles, role, isShowAdd ,isShowAuth} = this.state\r\n        const title = (\r\n            <span>\r\n                <Button type='primary' onClick={() => { this.setState({ isShowAdd: true }) }}>创建角色</Button>&nbsp;\r\n                <Button type='primary' disabled={!role._id} onClick={()=>{this.setState({isShowAuth:true})}}>设置角色权限</Button>\r\n            </span>\r\n        )\r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                    bordered\r\n                    rowKey='_id'  //哪一行被选中\r\n                    pagination={{ defaultPageSize: 5, showQuickJumper: true }}\r\n                    dataSource={roles}   //每一行的数据\r\n                    columns={this.columns} //每一列的数据\r\n                    rowSelection={{   //选择功能的配置\r\n                        selectedRowKeys: [role._id],  //指定选中项的 key 数组，需要和 onChange 进行配合\r\n                        type: 'radio'   //配置选择项是单选还是多选\r\n                    }}\r\n                    onRow={this.onRow}  //点击每一行的事件，可以看出是点击的哪一行\r\n                >\r\n                </Table>\r\n                <Modal\r\n                    title=\"添加角色\"\r\n                    visible={isShowAdd}\r\n                    //添加分类\r\n                    onOk={this.addRole}\r\n                    onCancel={() => { this.setState({ isShowAdd: false })\r\n                    this.form.resetFields()   //点击取消的时候，清除输入框的内容\r\n                }}\r\n                >\r\n                    {/* 把接收的form存到父组件里面 */}\r\n                    <AddForm setForm={(form) => { this.form = form }}></AddForm>\r\n                </Modal>\r\n                <Modal\r\n                    title=\"设置角色权限\"\r\n                    visible={isShowAuth}\r\n                    //设置角色权限\r\n                    onOk={this.updateRole}\r\n                    onCancel={() => { this.setState({ isShowAuth: false })\r\n                }}\r\n                >\r\n                    {/* 把当前选中的role传给权限子组件 */}\r\n                    <AuthForm role={role} ref={this.auth}></AuthForm>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}