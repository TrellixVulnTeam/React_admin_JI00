{"ast":null,"code":"//包含n个actions_creator函数的模块\n//同步action 对象{type:'xxx',data:数据值}\n//异步action 函数dispatch=>{}\n//设置头部标题的同步action\nimport { SET_HEAD_TITLE, RECEIVE_USER, SHOW_ERROR_MSG } from './action-types';\nimport { reqLogin } from '../api/index';\nexport const setHeadTitle = headTitle => ({\n  type: SET_HEAD_TITLE,\n  data: headTitle\n}); //接收用户的同步action\n\nexport const receiveUser = user => ({\n  type: RECEIVE_USER,\n  user\n}); //显示错误信息的同步action\n\nexport const showErrMsg = errorMsg => ({\n  type: SHOW_ERROR_MSG,\n  errorMsg\n}); //登录的异步action\n\nexport const login = (username, password) => {\n  return async dispatch => {\n    //1.执行异步ajax请求\n    const result = await reqLogin(username, password); //{status:0,data:user}  {status:1,msg:'xxxx'}\n    //2.如果成功，分发成功的同步action\n\n    if (result.status === 0) {\n      const user = result.data;\n      dispatch(receiveUser(user));\n    } //3.如果失败，分发失败的同步action\n    else {\n        const msg = result.msg;\n        dispatch(showErrMsg(msg));\n      }\n  };\n};","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/redux/actions.js"],"names":["SET_HEAD_TITLE","RECEIVE_USER","SHOW_ERROR_MSG","reqLogin","setHeadTitle","headTitle","type","data","receiveUser","user","showErrMsg","errorMsg","login","username","password","dispatch","result","status","msg"],"mappings":"AAAA;AACA;AAEA;AAEA;AACA,SAAQA,cAAR,EAAuBC,YAAvB,EAAoCC,cAApC,QAAyD,gBAAzD;AACA,SAAQC,QAAR,QAAuB,cAAvB;AAEA,OAAO,MAAMC,YAAY,GAAEC,SAAD,KAAc;AAACC,EAAAA,IAAI,EAACN,cAAN;AAAqBO,EAAAA,IAAI,EAACF;AAA1B,CAAd,CAAnB,C,CAGP;;AACA,OAAO,MAAMG,WAAW,GAAEC,IAAD,KAAS;AAACH,EAAAA,IAAI,EAACL,YAAN;AAAmBQ,EAAAA;AAAnB,CAAT,CAAlB,C,CACP;;AACA,OAAO,MAAMC,UAAU,GAAEC,QAAD,KAAa;AAACL,EAAAA,IAAI,EAACJ,cAAN;AAAqBS,EAAAA;AAArB,CAAb,CAAjB,C,CAEP;;AACA,OAAO,MAAMC,KAAK,GAAC,CAACC,QAAD,EAAUC,QAAV,KAAqB;AACpC,SAAO,MAAMC,QAAN,IAAgB;AACnB;AACF,UAAMC,MAAM,GAAC,MAAOb,QAAQ,CAACU,QAAD,EAAUC,QAAV,CAA5B,CAFqB,CAE4B;AAC/C;;AACA,QAAGE,MAAM,CAACC,MAAP,KAAgB,CAAnB,EAAqB;AACjB,YAAMR,IAAI,GAACO,MAAM,CAACT,IAAlB;AACAQ,MAAAA,QAAQ,CAACP,WAAW,CAACC,IAAD,CAAZ,CAAR;AACH,KAHD,CAIA;AAJA,SAKI;AACA,cAAMS,GAAG,GAACF,MAAM,CAACE,GAAjB;AACAH,QAAAA,QAAQ,CAACL,UAAU,CAACQ,GAAD,CAAX,CAAR;AACH;AACJ,GAbD;AAcH,CAfM","sourcesContent":["//包含n个actions_creator函数的模块\r\n//同步action 对象{type:'xxx',data:数据值}\r\n\r\n//异步action 函数dispatch=>{}\r\n\r\n//设置头部标题的同步action\r\nimport {SET_HEAD_TITLE,RECEIVE_USER,SHOW_ERROR_MSG} from './action-types'\r\nimport {reqLogin} from '../api/index'\r\nimport { message } from 'antd'\r\nexport const setHeadTitle=(headTitle)=>({type:SET_HEAD_TITLE,data:headTitle})\r\n\r\n\r\n//接收用户的同步action\r\nexport const receiveUser=(user)=>({type:RECEIVE_USER,user})\r\n//显示错误信息的同步action\r\nexport const showErrMsg=(errorMsg)=>({type:SHOW_ERROR_MSG,errorMsg})\r\n\r\n//登录的异步action\r\nexport const login=(username,password)=>{\r\n    return async dispatch=>{\r\n        //1.执行异步ajax请求\r\n      const result=await  reqLogin(username,password)  //{status:0,data:user}  {status:1,msg:'xxxx'}\r\n        //2.如果成功，分发成功的同步action\r\n        if(result.status===0){\r\n            const user=result.data\r\n            dispatch(receiveUser(user))\r\n        }\r\n        //3.如果失败，分发失败的同步action\r\n        else{\r\n            const msg=result.msg\r\n            dispatch(showErrMsg(msg))\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}