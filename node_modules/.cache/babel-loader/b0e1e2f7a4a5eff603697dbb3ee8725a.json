{"ast":null,"code":"/*\r\n用来根据老的state和指定的action生成并返回新的state的函数\r\n */\nimport { combineReducers } from 'redux';\n/*\r\n用来管理头部标题的reducer函数\r\n */\n\nimport storageUtils from \"../utils/storageUtils\";\nimport { SET_HEAD_TITLE, RECEIVE_USER, SHOW_ERROR_MSG, RESET_USER } from './action-types';\nconst initHeadTitle = '';\n\nfunction headTitle(state = initHeadTitle, action) {\n  switch (action.type) {\n    case SET_HEAD_TITLE:\n      return action.data;\n\n    default:\n      return state || {};\n  }\n}\n/*\r\n用来管理当前登陆用户的reducer函数\r\n */\n\n\nconst initUser = storageUtils.getUser();\n\nfunction user(state = initUser, action) {\n  switch (action.type) {\n    case RECEIVE_USER:\n      return action.user;\n\n    case SHOW_ERROR_MSG:\n      const errorMsg = action.errorMsg; // state.errorMsg = errorMsg  // 不要直接修改原本状态数据\n\n      return { ...state,\n        errorMsg\n      };\n\n    case RESET_USER:\n      return {};\n\n    default:\n      return state;\n  }\n}\n/*\r\n向外默认暴露的是合并产生的总的reducer函数\r\n管理的总的state的结构:\r\n  {\r\n    headTitle: '首页',\r\n    user: {}\r\n  }\r\n */\n\n\nexport default combineReducers({\n  headTitle,\n  user\n});","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/redux/reducer.js"],"names":["combineReducers","storageUtils","SET_HEAD_TITLE","RECEIVE_USER","SHOW_ERROR_MSG","RESET_USER","initHeadTitle","headTitle","state","action","type","data","initUser","getUser","user","errorMsg"],"mappings":"AAAA;AACA;AACA;AACA,SAAQA,eAAR,QAA8B,OAA9B;AAEA;AACA;AACA;;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SACEC,cADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,UAJF,QAKO,gBALP;AAOA,MAAMC,aAAa,GAAG,EAAtB;;AAEA,SAASC,SAAT,CAAmBC,KAAK,GAAGF,aAA3B,EAA0CG,MAA1C,EAAkD;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,cAAL;AACE,aAAOO,MAAM,CAACE,IAAd;;AACF;AACE,aAAOH,KAAK,IAAE,EAAd;AAJJ;AAMD;AAED;AACA;AACA;;;AACA,MAAMI,QAAQ,GAAGX,YAAY,CAACY,OAAb,EAAjB;;AAEA,SAASC,IAAT,CAAcN,KAAK,GAAGI,QAAtB,EAAgCH,MAAhC,EAAwC;AACtC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,YAAL;AACE,aAAOM,MAAM,CAACK,IAAd;;AACF,SAAKV,cAAL;AACE,YAAMW,QAAQ,GAAGN,MAAM,CAACM,QAAxB,CADF,CAEE;;AACA,aAAO,EAAC,GAAGP,KAAJ;AAAWO,QAAAA;AAAX,OAAP;;AACF,SAAKV,UAAL;AACE,aAAO,EAAP;;AACF;AACE,aAAOG,KAAP;AAVJ;AAYD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeR,eAAe,CAAC;AAC7BO,EAAAA,SAD6B;AAE7BO,EAAAA;AAF6B,CAAD,CAA9B","sourcesContent":["/*\r\n用来根据老的state和指定的action生成并返回新的state的函数\r\n */\r\nimport {combineReducers} from 'redux'\r\n\r\n/*\r\n用来管理头部标题的reducer函数\r\n */\r\nimport storageUtils from \"../utils/storageUtils\"\r\nimport {\r\n  SET_HEAD_TITLE,\r\n  RECEIVE_USER,\r\n  SHOW_ERROR_MSG,\r\n  RESET_USER\r\n} from './action-types'\r\n\r\nconst initHeadTitle = ''\r\n\r\nfunction headTitle(state = initHeadTitle, action) {\r\n  switch (action.type) {\r\n    case SET_HEAD_TITLE:\r\n      return action.data\r\n    default:\r\n      return state||{}\r\n  }\r\n}\r\n\r\n/*\r\n用来管理当前登陆用户的reducer函数\r\n */\r\nconst initUser = storageUtils.getUser()\r\n\r\nfunction user(state = initUser, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_USER:\r\n      return action.user\r\n    case SHOW_ERROR_MSG:\r\n      const errorMsg = action.errorMsg\r\n      // state.errorMsg = errorMsg  // 不要直接修改原本状态数据\r\n      return {...state, errorMsg}\r\n    case RESET_USER:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/*\r\n向外默认暴露的是合并产生的总的reducer函数\r\n管理的总的state的结构:\r\n  {\r\n    headTitle: '首页',\r\n    user: {}\r\n  }\r\n */\r\nexport default combineReducers({\r\n  headTitle,\r\n  user\r\n})"]},"metadata":{},"sourceType":"module"}