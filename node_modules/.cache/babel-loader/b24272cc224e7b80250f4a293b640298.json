{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itryl\\\\Desktop\\\\React client\\\\client\\\\src\\\\components\\\\header\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport './index.less';\nimport formateDate from '../../utils/dateUtils';\nimport { reqWeather } from '../../api/index';\nimport memoryUtils from '../../utils/memoryUtils';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Header extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentTime: formateDate(Date.now()),\n      //当前时间字符串\n      city: '',\n      //城市\n      weather: '',\n      //天气\n      temperature: '',\n      //温度\n      timer: ''\n    };\n\n    this.getTime = () => {\n      //每隔1s获取当前时间，并且更新状态数据 currentTime\n      this.timer = setInterval(() => {\n        const currentTime = formateDate(Date.now());\n        this.setState({\n          currentTime\n        });\n      }, 1000);\n    };\n\n    this.getWeather = async () => {\n      const {\n        city,\n        weather,\n        temperature\n      } = await reqWeather('410100');\n      this.setState({\n        city,\n        weather,\n        temperature\n      });\n    };\n\n    this.getTitle = () => {\n      //得到当前请求路径\n      const path = this.props.location.pathname;\n      console.log(path);\n    };\n  }\n\n  //第一次render之后执行，再次执行异步操作  \n  //（1）发ajax请求 （2启动定时器\n  componentDidMount() {\n    //获取当前时间\n    this.getTime(); //获取当前天气显示\n\n    this.getWeather('410100'); //获取当前标题\n\n    this.getTitle();\n  } //获取时间\n\n\n  //清除定时器\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  } //获取天气 \n\n\n  render() {\n    const {\n      city,\n      temperature,\n      weather,\n      currentTime\n    } = this.state;\n    const {\n      username\n    } = memoryUtils.user;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u6B22\\u8FCE\\uFF0C\", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"javascript:\",\n          children: \"\\u9000\\u51FA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-bottom-left\",\n          children: \"\\u9996\\u9875\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-bottom-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: currentTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u57CE\\u5E02\\uFF1A\", city]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u5929\\u6C14\\uFF1A\", weather]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u6E29\\u5EA6\\uFF1A\", temperature, \"\\u2103\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Header);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/components/header/index.jsx"],"names":["React","Component","formateDate","reqWeather","memoryUtils","withRouter","Header","state","currentTime","Date","now","city","weather","temperature","timer","getTime","setInterval","setState","getWeather","getTitle","path","props","location","pathname","console","log","componentDidMount","componentWillUnmount","clearInterval","render","username","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './index.less'\r\nimport formateDate from '../../utils/dateUtils'\r\nimport  {reqWeather} from '../../api/index'\r\nimport  memoryUtils from '../../utils/memoryUtils'\r\nimport {withRouter} from 'react-router-dom'\r\n class Header extends Component {\r\n    state={\r\n        currentTime:formateDate(Date.now()),   //当前时间字符串\r\n        city:'',  //城市\r\n        weather:'', //天气\r\n        temperature:'', //温度\r\n        timer:''\r\n    }\r\n    //第一次render之后执行，再次执行异步操作  \r\n    //（1）发ajax请求 （2启动定时器\r\n    componentDidMount(){\r\n       //获取当前时间\r\n       this.getTime()\r\n       //获取当前天气显示\r\n       this.getWeather('410100')\r\n       //获取当前标题\r\n       this.getTitle()\r\n    }\r\n\r\n    //获取时间\r\n    getTime=()=>{\r\n        //每隔1s获取当前时间，并且更新状态数据 currentTime\r\n       this.timer= setInterval(()=>{\r\n           const currentTime=formateDate(Date.now())\r\n           this.setState({currentTime})\r\n        },1000)\r\n    }\r\n\r\n    //清除定时器\r\n    componentWillUnmount(){\r\n        clearInterval(this.timer)\r\n    }\r\n\r\n    //获取天气 \r\n     getWeather=async()=>{\r\n        const{city,weather,temperature}=await reqWeather('410100')\r\n        this.setState({city,weather,temperature})\r\n    }\r\n\r\n    //获取标题\r\n    getTitle=()=>{\r\n        //得到当前请求路径\r\n        const path=this.props.location.pathname\r\n        console.log(path)\r\n    }\r\n    render() {\r\n        const {city,temperature,weather,currentTime}=this.state\r\n        const {username}=memoryUtils.user\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header-top\">\r\n                    <span>欢迎，{username}</span>\r\n                    <a href=\"javascript:\">退出</a>\r\n                </div>\r\n                <div className=\"header-bottom\">\r\n                    <div className=\"header-bottom-left\">首页</div>\r\n                    <div className=\"header-bottom-right\">\r\n                        <span>{currentTime}</span>\r\n                        {/* 当前城市 */}\r\n                        <span>城市：{city}</span>  \r\n                        {/* 天气 */}\r\n                        <span>天气：{weather}</span>\r\n                        {/* 温度 */}\r\n                        <span>温度：{temperature}℃</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Header)"]},"metadata":{},"sourceType":"module"}