{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nvar _jsxFileName = \"C:\\\\Users\\\\itryl\\\\Desktop\\\\React client\\\\client\\\\src\\\\components\\\\header\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport './index.less';\nimport formateDate from '../../utils/dateUtils';\nimport { reqWeather } from '../../api/index';\nimport memoryUtils from '../../utils/memoryUtils';\nimport { withRouter } from 'react-router-dom';\nimport menuList from '../../config/menuConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Header extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentTime: formateDate(Date.now()),\n      //当前时间字符串\n      city: '',\n      //城市\n      weather: '',\n      //天气\n      temperature: '',\n      //温度\n      timer: ''\n    };\n\n    this.logout = () => {\n      //显示确认框\n      _Modal.confirm({\n        title: '确定退出吗',\n\n        // content: 'Some descriptions',\n        onOk() {}\n\n      });\n    };\n\n    this.getTime = () => {\n      //每隔1s获取当前时间，并且更新状态数据 currentTime\n      this.timer = setInterval(() => {\n        const currentTime = formateDate(Date.now());\n        this.setState({\n          currentTime\n        });\n      }, 1000);\n    };\n\n    this.getWeather = async () => {\n      const {\n        city,\n        weather,\n        temperature\n      } = await reqWeather('410100');\n      this.setState({\n        city,\n        weather,\n        temperature\n      });\n    };\n\n    this.getTitle = () => {\n      //得到当前请求路径\n      const path = this.props.location.pathname;\n      let title;\n      menuList.forEach(item => {\n        if (item.key === path) {\n          //如果当前item的key与path一致，那么就取出当前标题title\n          title = item.title;\n        } else if (item.children) {\n          //在所有的子item中查找\n          const cItem = item.children.find(cItem => {\n            return cItem.key === path;\n          }); //如果有值，则匹配到了\n\n          if (cItem) {\n            title = cItem.title;\n          }\n        }\n      });\n      return title;\n    };\n  }\n\n  //清除定时器\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  } //获取天气 \n\n\n  //第一次render之后执行，再次执行异步操作  \n  //（1）发ajax请求 （2启动定时器\n  componentDidMount() {\n    //获取当前时间\n    this.getTime(); //获取当前天气显示\n\n    this.getWeather('410100');\n  }\n\n  render() {\n    const {\n      city,\n      temperature,\n      weather,\n      currentTime\n    } = this.state;\n    const {\n      username\n    } = memoryUtils.user; //获取当前需要显示的标题\n\n    const title = this.getTitle(); // console.log(title)\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u6B22\\u8FCE\\uFF0C\", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"javascript:\",\n          onClick: this.logout,\n          children: \"\\u9000\\u51FA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-bottom-left\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-bottom-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: currentTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u57CE\\u5E02\\uFF1A\", city]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u5929\\u6C14\\uFF1A\", weather]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u6E29\\u5EA6\\uFF1A\", temperature, \"\\u2103\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Header);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/components/header/index.jsx"],"names":["React","Component","formateDate","reqWeather","memoryUtils","withRouter","menuList","Header","state","currentTime","Date","now","city","weather","temperature","timer","logout","confirm","title","onOk","getTime","setInterval","setState","getWeather","getTitle","path","props","location","pathname","forEach","item","key","children","cItem","find","componentWillUnmount","clearInterval","componentDidMount","render","username","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './index.less'\r\nimport formateDate from '../../utils/dateUtils'\r\nimport  {reqWeather} from '../../api/index'\r\nimport  memoryUtils from '../../utils/memoryUtils'\r\nimport {withRouter} from 'react-router-dom'\r\nimport menuList from '../../config/menuConfig'\r\nimport { Modal } from 'antd';\r\n class Header extends Component {\r\n    state={\r\n        currentTime:formateDate(Date.now()),   //当前时间字符串\r\n        city:'',  //城市\r\n        weather:'', //天气\r\n        temperature:'', //温度\r\n        timer:''\r\n    }\r\n \r\n    //退出登录\r\n    logout=()=>{\r\n        //显示确认框\r\n        Modal.confirm({\r\n            title: '确定退出吗',\r\n            // content: 'Some descriptions',\r\n            onOk() {\r\n              \r\n            },\r\n        })\r\n    }\r\n    //获取时间\r\n    getTime=()=>{\r\n        //每隔1s获取当前时间，并且更新状态数据 currentTime\r\n       this.timer= setInterval(()=>{\r\n           const currentTime=formateDate(Date.now())\r\n           this.setState({currentTime})\r\n        },1000)\r\n    }\r\n\r\n    //清除定时器\r\n    componentWillUnmount(){\r\n        clearInterval(this.timer)\r\n    }\r\n\r\n    //获取天气 \r\n     getWeather=async()=>{\r\n        const{city,weather,temperature}=await reqWeather('410100')\r\n        this.setState({city,weather,temperature})\r\n    }\r\n\r\n    //获取标题\r\n    getTitle=()=>{\r\n        //得到当前请求路径\r\n        const path=this.props.location.pathname\r\n        let title\r\n        menuList.forEach((item)=>{\r\n                if(item.key===path){  //如果当前item的key与path一致，那么就取出当前标题title\r\n                   title= item.title\r\n                }else if(item.children){\r\n                    //在所有的子item中查找\r\n                const cItem=item.children.find((cItem)=>{\r\n                        return cItem.key===path\r\n                    })\r\n                    //如果有值，则匹配到了\r\n                    if(cItem){\r\n                        title=cItem.title\r\n                    }\r\n                }\r\n        })\r\n        return title\r\n    }\r\n\r\n   //第一次render之后执行，再次执行异步操作  \r\n    //（1）发ajax请求 （2启动定时器\r\n    componentDidMount(){\r\n        //获取当前时间\r\n        this.getTime()\r\n        //获取当前天气显示\r\n        this.getWeather('410100')\r\n     }\r\n \r\n    render() {\r\n        const {city,temperature,weather,currentTime}=this.state\r\n        const {username}=memoryUtils.user\r\n             //获取当前需要显示的标题\r\n        const title=this.getTitle()\r\n        // console.log(title)\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header-top\">\r\n                    <span>欢迎，{username}</span>\r\n                    <a href=\"javascript:\" onClick={this.logout}>退出</a>\r\n                </div>\r\n                <div className=\"header-bottom\">\r\n                    <div className=\"header-bottom-left\">{title}</div>\r\n                    <div className=\"header-bottom-right\">\r\n                        <span>{currentTime}</span>\r\n                        {/* 当前城市 */}\r\n                        <span>城市：{city}</span>  \r\n                        {/* 天气 */}\r\n                        <span>天气：{weather}</span>\r\n                        {/* 温度 */}\r\n                        <span>温度：{temperature}℃</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Header)"]},"metadata":{},"sourceType":"module"}