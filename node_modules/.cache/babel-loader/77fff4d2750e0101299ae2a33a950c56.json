{"ast":null,"code":"import\"antd/es/message/style\";import _message from\"antd/es/message\";import axios from'axios';export default function ajax(url){var data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var type=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'GET';return new Promise(function(resolve,reject){var promise;//1.执行异步ajax请求\nif(type==='GET'){//发送GET请求\npromise=axios.get(url,{//配置对象\nparams:data//指定请求参数\n});}else{//发送POST请求\npromise=axios.post(url,data);}//2.如果成功了，调用resolve(value)  promise.then()返回一个promise对象\npromise.then(function(value){resolve(value.data);//3.如果失败了，不调用reject(reason),而是提示错误信息\n}).catch(function(error){_message.error('请求出错了：'+error.message);});});}","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/api/ajax.js"],"names":["axios","ajax","url","data","type","Promise","resolve","reject","promise","get","params","post","then","value","catch","error","message"],"mappings":"oEAWA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,cAAe,SAASC,CAAAA,IAAT,CAAcC,GAAd,CAAqC,IAAnBC,CAAAA,IAAmB,2DAAd,EAAc,IAAXC,CAAAA,IAAW,2DAAN,KAAM,CAChD,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAASC,MAAT,CAAkB,CACjC,GAAIC,CAAAA,OAAJ,CACA;AACA,GAAGJ,IAAI,GAAG,KAAV,CAAgB,CAAe;AAC3BI,OAAO,CAAER,KAAK,CAACS,GAAN,CAAUP,GAAV,CAAc,CAAM;AACzBQ,MAAM,CAACP,IAAgB;AADJ,CAAd,CAAT,CAGH,CAJD,IAIK,CAA0B;AAC5BK,OAAO,CAAER,KAAK,CAACW,IAAN,CAAWT,GAAX,CAAeC,IAAf,CAAT,CACF,CACA;AACLK,OAAO,CAACI,IAAR,CAAa,SAACC,KAAD,CAAS,CAClBP,OAAO,CAACO,KAAK,CAACV,IAAP,CAAP,CACJ;AACC,CAHD,EAGGW,KAHH,CAGS,SAACC,KAAD,CAAS,CACd,SAAQA,KAAR,CAAc,SAASA,KAAK,CAACC,OAA7B,EACH,CALD,EAMC,CAjBM,CAAP,CAkBH","sourcesContent":["//能发送异步请求的ajax模块\r\n//函数的返回值是promise对象\r\n\r\n//统一处理请求异常？\r\n//  优化1：在外边包一个自己创建的promsie对象\r\n//在请求出错时，不reject，而是出现错误提示\r\n\r\n//  优化2：异步得到的不是response,而是response.data\r\n//  在请求成功时  :resolve(response.data)\r\n\r\nimport {message} from 'antd'\r\nimport axios from 'axios'\r\nexport default function ajax(url,data={},type='GET'){\r\n    return new Promise((resolve,reject)=>{\r\n        let promise\r\n        //1.执行异步ajax请求\r\n        if(type==='GET'){              //发送GET请求\r\n            promise= axios.get(url,{     //配置对象\r\n                params:data            //指定请求参数\r\n            })\r\n        }else{                         //发送POST请求\r\n           promise= axios.post(url,data)\r\n        }\r\n         //2.如果成功了，调用resolve(value)  promise.then()返回一个promise对象\r\n    promise.then((value)=>{\r\n        resolve(value.data)\r\n    //3.如果失败了，不调用reject(reason),而是提示错误信息\r\n    }).catch((error)=>{\r\n        message.error('请求出错了：'+error.message)\r\n    })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}