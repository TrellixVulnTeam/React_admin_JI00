{"ast":null,"code":"import\"antd/es/card/style\";import _Card from\"antd/es/card\";import\"antd/es/modal/style\";import _Modal from\"antd/es/modal\";import\"antd/es/table/style\";import _Table from\"antd/es/table\";import\"antd/es/button/style\";import _Button from\"antd/es/button\";import\"antd/es/icon/style\";import _Icon from\"antd/es/icon\";import\"antd/es/message/style\";import _message from\"antd/es/message\";import _regeneratorRuntime from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./index.less';import LinkButton from'../../components/link-button';import{reqCategorys,reqUpdateCategory,reqAddCategory}from'../../api/index';import AddForm from'./add-form';import UpdateForm from'./update-form';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Category=/*#__PURE__*/function(_Component){_inherits(Category,_Component);var _super=_createSuper(Category);function Category(){var _this;_classCallCheck(this,Category);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={categorys:[],//一级分类列表\nsubCategorys:[],//二级分类列表\nloading:false,//是否正在获取数据\nparentId:'0',//当前需要显示的分类列表的父分类ID\nparentName:'',//当前需要显示的分类列表的父分类名称\nshowStatus:0//标识添加/更新的确认框是否显示，0：都不显示  1：显示添加 2：显示更新\n};_this.initColumns=function(){_this.columns=[{title:'分类的名称',dataIndex:'name',//显示数据的对应的属性名\nkey:'name'},{title:'操作',width:300,dataIndex:'',//显示数据的对应的属性名\nkey:'x',render:function render(category){return/*#__PURE__*/ (//返回需要指定的界面标签\n_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(LinkButton,{onClick:function onClick(){_this.showUpdate(category);},children:\"\\u4FEE\\u6539\\u5206\\u7C7B\"}),_this.state.parentId==='0'?/*#__PURE__*/_jsx(LinkButton,{onClick:function onClick(){_this.showSubCategorys(category);},children:\"\\u67E5\\u770B\\u5B50\\u5206\\u7C7B\"}):null]}));}}];};_this.showAdd=function(){_this.setState({showStatus:1});};_this.addCategory=function(){_this.form.validateFields(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(err,values){var parentId,categoryName,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(err){_context.next=8;break;}// console.log('添加分类')\n_this.setState({showStatus:0});//获取数据  收集数据 提交请求\n// const parentId = this.form.getFieldValue('parentId')\n// const categoryName = this.form.getFieldValue('categoryName')\nparentId=values.parentId,categoryName=values.categoryName;//重置输入的数据\n_this.form.resetFields();_context.next=6;return reqAddCategory(categoryName,parentId);case 6:result=_context.sent;if(result.status===0){//修改成功\n//3.重新获取当前分类列表  添加的分类就是当前分类列表下的分类\nif(parentId===_this.state.parentId){_this.getCategorys();}else if(parentId==='0'){//在二级分类列表下添加一级分类,重新获取一级分类列表 不需要显示一级分类\n_this.getCategorys('0');}}case 8:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}());};_this.showUpdate=function(category){//保存分类对象\n_this.category=category;// console.log(categorys)\n_this.setState({showStatus:2});};_this.updateCategory=function(){//先进行表单验证，通过了才处理\n_this.form.validateFields(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(err,values){var categoryId,categoryName,result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(err){_context2.next=9;break;}//1.隐藏确认框\n_this.setState({showStatus:0});//2.发送请求更新\n//准备数据\ncategoryId=_this.category._id;//分类名字  接受子组件传来手动输入的值\n// const categoryName = this.form.getFieldValue('categoryName')\ncategoryName=values.categoryName;//重置输入的数据\n_this.form.resetFields();_context2.next=7;return reqUpdateCategory({categoryId:categoryId,categoryName:categoryName});case 7:result=_context2.sent;if(result.status===0){//修改成功\n//3.重新显示列表\n_this.getCategorys();}case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3,_x4){return _ref2.apply(this,arguments);};}());};_this.handleCancel=function(){//重置输入的数据\n_this.form.resetFields();//隐藏确认框\n_this.setState({showStatus:0});};_this.showFirstCategorys=function(){_this.setState({parentId:'0',parentName:'',subCategorys:[]});};_this.showSubCategorys=function(categorys){//更新状态(异步更新) setState不能立即获取最新的状态：因为setState是异步更新的\n_this.setState({parentId:categorys._id,parentName:categorys.name},function(){//  console.log(this.state.parentId)  //在状态更新后且render()后执行\n_this.getCategorys();});//二级分类列表\n// console.log(this.state.parentId,'21321')\n//  this.getCategorys()\n};_this.getCategorys=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(parentId){var res,categorys;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0://在发送请求前,显示loading\n_this.setState({loading:true});//发异步ajax请求，获取数据\nparentId=parentId||_this.state.parentId;_context3.next=4;return reqCategorys(parentId);case 4:res=_context3.sent;//在请求完成后,隐藏loading\n_this.setState({loading:false});if(res.status===0){categorys=res.data;//这个数组可能是一级的，也可能是二级的数组\n//更新状态\nif(parentId==='0'){//更新一级分类状态\n_this.setState({categorys:categorys});}else{}_this.setState({subCategorys:categorys});}else{_message.error('获取分类列表失败');}case 7:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x5){return _ref3.apply(this,arguments);};}();return _this;}_createClass(Category,[{key:\"componentWillMount\",value://初始化所有Table所有列的数组\nfunction componentWillMount(){this.initColumns();//初始化所有列的数组方法\n}//发送异步ajax请求 \n},{key:\"componentDidMount\",value:function componentDidMount(){this.getCategorys();}//初始化列的方法\n},{key:\"render\",value:function render(){var _this2=this;//读取状态数据\nvar _this$state=this.state,categorys=_this$state.categorys,loading=_this$state.loading,subCategorys=_this$state.subCategorys,parentId=_this$state.parentId,parentName=_this$state.parentName,showStatus=_this$state.showStatus;// console.log(this.columns)\n//读取指定的分类\nvar category=this.category||{};//如果还没有，先指定空对象\n//card的左侧\nvar title=parentId==='0'?'一级分类列表':/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(LinkButton,{onClick:this.showFirstCategorys,children:\"\\u4E00\\u7EA7\\u5206\\u7C7B\\u5217\\u8868\"}),/*#__PURE__*/_jsx(_Icon,{type:\"arrow-right\",style:{marginRight:10}}),/*#__PURE__*/_jsx(\"span\",{children:parentName})]});//card的右侧\nvar extra=/*#__PURE__*/_jsxs(_Button,{type:\"primary\",onClick:this.showAdd,children:[/*#__PURE__*/_jsx(_Icon,{type:\"plus\"}),\"\\u6DFB\\u52A0\"]});return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(_Card,{title:title,extra:extra,children:[/*#__PURE__*/_jsx(_Table,{loading:loading,dataSource:parentId==='0'?categorys:subCategorys,columns:this.columns,bordered:true,rowKey:\"_id\",pagination:{defaultPageSize:8,showQuickJumper:true}}),/*#__PURE__*/_jsx(_Modal,{title:\"\\u6DFB\\u52A0\\u5206\\u7C7B\",visible:showStatus===1?true:false//添加分类\n,onOk:this.addCategory,onCancel:this.handleCancel,children:/*#__PURE__*/_jsx(AddForm,{categorys:categorys,parentId:parentId,setForm:function setForm(form){_this2.form=form;}})}),/*#__PURE__*/_jsx(_Modal,{title:\"\\u66F4\\u65B0\\u5206\\u7C7B\",visible:showStatus===2?true:false//修改分类\n,onOk:this.updateCategory,onCancel:this.handleCancel,children:/*#__PURE__*/_jsx(UpdateForm,{categoryName:category.name,setForm:function setForm(form){_this2.form=form;}})})]})});}}]);return Category;}(Component);export{Category as default};","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/pages/category/index.jsx"],"names":["React","Component","LinkButton","reqCategorys","reqUpdateCategory","reqAddCategory","AddForm","UpdateForm","Category","state","categorys","subCategorys","loading","parentId","parentName","showStatus","initColumns","columns","title","dataIndex","key","width","render","category","showUpdate","showSubCategorys","showAdd","setState","addCategory","form","validateFields","err","values","categoryName","resetFields","result","status","getCategorys","updateCategory","categoryId","_id","handleCancel","showFirstCategorys","name","res","data","error","marginRight","extra","defaultPageSize","showQuickJumper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Card, Table, Button, Icon, message, Modal } from 'antd';\r\nimport './index.less'\r\nimport LinkButton from '../../components/link-button'\r\nimport { reqCategorys, reqUpdateCategory, reqAddCategory } from '../../api/index'\r\nimport AddForm from './add-form'\r\nimport UpdateForm from './update-form'\r\nexport default class Category extends Component {\r\n    state = {\r\n        categorys: [],   //一级分类列表\r\n        subCategorys: [],  //二级分类列表\r\n        loading: false,   //是否正在获取数据\r\n        parentId: '0', //当前需要显示的分类列表的父分类ID\r\n        parentName: '',  //当前需要显示的分类列表的父分类名称\r\n        showStatus: 0,//标识添加/更新的确认框是否显示，0：都不显示  1：显示添加 2：显示更新\r\n    }\r\n    //初始化所有Table所有列的数组\r\n    componentWillMount() {\r\n        this.initColumns()   //初始化所有列的数组方法\r\n    }\r\n\r\n    //发送异步ajax请求 \r\n    componentDidMount() {\r\n        this.getCategorys()\r\n    }\r\n    //初始化列的方法\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title: '分类的名称',\r\n                dataIndex: 'name', //显示数据的对应的属性名\r\n                key: 'name',\r\n            },\r\n            {\r\n                title: '操作',\r\n                width: 300,\r\n                dataIndex: '',  //显示数据的对应的属性名\r\n                key: 'x',\r\n                render: (category) => (  //返回需要指定的界面标签\r\n                    <span>\r\n                        <LinkButton onClick={() => { this.showUpdate(category) }}>修改分类</LinkButton>\r\n                        {/* 向事件回调函数传递参数 ：先定义一个匿名函数，在函数调用处理的函数并传入数据*/}\r\n                        {this.state.parentId === '0' ? <LinkButton onClick={() => { this.showSubCategorys(category) }}>查看子分类</LinkButton> : null}\r\n                    </span>\r\n                )\r\n            },\r\n        ]\r\n    }\r\n    //先显示添加 显示添加的确认框\r\n    showAdd = () => {\r\n        this.setState({ showStatus: 1 })\r\n    }\r\n    //点击添加分类\r\n    addCategory = () => {\r\n      this.form.validateFields(async(err,values)=>{\r\n          if(!err){\r\n                // console.log('添加分类')\r\n        this.setState({ showStatus: 0 })\r\n        //获取数据  收集数据 提交请求\r\n        // const parentId = this.form.getFieldValue('parentId')\r\n        // const categoryName = this.form.getFieldValue('categoryName')\r\n        const {parentId,categoryName}=values\r\n\r\n          //重置输入的数据\r\n          this.form.resetFields()\r\n     const result=   await reqAddCategory(categoryName,parentId)\r\n     if (result.status === 0) {  //修改成功\r\n         //3.重新获取当前分类列表  添加的分类就是当前分类列表下的分类\r\n       if(parentId===this.state.parentId){\r\n        this.getCategorys()\r\n       }else if(parentId==='0'){  //在二级分类列表下添加一级分类,重新获取一级分类列表 不需要显示一级分类\r\n        this.getCategorys('0')\r\n       }\r\n    }\r\n          }\r\n      })\r\n    }\r\n    //先显示更新 显示更新的确认框\r\n    showUpdate = (category) => {\r\n        //保存分类对象\r\n        this.category = category\r\n        // console.log(categorys)\r\n        this.setState({ showStatus: 2 })\r\n    }\r\n    //更新分类\r\n    updateCategory =  () => {\r\n        //先进行表单验证，通过了才处理\r\n        this.form.validateFields(async(err,values)=>{\r\n            if(!err){\r\n                  //1.隐藏确认框\r\n        this.setState({ showStatus: 0 })\r\n        //2.发送请求更新\r\n        //准备数据\r\n        const categoryId = this.category._id\r\n        //分类名字  接受子组件传来手动输入的值\r\n        // const categoryName = this.form.getFieldValue('categoryName')\r\n        const {categoryName}=values\r\n        //重置输入的数据\r\n        this.form.resetFields()\r\n        const result = await reqUpdateCategory({ categoryId, categoryName })\r\n\r\n        if (result.status === 0) {  //修改成功\r\n            //3.重新显示列表\r\n            this.getCategorys()\r\n        }\r\n            }\r\n        })\r\n    }\r\n    //取消的按钮:隐藏确认框\r\n    handleCancel = () => {\r\n        //重置输入的数据\r\n        this.form.resetFields()\r\n        //隐藏确认框\r\n        this.setState({ showStatus: 0 })\r\n    }\r\n\r\n    //点击一级分类名称回到一级分类列表  更新为显示一级列表状态\r\n    showFirstCategorys = () => {\r\n        this.setState({\r\n            parentId: '0',\r\n            parentName: '',\r\n            subCategorys: []\r\n        })\r\n    }\r\n    //点击查看子分类  显示指定一级分类对象的二级分类列表\r\n    showSubCategorys = (categorys) => {\r\n        //更新状态(异步更新) setState不能立即获取最新的状态：因为setState是异步更新的\r\n        this.setState({\r\n            parentId: categorys._id,\r\n            parentName: categorys.name\r\n        }, () => {\r\n            //  console.log(this.state.parentId)  //在状态更新后且render()后执行\r\n            this.getCategorys()\r\n        }\r\n        )\r\n        //二级分类列表\r\n        // console.log(this.state.parentId,'21321')\r\n        //  this.getCategorys()\r\n    }\r\n\r\n    //异步获取一级、二级分类列表\r\n    //parentId:如果没有指定根据状态中的parentId请求，如果指定了根据指定的请求\r\n    getCategorys = async (parentId) => {\r\n        //在发送请求前,显示loading\r\n        this.setState({ loading: true })\r\n        //发异步ajax请求，获取数据\r\n        parentId  = parentId||this.state.parentId\r\n        const res = await reqCategorys(parentId)\r\n\r\n        //在请求完成后,隐藏loading\r\n        this.setState({ loading: false })\r\n\r\n        if (res.status === 0) {\r\n            const categorys = res.data    //这个数组可能是一级的，也可能是二级的数组\r\n            //更新状态\r\n            if (parentId === '0') {   //更新一级分类状态\r\n                this.setState({ categorys: categorys })\r\n            } else {\r\n\r\n            } this.setState({ subCategorys: categorys })\r\n        } else {\r\n            message.error('获取分类列表失败')\r\n        }\r\n    }\r\n    render() {\r\n        //读取状态数据\r\n        const { categorys, loading, subCategorys, parentId, parentName, showStatus } = this.state\r\n        // console.log(this.columns)\r\n        //读取指定的分类\r\n        const category = this.category || {}  //如果还没有，先指定空对象\r\n        //card的左侧\r\n        const title = parentId === '0' ? '一级分类列表' : (\r\n            <span>\r\n                <LinkButton onClick={this.showFirstCategorys}>一级分类列表</LinkButton>\r\n                <Icon type='arrow-right' style={{ marginRight: 10 }}></Icon>\r\n                <span>{parentName}</span>\r\n            </span>\r\n        )\r\n        //card的右侧\r\n        const extra = (\r\n            <Button type=\"primary\" onClick={this.showAdd}>\r\n                <Icon type='plus'></Icon>\r\n                添加\r\n            </Button>\r\n        )\r\n        return (\r\n            <div>\r\n                <Card title={title} extra={extra} >\r\n                    <Table loading={loading} dataSource={parentId === '0' ? categorys : subCategorys} columns={this.columns} bordered rowKey='_id'\r\n                     pagination={{ defaultPageSize: 8, showQuickJumper: true }} />\r\n                    <Modal\r\n                        title=\"添加分类\"\r\n                        visible={showStatus === 1 ? true : false}\r\n                        //添加分类\r\n                        onOk={this.addCategory}\r\n                        onCancel={this.handleCancel}\r\n                    >\r\n                        <AddForm categorys={categorys} parentId={parentId}\r\n                        setForm={(form)=>{this.form=form}}></AddForm> \r\n                    </Modal>\r\n                    <Modal\r\n                        title=\"更新分类\"\r\n                        visible={showStatus === 2 ? true : false}\r\n                        //修改分类\r\n                        onOk={this.updateCategory}\r\n                        onCancel={this.handleCancel}\r\n                    >\r\n                        <UpdateForm categoryName={category.name}\r\n                            setForm={(form) => { this.form = form }}></UpdateForm>\r\n                    </Modal>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}