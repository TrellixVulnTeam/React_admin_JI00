{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nvar _jsxFileName = \"C:\\\\Users\\\\itryl\\\\Desktop\\\\React client\\\\client\\\\src\\\\components\\\\header\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport './index.less';\nimport formateDate from '../../utils/dateUtils';\nimport { reqWeather } from '../../api/index';\nimport memoryUtils from '../../utils/memoryUtils';\nimport { withRouter } from 'react-router-dom';\nimport menuList from '../../config/menuConfig';\nimport storageUtils from '../../utils/storageUtils';\nimport LinkButton from '../../components/link-button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Header extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentTime: formateDate(Date.now()),\n      //当前时间字符串\n      city: '',\n      //城市\n      weather: '',\n      //天气\n      temperature: '',\n      //温度\n      timer: ''\n    };\n\n    this.logout = () => {\n      //显示确认框\n      _Modal.confirm({\n        title: '确定退出吗',\n        // content: 'Some descriptions',\n        onOk: () => {\n          //删除本地保存user的数据\n          storageUtils.removeUser(); //删除缓存中的数据\n\n          memoryUtils.user = {}; //跳转到到login页面\n\n          this.props.history.replace('/login');\n        }\n      });\n    };\n\n    this.getTime = () => {\n      //每隔1s获取当前时间，并且更新状态数据 currentTime\n      this.timer = setInterval(() => {\n        const currentTime = formateDate(Date.now());\n        this.setState({\n          currentTime\n        });\n      }, 1000);\n    };\n\n    this.getWeather = async () => {\n      const {\n        city,\n        weather,\n        temperature\n      } = await reqWeather('410100');\n      this.setState({\n        city,\n        weather,\n        temperature\n      });\n    };\n\n    this.getTitle = () => {\n      //得到当前请求路径\n      const path = this.props.location.pathname;\n      let title;\n      menuList.forEach(item => {\n        if (item.key === path) {\n          //如果当前item的key与path一致，那么就取出当前标题title\n          title = item.title;\n        } else if (item.children) {\n          //在所有的子item中查找\n          const cItem = item.children.find(cItem => path.indexOf(cItem.key) === 0); //如果有值，则匹配到了\n\n          if (cItem) {\n            title = cItem.title;\n          }\n        }\n      });\n      return title;\n    };\n  }\n\n  //清除定时器 当前组件死亡之前\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  } //获取天气 \n\n\n  //第一次render之后执行，再次执行异步操作  \n  //（1）发ajax请求 （2启动定时器\n  componentDidMount() {\n    //获取当前时间\n    this.getTime(); //获取当前天气显示\n\n    this.getWeather('410100');\n  }\n\n  render() {\n    const {\n      city,\n      temperature,\n      weather,\n      currentTime\n    } = this.state;\n    const {\n      username\n    } = memoryUtils.user; //获取当前需要显示的标题\n\n    const title = this.getTitle(); // console.log(title)\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u6B22\\u8FCE\\uFF0C\", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LinkButton, {\n          onClick: this.logout,\n          children: \"\\u9000\\u51FA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-bottom-left\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-bottom-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: currentTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u57CE\\u5E02\\uFF1A\", city]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u5929\\u6C14\\uFF1A\", weather]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u6E29\\u5EA6\\uFF1A\", temperature, \"\\u2103\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Header);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/components/header/index.jsx"],"names":["React","Component","formateDate","reqWeather","memoryUtils","withRouter","menuList","storageUtils","LinkButton","Header","state","currentTime","Date","now","city","weather","temperature","timer","logout","confirm","title","onOk","removeUser","user","props","history","replace","getTime","setInterval","setState","getWeather","getTitle","path","location","pathname","forEach","item","key","children","cItem","find","indexOf","componentWillUnmount","clearInterval","componentDidMount","render","username"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './index.less'\r\nimport formateDate from '../../utils/dateUtils'\r\nimport  {reqWeather} from '../../api/index'\r\nimport  memoryUtils from '../../utils/memoryUtils'\r\nimport {withRouter} from 'react-router-dom'\r\nimport menuList from '../../config/menuConfig'\r\nimport storageUtils from '../../utils/storageUtils'\r\nimport LinkButton from '../../components/link-button'\r\nimport { Modal } from 'antd';\r\n class Header extends Component {\r\n    state={\r\n        currentTime:formateDate(Date.now()),   //当前时间字符串\r\n        city:'',  //城市\r\n        weather:'', //天气\r\n        temperature:'', //温度\r\n        timer:''\r\n    }\r\n \r\n    //退出登录\r\n    logout=()=>{\r\n        //显示确认框\r\n        Modal.confirm({\r\n            title: '确定退出吗', \r\n            // content: 'Some descriptions',\r\n            onOk:()=> {\r\n              //删除本地保存user的数据\r\n              storageUtils.removeUser()\r\n              //删除缓存中的数据\r\n              memoryUtils.user={}\r\n              //跳转到到login页面\r\n              this.props.history.replace('/login')\r\n            },\r\n        })\r\n    }\r\n    //获取时间\r\n    getTime=()=>{\r\n        //每隔1s获取当前时间，并且更新状态数据 currentTime\r\n       this.timer= setInterval(()=>{\r\n           const currentTime=formateDate(Date.now())\r\n           this.setState({currentTime})\r\n        },1000)\r\n    }\r\n\r\n    //清除定时器 当前组件死亡之前\r\n    componentWillUnmount(){\r\n        clearInterval(this.timer)\r\n    }\r\n\r\n    //获取天气 \r\n     getWeather=async()=>{\r\n        const{city,weather,temperature}=await reqWeather('410100')\r\n        this.setState({city,weather,temperature})\r\n    }\r\n\r\n    //获取标题\r\n    getTitle=()=>{\r\n        //得到当前请求路径\r\n        const path=this.props.location.pathname\r\n        let title\r\n        menuList.forEach((item)=>{\r\n                if(item.key===path){  //如果当前item的key与path一致，那么就取出当前标题title\r\n                   title= item.title\r\n                }else if(item.children){\r\n                    //在所有的子item中查找\r\n                const cItem=item.children.find(cItem=>\r\n                         path.indexOf(cItem.key)===0)\r\n                    \r\n                    //如果有值，则匹配到了\r\n                    if(cItem){\r\n                        title=cItem.title\r\n                    }\r\n                }\r\n        })\r\n        return title\r\n    }\r\n\r\n   //第一次render之后执行，再次执行异步操作  \r\n    //（1）发ajax请求 （2启动定时器\r\n    componentDidMount(){\r\n        //获取当前时间\r\n        this.getTime()\r\n        //获取当前天气显示\r\n        this.getWeather('410100')\r\n     }\r\n \r\n    render() {\r\n        const {city,temperature,weather,currentTime}=this.state\r\n        const {username}=memoryUtils.user\r\n             //获取当前需要显示的标题\r\n        const title=this.getTitle()\r\n        // console.log(title)\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header-top\">\r\n                    <span>欢迎，{username}</span>\r\n                   <LinkButton onClick={this.logout}>退出</LinkButton>\r\n                </div>\r\n                <div className=\"header-bottom\">\r\n                    <div className=\"header-bottom-left\">{title}</div>\r\n                    <div className=\"header-bottom-right\">\r\n                        <span>{currentTime}</span>\r\n                        {/* 当前城市 */}\r\n                        <span>城市：{city}</span>  \r\n                        {/* 天气 */}\r\n                        <span>天气：{weather}</span>\r\n                        {/* 温度 */}\r\n                        <span>温度：{temperature}℃</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Header)"]},"metadata":{},"sourceType":"module"}