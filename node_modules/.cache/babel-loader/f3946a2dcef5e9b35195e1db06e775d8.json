{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"C:\\\\Users\\\\itryl\\\\Desktop\\\\React client\\\\client\\\\src\\\\pages\\\\products\\\\pictures-wall.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { reqDeleteImg } from '../../api/index';\nimport { BASE_IMG_URL } from '../../utils/constants'; //用于图片上传的组件\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PicturesWall extends React.Component {\n  //接受默认修改的图片显示\n  constructor(props) {\n    super(props);\n    this.state = {\n      previewVisible: false,\n      // 标识是否显示大图预览Modal\n      previewImage: '',\n      // 大图的url\n      fileList: [\n        /*{\r\n          uid: '-1', // 每个file都有自己唯一的id\r\n          name: 'xxx.png', // 图片文件名\r\n          status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\r\n          url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png', // 图片地址\r\n        },*/\n      ]\n    };\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.handlePreview = async file => {\n      //显示指定file对应的大图\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true\n      });\n    };\n\n    this.getImgs = () => {\n      return this.state.fileList.map(file => file.name);\n    };\n\n    this.handleChange = async ({\n      file,\n      fileList\n    }) => {\n      //一旦上传成功，将当前上传的file的信息修正（name,url）\n      if (file.status === 'done') {\n        const result = file.response;\n\n        if (result.status === 0) {\n          _message.success('上传图片成功！');\n\n          const {\n            name,\n            url\n          } = result.data;\n          file = fileList[fileList.length - 1];\n          file.name = name;\n          file.url = url;\n        } else {\n          _message.error('上传图片失败');\n        }\n      } else if (file.status === 'removed') {\n        //删除图片完成\n        const result = await reqDeleteImg(file.name);\n\n        if (result.status === 0) {\n          _message.success('删除图片成功！');\n        } else {\n          _message.error('删除图片失败！');\n        }\n      }\n\n      this.setState({\n        //在操作（上传/删除）过程中更新fileList状态\n        fileList\n      });\n    };\n\n    let _fileList = []; //如果传入了img，就将这个img赋值给fileList图片数组\n\n    const {\n      imgs\n    } = this.props;\n\n    if (imgs && imgs.length > 0) {\n      _fileList = imgs.map((img, index) => ({\n        uid: -index,\n        //每一个file都有一个唯一的id\n        name: img,\n        //图片文件名\n        status: 'done',\n        url: BASE_IMG_URL + img\n      }));\n    } //初始化状态\n\n\n    this.state = {\n      previewVisible: false,\n      //标识是否显示大图预览 Modal\n      previewImage: '',\n      //大图的地址\n      fileList: _fileList //所有已上传图片的数组\n\n    };\n  } //隐藏Modal\n\n\n  render() {\n    const {\n      previewVisible,\n      previewImage,\n      fileList\n    } = this.state;\n\n    const uploadButton =\n    /*#__PURE__*/\n    //上传的按钮\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(_Icon, {\n        type: \"plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(_Upload, {\n        action: \"/manage/img/upload\" //上传图片的接口地址\n        ,\n        accept: \"image/*\" //指定上传的为任意类型的图片\n        ,\n        listType: \"picture-card\" //上传列表的内建样式，支持三种基本样式 text, picture 和 picture-card\n        ,\n        name: \"image\" //发到后台的文件参数名  请求参数名\n        ,\n        fileList: fileList //所有已上传图片文件对象的数组\n        ,\n        onPreview: this.handlePreview,\n        onChange: this.handleChange,\n        children: fileList.length >= 8 ? null : uploadButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n        visible: previewVisible,\n        footer: null,\n        onCancel: this.handleCancel,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"example\",\n          style: {\n            width: '100%'\n          },\n          src: previewImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nPicturesWall.propTypes = {\n  imgs: PropTypes.array\n};","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/pages/products/pictures-wall.jsx"],"names":["React","PropTypes","reqDeleteImg","BASE_IMG_URL","PicturesWall","Component","constructor","props","state","previewVisible","previewImage","fileList","handleCancel","setState","handlePreview","file","url","preview","getBase64","originFileObj","getImgs","map","name","handleChange","status","result","response","success","data","length","error","imgs","img","index","uid","render","uploadButton","width","propTypes","array"],"mappings":"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","sourcesContent":["import { Upload, Icon, Modal, message } from 'antd';\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {reqDeleteImg} from '../../api/index'\r\nimport {BASE_IMG_URL} from '../../utils/constants'\r\n\r\n//用于图片上传的组件\r\nexport default class PicturesWall extends React.Component {\r\n  //接受默认修改的图片显示\r\n  static propTypes={\r\n    imgs:PropTypes.array\r\n  }\r\n  state = {\r\n    previewVisible: false, // 标识是否显示大图预览Modal\r\n    previewImage: '', // 大图的url\r\n    fileList: [\r\n      /*{\r\n        uid: '-1', // 每个file都有自己唯一的id\r\n        name: 'xxx.png', // 图片文件名\r\n        status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\r\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png', // 图片地址\r\n      },*/\r\n    ],\r\n  }\r\n  constructor(props){\r\n    super(props)\r\n    let fileList=[]\r\n    //如果传入了img，就将这个img赋值给fileList图片数组\r\n   const {imgs}=this.props\r\n   if(imgs&&imgs.length>0){\r\n      fileList=imgs.map((img,index)=>({\r\n        uid:-index,  //每一个file都有一个唯一的id\r\n        name:img, //图片文件名\r\n        status:'done',\r\n        url:BASE_IMG_URL+img\r\n      }))\r\n   }\r\n    //初始化状态\r\n    this.state={\r\n      previewVisible: false,  //标识是否显示大图预览 Modal\r\n      previewImage: '',    //大图的地址\r\n      fileList   //所有已上传图片的数组\r\n    }\r\n  }\r\n\r\n //隐藏Modal\r\n  handleCancel = () => this.setState({ previewVisible: false });  \r\n\r\n  handlePreview = async file => {\r\n      //显示指定file对应的大图\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n  //获取所有已上传图片文件名的数组\r\n  getImgs=()=>{\r\n      return this.state.fileList.map(file=>file.name)\r\n  }\r\n\r\n  //fileList所有已上传图片文件对象的数组\r\n  //file 当前操作的图片文件（上传/删除）\r\n  handleChange = async({ file,fileList }) => {\r\n      //一旦上传成功，将当前上传的file的信息修正（name,url）\r\n      if(file.status==='done'){\r\n          const result=file.response \r\n          if(result.status===0){\r\n              message.success('上传图片成功！')\r\n              const {name,url}=result.data\r\n              file=fileList[fileList.length-1]\r\n              file.name=name\r\n              file.url=url\r\n          }else{\r\n              message.error('上传图片失败')\r\n          }\r\n      }else if(file.status==='removed'){  //删除图片完成\r\n         const result=await reqDeleteImg(file.name)\r\n         if(result.status===0){\r\n           message.success('删除图片成功！')\r\n         }else{\r\n           message.error('删除图片失败！')\r\n         }\r\n      }\r\n      this.setState({    //在操作（上传/删除）过程中更新fileList状态\r\n      fileList \r\n    })};\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state; \r\n    const uploadButton = (   //上传的按钮\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div >Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <Upload\r\n          action=\"/manage/img/upload\"   //上传图片的接口地址\r\n          accept='image/*'  //指定上传的为任意类型的图片\r\n          listType=\"picture-card\"  //上传列表的内建样式，支持三种基本样式 text, picture 和 picture-card\r\n          name='image'            //发到后台的文件参数名  请求参数名\r\n          fileList={fileList}    //所有已上传图片文件对象的数组\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 8 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}