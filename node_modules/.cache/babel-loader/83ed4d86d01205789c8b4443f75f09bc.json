{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"C:\\\\Users\\\\itryl\\\\Desktop\\\\React client\\\\client\\\\src\\\\pages\\\\category\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport './index.less';\nimport LinkButton from '../../components/link-button';\nimport { reqCategorys } from '../../api/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Category extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      categorys: [],\n      //一级分类列表\n      subCategorys: [],\n      //二级分类列表\n      loading: false,\n      //是否正在获取数据\n      parentId: '0',\n      //当前需要显示的分类列表的父分类ID\n      parentName: '' //当前需要显示的分类列表的父分类名称\n\n    };\n\n    this.initColumns = () => {\n      this.columns = [{\n        title: '分类的名称',\n        dataIndex: 'name',\n        //显示数据的对应的属性名\n        key: 'name'\n      }, {\n        title: '操作',\n        width: 300,\n        dataIndex: '',\n        //显示数据的对应的属性名\n        key: 'x',\n        render: categorys =>\n        /*#__PURE__*/\n        //返回需要指定的界面标签\n        _jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(LinkButton, {\n            onClick: this.a,\n            children: \"\\u4FEE\\u6539\\u5206\\u7C7B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), this.state.parentId === '0' ? /*#__PURE__*/_jsxDEV(LinkButton, {\n            onClick: () => {\n              this.showSubCategorys(categorys);\n            },\n            children: \"\\u67E5\\u770B\\u5B50\\u5206\\u7C7B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 52\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }];\n    };\n\n    this.showFirstCategorys = () => {\n      this.setState({\n        parentId: '0',\n        parentName: '',\n        subCategorys: []\n      });\n    };\n\n    this.showSubCategorys = categorys => {\n      //更新状态(异步更新) setState不能立即获取最新的状态：因为setState是异步更新的\n      this.setState({\n        parentId: categorys._id,\n        parentName: categorys.name\n      }, () => {\n        //  console.log(this.state.parentId)  //在状态更新后且render()后执行\n        this.getCategorys();\n      }); //二级分类列表\n      // console.log(this.state.parentId,'21321')\n      //  this.getCategorys()\n    };\n\n    this.getCategorys = async () => {\n      //在发送请求前,显示loading\n      this.setState({\n        loading: true\n      }); //发异步ajax请求，获取数据\n\n      const {\n        parentId\n      } = this.state;\n      const res = await reqCategorys(parentId); //在请求完成后,隐藏loading\n\n      this.setState({\n        loading: false\n      });\n\n      if (res.status === 0) {\n        const categorys = res.data; //这个数组可能是一级的，也可能是二级的数组\n        //更新状态\n\n        if (parentId === '0') {\n          //更新一级分类状态\n          this.setState({\n            categorys: categorys\n          });\n        } else {}\n\n        this.setState({\n          subCategorys: categorys\n        });\n      } else {\n        _message.error('获取分类列表失败');\n      }\n    };\n  }\n\n  //初始化所有Table所有列的数组\n  componentWillMount() {\n    this.initColumns(); //初始化所有列的数组方法\n  } //发送异步ajax请求 \n\n\n  componentDidMount() {\n    this.getCategorys();\n  } //初始化列的方法\n\n\n  render() {\n    //读取状态数据\n    const {\n      categorys,\n      loading,\n      subCategorys,\n      parentId,\n      parentName\n    } = this.state; // console.log(this.columns)\n    //card的左侧\n\n    const title = parentId === '0' ? '一级分类列表' : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(LinkButton, {\n        onClick: this.showFirstCategorys,\n        children: \"\\u4E00\\u7EA7\\u5206\\u7C7B\\u5217\\u8868\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Icon, {\n        type: \"arrow-right\",\n        style: {\n          marginRight: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: parentName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this); //card的右侧\n\n    const extra = /*#__PURE__*/_jsxDEV(_Button, {\n      type: \"primary\",\n      children: [/*#__PURE__*/_jsxDEV(_Icon, {\n        type: \"plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), \"\\u6DFB\\u52A0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(_Card, {\n        title: title,\n        extra: extra,\n        children: /*#__PURE__*/_jsxDEV(_Table, {\n          loading: loading,\n          dataSource: parentId === '0' ? categorys : subCategorys,\n          columns: this.columns,\n          bordered: true,\n          rowKey: \"_id\",\n          pagination: {\n            defaultPageSize: 8,\n            showQuickJumper: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/pages/category/index.jsx"],"names":["React","Component","LinkButton","reqCategorys","Category","state","categorys","subCategorys","loading","parentId","parentName","initColumns","columns","title","dataIndex","key","width","render","a","showSubCategorys","showFirstCategorys","setState","_id","name","getCategorys","res","status","data","error","componentWillMount","componentDidMount","marginRight","extra","defaultPageSize","showQuickJumper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Card, Table, Button, Icon,message } from 'antd';\r\nimport './index.less'\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqCategorys} from '../../api/index'\r\nexport default class Category extends Component {\r\n    state={\r\n        categorys:[],   //一级分类列表\r\n        subCategorys:[],  //二级分类列表\r\n        loading:false,   //是否正在获取数据\r\n        parentId:'0' , //当前需要显示的分类列表的父分类ID\r\n        parentName:'',  //当前需要显示的分类列表的父分类名称\r\n    }\r\n    //初始化所有Table所有列的数组\r\n    componentWillMount(){\r\n        this.initColumns()   //初始化所有列的数组方法\r\n    }\r\n\r\n    //发送异步ajax请求 \r\n    componentDidMount(){\r\n        this.getCategorys()\r\n    }\r\n    //初始化列的方法\r\n    initColumns=()=>{\r\n       this.columns = [\r\n            {\r\n                title: '分类的名称',  \r\n                dataIndex: 'name', //显示数据的对应的属性名\r\n                key: 'name',\r\n            },\r\n            {\r\n                title: '操作', \r\n                width:300,\r\n                dataIndex: '',  //显示数据的对应的属性名\r\n                key: 'x',\r\n                render: (categorys) => (  //返回需要指定的界面标签\r\n                    <span>\r\n                        <LinkButton onClick={this.a}>修改分类</LinkButton>\r\n                        {/* 向事件回调函数传递参数 ：先定义一个匿名函数，在函数调用处理的函数并传入数据*/}\r\n                        {this.state.parentId==='0'?<LinkButton onClick={()=>{this.showSubCategorys(categorys)}}>查看子分类</LinkButton>:null}\r\n                    </span>\r\n                )\r\n            },\r\n        ]\r\n    } \r\n    //点击一级分类名称回到一级分类列表  更新为显示一级列表状态\r\n    showFirstCategorys=()=>{\r\n        this.setState({\r\n            parentId:'0',\r\n            parentName:'',\r\n            subCategorys:[]\r\n        })\r\n    }\r\n    //点击查看子分类  显示指定一级分类对象的二级分类列表\r\n    showSubCategorys=(categorys)=>{\r\n        //更新状态(异步更新) setState不能立即获取最新的状态：因为setState是异步更新的\r\n        this.setState({\r\n            parentId:categorys._id,\r\n            parentName:categorys.name\r\n        },()=>{\r\n         //  console.log(this.state.parentId)  //在状态更新后且render()后执行\r\n           this.getCategorys()\r\n        } \r\n            )         \r\n        //二级分类列表\r\n        // console.log(this.state.parentId,'21321')\r\n    //  this.getCategorys()\r\n    }\r\n\r\n    //异步获取一级、二级分类列表\r\n    getCategorys=async()=>{\r\n        //在发送请求前,显示loading\r\n        this.setState({loading:true})\r\n        //发异步ajax请求，获取数据\r\n        const {parentId}=this.state\r\n       const res= await reqCategorys(parentId)\r\n\r\n       //在请求完成后,隐藏loading\r\n        this.setState({loading:false})\r\n\r\n       if(res.status===0){\r\n         const categorys=  res.data    //这个数组可能是一级的，也可能是二级的数组\r\n        //更新状态\r\n        if(parentId==='0'){   //更新一级分类状态\r\n            this.setState({categorys:categorys})\r\n        }else{\r\n\r\n        }this.setState({subCategorys:categorys})\r\n       }else {  \r\n           message.error('获取分类列表失败')\r\n       }\r\n    }\r\n    render() {\r\n        //读取状态数据\r\n        const  {categorys,loading,subCategorys,parentId,parentName}=this.state\r\n        // console.log(this.columns)\r\n        //card的左侧\r\n        const title = parentId==='0'?'一级分类列表':(\r\n            <span>\r\n                <LinkButton onClick={this.showFirstCategorys}>一级分类列表</LinkButton>\r\n                <Icon type='arrow-right' style={{marginRight:10}}></Icon>\r\n                <span>{parentName}</span>\r\n            </span>\r\n        )\r\n        //card的右侧\r\n        const extra = (\r\n            <Button type=\"primary\">\r\n                <Icon type='plus'></Icon>\r\n                添加\r\n            </Button>\r\n        )\r\n        return (\r\n            <div>\r\n                <Card title={title} extra={extra} >\r\n                    <Table loading={loading} dataSource={parentId==='0'?categorys:subCategorys} columns={this.columns}   bordered rowKey='_id' pagination={{defaultPageSize:8,showQuickJumper:true}}/>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}