{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"C:\\\\Users\\\\itryl\\\\Desktop\\\\React client\\\\client\\\\src\\\\pages\\\\products\\\\home.jsx\";\nimport React, { Component } from 'react';\nimport { getProducts, reqSearchProducts, reqUpdateCategory } from '../../api/index';\nimport LinkButton from '../../components/link-button';\nimport { PAGE_SIZE } from '../../utils/constants'; //Product的默认子路由组件\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Option = _Select.Option;\nexport default class ProductHome extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      //商品的数组\n      total: 0,\n      //总的数据条数\n      loading: false,\n      //状态\n      searchName: '',\n      //搜索的关键字\n      searchType: 'productName' //根据哪个字段来搜索\n\n    };\n\n    this.initColumns = () => {\n      return this.columns = [{\n        title: '商品名称',\n        dataIndex: 'name'\n      }, {\n        title: '商品描述',\n        dataIndex: 'desc'\n      }, {\n        title: '价格',\n        render: product => '￥' + product.price //当前指定了对应的属性 \n\n      }, {\n        width: 100,\n        title: '状态',\n        render: product => {\n          const {\n            status,\n            _id\n          } = product;\n          const newStatus = status === 1 ? 2 : 1;\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(_Button, {\n              onClick: () => {\n                this.updateStatus(_id, newStatus);\n              },\n              type: \"primary\",\n              children: status === 1 ? '下架' : '上架'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: status === 1 ? '在售' : '已下架'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this);\n        }\n      }, {\n        width: 100,\n        title: '操作',\n        render: product => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(LinkButton, {\n              onClick: () => this.props.history.push('/product/detail', {\n                product\n              }),\n              children: \"\\u8BE6\\u60C5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(LinkButton, {\n              children: \"\\u4FEE\\u6539\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this);\n        }\n      }];\n    };\n\n    this.updateStatus = async (productId, status) => {\n      const result = await reqUpdateCategory(productId, status);\n\n      if (result.status === 0) {\n        _message.success('更新商品成功');\n\n        this.getProducts(this.pageNum);\n      }\n    };\n\n    this.serachProduct = () => {\n      console.log(this.state.searchName, this.state.searchType);\n    };\n\n    this.getProducts = async pageNum => {\n      this.pageNum = pageNum; //保存pageNum，让其他方法可以看到\n\n      this.setState({\n        loading: true\n      }); //显示loading\n\n      const {\n        searchName,\n        searchType\n      } = this.state; //如果搜索关键字有值，就是搜索分页\n\n      let result;\n\n      if (searchName) {\n        result = await reqSearchProducts({\n          pageNum,\n          pageSize: PAGE_SIZE,\n          searchName,\n          searchType\n        });\n      } else {\n        //一般分页请求\n        result = await getProducts(pageNum, PAGE_SIZE);\n      }\n\n      this.setState({\n        loading: false\n      }); //请求结束之后 隐藏loading\n\n      if (result.status === 0) {\n        //取出分页数据，更新状态，显示分页列表\n        const {\n          total,\n          list\n        } = result.data;\n        this.setState({\n          total,\n          products: list\n        });\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.initColumns(); //调用初始化列的方法\n  }\n\n  componentDidMount() {\n    this.getProducts(1); //调用获取商品的方法\n  }\n\n  render() {\n    //取出状态数据\n    const {\n      products,\n      total,\n      loading,\n      searchName,\n      searchType\n    } = this.state;\n\n    const title = /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(_Select, {\n        value: searchType,\n        style: {\n          width: 150\n        },\n        onChange: value => this.setState({\n          searchType: value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"productName\",\n          children: \"\\u6309\\u540D\\u79F0\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"productDesc\",\n          children: \"\\u6309\\u63CF\\u8FF0\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Input, {\n        placeholder: \"\\u5173\\u952E\\u5B57\",\n        style: {\n          width: 150,\n          margin: '0 15px'\n        },\n        value: searchName,\n        onChange: e => {\n          this.setState({\n            searchName: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Button, {\n        type: \"primary\",\n        onClick: () => {\n          this.getProducts(1);\n        },\n        children: \"\\u641C\\u7D22\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this);\n\n    const extra = /*#__PURE__*/_jsxDEV(_Button, {\n      type: \"primary\",\n      children: [/*#__PURE__*/_jsxDEV(_Icon, {\n        type: \"plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), \"   \\u6DFB\\u52A0\\u5546\\u54C1\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 12\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      title: title,\n      extra: extra,\n      children: /*#__PURE__*/_jsxDEV(_Table, {\n        dataSource: products,\n        columns: this.columns,\n        rowKey: \"_id\",\n        bordered: true,\n        loading: loading,\n        pagination: {\n          defaultPageSize: PAGE_SIZE,\n          showQuickJumper: true,\n          total,\n          onChange: pageNum => {\n            this.getProducts(pageNum);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/pages/products/home.jsx"],"names":["React","Component","getProducts","reqSearchProducts","reqUpdateCategory","LinkButton","PAGE_SIZE","Option","ProductHome","state","products","total","loading","searchName","searchType","initColumns","columns","title","dataIndex","render","product","price","width","status","_id","newStatus","updateStatus","props","history","push","productId","result","success","pageNum","serachProduct","console","log","setState","pageSize","list","data","componentWillMount","componentDidMount","value","margin","e","target","extra","defaultPageSize","showQuickJumper","onChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {Card,Select,Input,Button,Icon,Table, message} from 'antd'\r\nimport {getProducts,reqSearchProducts,reqUpdateCategory} from '../../api/index'\r\nimport LinkButton from '../../components/link-button'\r\nimport {PAGE_SIZE} from '../../utils/constants'\r\n//Product的默认子路由组件\r\nconst Option=Select.Option\r\nexport default class ProductHome extends Component {\r\n    state={\r\n        products:[ ], //商品的数组\r\n        total:0,  //总的数据条数\r\n        loading:false,    //状态\r\n        searchName:'',   //搜索的关键字\r\n        searchType:'productName'    //根据哪个字段来搜索\r\n    }\r\n    //初始化列的方法\r\n    initColumns=()=>{\r\n        return this.columns=[\r\n            {\r\n              title: '商品名称',\r\n              dataIndex: 'name',\r\n            },\r\n            {\r\n              title: '商品描述',\r\n              dataIndex: 'desc',\r\n            },\r\n            {\r\n              title: '价格',\r\n              render:(product)=>\r\n                    '￥'+ product.price    //当前指定了对应的属性 \r\n            },\r\n            {\r\n                width:100,\r\n                title: '状态',\r\n                render:(product)=>{\r\n                    const {status,_id}=product\r\n                    const newStatus=status===1?2:1\r\n                    return (\r\n                        <span>\r\n                            <Button onClick={()=>{this.updateStatus(_id,newStatus)}}\r\n                             type='primary'>\r\n                            {status===1?'下架':'上架'}</Button>\r\n                            <span>{status===1?'在售':'已下架'}</span>\r\n                        </span>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                width:100,\r\n                title: '操作',\r\n                render:(product)=>{\r\n                    return (\r\n                        <span>\r\n                            {/* 将product对象 使用state传递给目标路由组件 */}\r\n                            <LinkButton onClick={()=>this.props.history.push('/product/detail',{product})}>详情</LinkButton>\r\n                            <LinkButton>修改</LinkButton>\r\n                        </span>\r\n                    )\r\n                }\r\n            }\r\n          ]\r\n    }\r\n    //更新指定商品的状态\r\n    updateStatus=async(productId,status)=>{\r\n        const result=await reqUpdateCategory(productId,status)\r\n       if(result.status===0){\r\n           message.success('更新商品成功')\r\n           this.getProducts(this.pageNum)\r\n       }\r\n    }\r\n    //搜索商品的方法\r\n    serachProduct=()=>{\r\n        console.log(this.state.searchName,this.state.searchType)\r\n    }\r\n    //获取商品的方法\r\n    getProducts=async(pageNum)=>{\r\n        this.pageNum=pageNum   //保存pageNum，让其他方法可以看到\r\n        this.setState({loading:true})  //显示loading\r\n        const {searchName,searchType} =this.state\r\n        //如果搜索关键字有值，就是搜索分页\r\n        let result\r\n        if(searchName){\r\n            result=  await  reqSearchProducts({pageNum,pageSize:PAGE_SIZE,searchName,searchType})\r\n        }else{  //一般分页请求\r\n             result= await getProducts(pageNum,PAGE_SIZE)\r\n        }\r\n       this.setState({loading:false})  //请求结束之后 隐藏loading\r\n        if(result.status===0){\r\n            //取出分页数据，更新状态，显示分页列表\r\n            const {total,list}=result.data\r\n            this.setState({total,products:list})\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        this.initColumns()  //调用初始化列的方法\r\n    }\r\n    componentDidMount(){\r\n        this.getProducts(1)   //调用获取商品的方法\r\n    }\r\n    render() {\r\n        //取出状态数据\r\n        const {products,total,loading,searchName,searchType}=this.state\r\n       \r\n        const title=(\r\n            <span>\r\n                <Select value={searchType} style={{width:150}} onChange={value=>this.setState({searchType:value})}>\r\n                    <Option value='productName'>按名称搜索</Option>\r\n                    <Option value='productDesc'>按描述搜索</Option>\r\n                </Select>\r\n                <Input placeholder='关键字' style={{width:150,margin:'0 15px'}} value={searchName} onChange={(e)=>{this.setState({searchName:e.target.value})}}></Input>\r\n                <Button type='primary' onClick={()=>{this.getProducts(1)}}>搜索</Button>\r\n            </span>\r\n        )\r\n        const extra=(\r\n           <Button type='primary'>\r\n                <Icon type='plus' ></Icon>   添加商品\r\n           </Button>\r\n        )\r\n        return (\r\n          <Card title={title} extra={extra}>\r\n              <Table dataSource={products}\r\n               columns={this.columns} \r\n               rowKey='_id'\r\n                bordered\r\n                loading={loading}\r\n              pagination={{defaultPageSize:PAGE_SIZE,\r\n                showQuickJumper:true,\r\n                total,\r\n                onChange:(pageNum)=>{this.getProducts(pageNum)},\r\n            }}\r\n              ></Table>\r\n          </Card>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}