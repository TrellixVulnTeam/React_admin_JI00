{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/itryl/Desktop/React client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/*\r\n包含n个action creator函数的模块\r\n同步action: 对象 {type: 'xxx', data: 数据值}\r\n异步action: 函数  dispatch => {}\r\n */import{SET_HEAD_TITLE,RECEIVE_USER,SHOW_ERROR_MSG,RESET_USER}from'./action-types';import{reqLogin}from'../api';import storageUtils from\"../utils/storageUtils\";/*\r\n设置头部标题的同步action\r\n */export var setHeadTitle=function setHeadTitle(headTitle){return{type:SET_HEAD_TITLE,data:headTitle};};/*\r\n接收用户的同步action\r\n */export var receiveUser=function receiveUser(user){return{type:RECEIVE_USER,user:user};};/*\r\n显示错误信息同步action\r\n */export var showErrorMsg=function showErrorMsg(errorMsg){return{type:SHOW_ERROR_MSG,errorMsg:errorMsg};};/*\r\n退出登陆的同步action\r\n */export var logout=function logout(){// 删除local中的user\nstorageUtils.removeUser();// 返回action对象\nreturn{type:RESET_USER};};/*\r\n登陆的异步action\r\n */export var login=function login(username,password){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var result,user,msg;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return reqLogin(username,password);case 2:result=_context.sent;// {status: 0, data: user} {status: 1, msg: 'xxx'}\n// 2.1. 如果成功, 分发成功的同步action\nif(result.status===0){user=result.data;// 保存local中\nstorageUtils.saveUser(user);// 分发接收用户的同步action\ndispatch(receiveUser(user));}else{// 2.2. 如果失败, 分发失败的同步action\nmsg=result.msg;// message.error(msg)\ndispatch(showErrorMsg(msg));}case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/redux/actions.js"],"names":["SET_HEAD_TITLE","RECEIVE_USER","SHOW_ERROR_MSG","RESET_USER","reqLogin","storageUtils","setHeadTitle","headTitle","type","data","receiveUser","user","showErrorMsg","errorMsg","logout","removeUser","login","username","password","dispatch","result","status","saveUser","msg"],"mappings":"+TAAA;AACA;AACA;AACA;AACA,GACA,OACEA,cADF,CAEEC,YAFF,CAGEC,cAHF,CAIEC,UAJF,KAKO,gBALP,CAMA,OAAQC,QAAR,KAAuB,QAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,uBAAzB,CAEA;AACA;AACA,GACA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,SAAD,QAAgB,CAACC,IAAI,CAAER,cAAP,CAAuBS,IAAI,CAAEF,SAA7B,CAAhB,EAArB,CAEP;AACA;AACA,GACA,MAAO,IAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,QAAW,CAACH,IAAI,CAAEP,YAAP,CAAqBU,IAAI,CAAJA,IAArB,CAAX,EAApB,CAEP;AACA;AACA,GACA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,QAAD,QAAe,CAACL,IAAI,CAAEN,cAAP,CAAuBW,QAAQ,CAARA,QAAvB,CAAf,EAArB,CAEP;AACA;AACA,GACA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAO,CAC3B;AACAT,YAAY,CAACU,UAAb,GACA;AACA,MAAO,CAACP,IAAI,CAAEL,UAAP,CAAP,CACD,CALM,CAOP;AACA;AACA,GACA,MAAO,IAAMa,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,QAAD,CAAWC,QAAX,CAAwB,CAC3C,+FAAO,iBAAMC,QAAN,4JAEgBf,CAAAA,QAAQ,CAACa,QAAD,CAAWC,QAAX,CAFxB,QAECE,MAFD,eAE8C;AACnD;AACA,GAAGA,MAAM,CAACC,MAAP,GAAgB,CAAnB,CAAsB,CACdV,IADc,CACPS,MAAM,CAACX,IADA,CAEpB;AACAJ,YAAY,CAACiB,QAAb,CAAsBX,IAAtB,EACA;AACAQ,QAAQ,CAACT,WAAW,CAACC,IAAD,CAAZ,CAAR,CACD,CAND,IAMO,CAAE;AACDY,GADD,CACOH,MAAM,CAACG,GADd,CAEL;AACAJ,QAAQ,CAACP,YAAY,CAACW,GAAD,CAAb,CAAR,CACD,CAdI,sDAAP,+DAiBD,CAlBM","sourcesContent":["/*\r\n包含n个action creator函数的模块\r\n同步action: 对象 {type: 'xxx', data: 数据值}\r\n异步action: 函数  dispatch => {}\r\n */\r\nimport {\r\n  SET_HEAD_TITLE,\r\n  RECEIVE_USER,\r\n  SHOW_ERROR_MSG,\r\n  RESET_USER\r\n} from './action-types'\r\nimport {reqLogin} from '../api'\r\nimport storageUtils from \"../utils/storageUtils\";\r\n\r\n/*\r\n设置头部标题的同步action\r\n */\r\nexport const setHeadTitle = (headTitle) => ({type: SET_HEAD_TITLE, data: headTitle})\r\n\r\n/*\r\n接收用户的同步action\r\n */\r\nexport const receiveUser = (user) => ({type: RECEIVE_USER, user})\r\n\r\n/*\r\n显示错误信息同步action\r\n */\r\nexport const showErrorMsg = (errorMsg) => ({type: SHOW_ERROR_MSG, errorMsg})\r\n\r\n/*\r\n退出登陆的同步action\r\n */\r\nexport const logout = () =>  {\r\n  // 删除local中的user\r\n  storageUtils.removeUser()\r\n  // 返回action对象\r\n  return {type: RESET_USER}\r\n}\r\n\r\n/*\r\n登陆的异步action\r\n */\r\nexport const login = (username, password) => {\r\n  return async dispatch => {\r\n    // 1. 执行异步ajax请求\r\n    const result = await reqLogin(username, password)  // {status: 0, data: user} {status: 1, msg: 'xxx'}\r\n    // 2.1. 如果成功, 分发成功的同步action\r\n    if(result.status===0) {\r\n      const user = result.data\r\n      // 保存local中\r\n      storageUtils.saveUser(user)\r\n      // 分发接收用户的同步action\r\n      dispatch(receiveUser(user))\r\n    } else { // 2.2. 如果失败, 分发失败的同步action\r\n      const msg = result.msg\r\n      // message.error(msg)\r\n      dispatch(showErrorMsg(msg))\r\n    }\r\n\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}