{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nvar _jsxFileName = \"C:\\\\Users\\\\itryl\\\\Desktop\\\\React client\\\\client\\\\src\\\\pages\\\\user\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport formateDate from '../../utils/dateUtils';\nimport { reqUsers, reqDeleteUser } from '../../api/index';\nimport LinkButton from '../../components/link-button';\nimport UserForm from './user-form';\nimport { reqAddUser } from '../../api/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class User extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isShow: false,\n      //对话框的显示隐藏\n      users: [],\n      //所有用户的数组\n      roles: [] //所有角色的列表\n\n    };\n\n    this.deleteUser = user => {\n      _Modal.confirm({\n        title: `确认删除${user.username}吗？`,\n        onOk: async () => {\n          const result = await reqDeleteUser(user._id);\n\n          if (result.status === 0) {\n            _message.success('删除用户成功');\n\n            this.getUsers();\n          } else {\n            _message.error('删除用户失败');\n          }\n        }\n      });\n    };\n\n    this.getUsers = async () => {\n      const result = await reqUsers();\n      console.log(result.data.users);\n\n      if (result.status === 0) {\n        const {\n          users,\n          roles\n        } = result.data;\n        this.initRoleNames(roles); //根据roles数组生成roles对应的名字\n\n        this.setState({\n          users,\n          roles\n        });\n      }\n    };\n\n    this.initRoleNames = roles => {\n      const roleNames = roles.reduce((pre, role, cur) => {\n        pre[role._id] = role.name;\n        return pre;\n      }, {}); //保存\n\n      this.roleNames = roleNames;\n    };\n\n    this.initColumns = () => {\n      this.columns = [{\n        title: '用户名',\n        dataIndex: 'username'\n      }, {\n        title: '邮箱',\n        dataIndex: 'email'\n      }, {\n        title: '电话',\n        dataIndex: 'phone'\n      }, {\n        title: '注册时间',\n        dataIndex: 'create_time',\n        render: formateDate\n      }, {\n        title: '所属角色',\n        dataIndex: 'role_id',\n        render: role_id => this.roleNames[role_id]\n      }, {\n        title: '操作',\n        render: user => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(LinkButton, {\n            children: \"\\u4FEE\\u6539\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(LinkButton, {\n            onClick: () => {\n              this.deleteUser(user);\n            },\n            children: \"\\u5220\\u9664\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }];\n    };\n\n    this.addOrUpdate = async () => {\n      //1.收集输入数据\n      const user = this.form.getFieldsValue();\n      this.form.resetFields(); //2.提交添加的请求\n\n      const result = await reqAddUser(user); //3.更新列表显示\n\n      if (result.status === 0) {\n        _message.success('添加用户成功');\n      }\n\n      this.setState({\n        isShow: false\n      });\n    };\n  }\n\n  componentWillMount() {\n    //调用初始化列的方法\n    this.initColumns();\n  }\n\n  componentDidMount() {\n    //调用所有用户的列表\n    this.getUsers();\n  } //添加或者更新用户\n\n\n  render() {\n    const title = /*#__PURE__*/_jsxDEV(_Button, {\n      type: \"primary\",\n      onClick: () => {\n        this.setState({\n          isShow: true\n        });\n      },\n      children: \"\\u521B\\u5EFA\\u7528\\u6237\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n\n    const {\n      isShow,\n      users,\n      roles\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      title: title,\n      children: [/*#__PURE__*/_jsxDEV(_Table, {\n        bordered: true,\n        rowKey: \"\",\n        dataSource: users,\n        columns: this.columns,\n        pagination: {\n          defaultPageSize: 5,\n          showQuickJumper: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n        title: \"\\u6DFB\\u52A0\\u7528\\u6237\",\n        visible: isShow,\n        onOk: this.addOrUpdate,\n        onCancel: () => {\n          this.setState({\n            isShow: false\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(UserForm, {\n          setForm: form => {\n            this.form = form;\n          },\n          roles: roles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/pages/user/index.jsx"],"names":["React","Component","formateDate","reqUsers","reqDeleteUser","LinkButton","UserForm","reqAddUser","User","state","isShow","users","roles","deleteUser","user","confirm","title","username","onOk","result","_id","status","success","getUsers","error","console","log","data","initRoleNames","setState","roleNames","reduce","pre","role","cur","name","initColumns","columns","dataIndex","render","role_id","addOrUpdate","form","getFieldsValue","resetFields","componentWillMount","componentDidMount","defaultPageSize","showQuickJumper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport{\r\n    Card,Button,Table,Modal, message\r\n} from 'antd'\r\nimport formateDate from '../../utils/dateUtils'\r\nimport {reqUsers,reqDeleteUser} from '../../api/index'\r\nimport LinkButton from '../../components/link-button'\r\nimport UserForm from './user-form'\r\nimport {reqAddUser} from '../../api/index'\r\nexport default class User extends Component {\r\n    state={\r\n        isShow:false,  //对话框的显示隐藏\r\n        users:[],  //所有用户的数组\r\n        roles:[],   //所有角色的列表\r\n    }\r\n    //删除指定用户\r\n    deleteUser=(user)=>{\r\n        Modal.confirm({\r\n            title:`确认删除${user.username}吗？`,\r\n            onOk:async()=>{\r\n                const result=await reqDeleteUser(user._id)\r\n                if(result.status===0){\r\n                    message.success('删除用户成功')\r\n                    this.getUsers()\r\n                }else{\r\n                    message.error('删除用户失败')\r\n                }\r\n            }\r\n        })\r\n    }\r\n    //获取所有用户的方法\r\n    getUsers=async()=>{\r\n        const result=await reqUsers()\r\n        console.log(result.data.users)\r\n        if(result.status===0){\r\n            const {users,roles}=result.data\r\n            this.initRoleNames(roles)   //根据roles数组生成roles对应的名字\r\n            this.setState({\r\n                users,roles\r\n            })\r\n        }\r\n    }\r\n    //根据roles数组生成包含所有角色名的对象(属性名用角色id值)\r\n    initRoleNames=(roles)=>{    \r\n        const roleNames=roles.reduce((pre,role,cur)=>{\r\n            pre[role._id]=role.name\r\n            return pre\r\n        },{})\r\n        //保存\r\n        this.roleNames=roleNames\r\n    }\r\n    //初始化列的方法\r\n    initColumns=()=>{\r\n        this.columns=[\r\n            {\r\n                title:'用户名',\r\n                dataIndex:'username',\r\n            },\r\n            {\r\n                title:'邮箱',\r\n                dataIndex:'email'\r\n            },\r\n            {\r\n                title:'电话',\r\n                dataIndex:'phone'\r\n            },\r\n            {\r\n                title:'注册时间',\r\n                dataIndex:'create_time',\r\n                render:formateDate\r\n            },\r\n            {\r\n                title:'所属角色',\r\n                dataIndex:'role_id',\r\n                render:(role_id)=>this.roleNames[role_id]\r\n            },\r\n            {\r\n                title:'操作',\r\n                render:(user)=>(\r\n                    <span>\r\n                        <LinkButton>修改</LinkButton>\r\n                        <LinkButton onClick={()=>{this.deleteUser(user)}}>删除</LinkButton>\r\n                    </span>\r\n                )\r\n            }\r\n        ]\r\n    }\r\n    componentWillMount(){\r\n        //调用初始化列的方法\r\n        this.initColumns()\r\n    }\r\n    componentDidMount(){\r\n           //调用所有用户的列表\r\n           this.getUsers()\r\n    }\r\n    //添加或者更新用户\r\n    addOrUpdate=async()=>{\r\n        //1.收集输入数据\r\n        const user= this.form.getFieldsValue()\r\n        this.form.resetFields()\r\n        //2.提交添加的请求\r\n        const result=await reqAddUser(user)\r\n        //3.更新列表显示\r\n        if(result.status===0){\r\n            message.success('添加用户成功')\r\n        }\r\n        this.setState({isShow:false})\r\n    }\r\n    render() {\r\n        const title=(\r\n            <Button type='primary' onClick={()=>{this.setState({isShow:true})}}>创建用户</Button>\r\n        )\r\n        const {isShow,users,roles}=this.state\r\n        return (\r\n           <Card title={title}>\r\n               <Table\r\n                bordered\r\n                rowKey=''\r\n                dataSource={users}\r\n                columns={this.columns}\r\n                pagination={{defaultPageSize:5,showQuickJumper:true}}\r\n               >\r\n               </Table>\r\n               <Modal\r\n                title=\"添加用户\"\r\n                visible={isShow}\r\n                onOk={this.addOrUpdate}\r\n                onCancel={()=>{this.setState({isShow:false})}}\r\n               >\r\n                   <UserForm setForm={(form)=>{this.form=form}} roles={roles}></UserForm>\r\n               </Modal>\r\n           </Card>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}