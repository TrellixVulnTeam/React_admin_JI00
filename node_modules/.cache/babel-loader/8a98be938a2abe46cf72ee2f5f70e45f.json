{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/cascader/style\";\nimport _Cascader from \"antd/es/cascader\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"C:\\\\Users\\\\itryl\\\\Desktop\\\\React client\\\\client\\\\src\\\\pages\\\\products\\\\add-update.jsx\";\nimport React, { Component } from 'react';\nimport LinkButton from '../../components/link-button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = _Form.Item;\nconst {\n  TextArea\n} = _Input; //多行输入框\n//product的添加和更新的子路由组件\n\nconst options = [{\n  value: 'zhejiang',\n  label: 'Zhejiang',\n  isLeaf: false //是否有分支\n\n}, {\n  value: 'jiangsu',\n  label: 'Jiangsu',\n  isLeaf: false\n}];\n\nclass ProductAddUpdate extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      options\n    };\n\n    this.loadData = selectedOptions => {\n      const targetOption = selectedOptions[0];\n      targetOption.loading = true; // load options lazily\n\n      setTimeout(() => {\n        targetOption.loading = false;\n        targetOption.children = [{\n          label: `${targetOption.label} Dynamic 1`,\n          value: 'dynamic1'\n        }, {\n          label: `${targetOption.label} Dynamic 2`,\n          value: 'dynamic2'\n        }];\n        this.setState({\n          options: [...this.state.options]\n        });\n      }, 1000);\n    };\n\n    this.validatorPrice = (rule, value, callback) => {\n      //value是字符串类型\n      // callback()  //验证通过\n      // callback('xxxx')   //验证没通过  并且指定错误信息\n      if (value * 1 > 0) {\n        callback(); //验证通过\n      } else {\n        callback('价格必须大于0');\n      }\n    };\n\n    this.submit = () => {\n      //进行整体表单验证，整体通过才提交\n      this.props.form.validateFields((err, value) => {\n        if (!err) {\n          _message.success('添加成功');\n        }\n      });\n    };\n  }\n\n  render() {\n    const title = /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(LinkButton, {\n        children: /*#__PURE__*/_jsxDEV(_Icon, {\n          type: \"arrow-left\",\n          style: {\n            fontSize: 20\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u6DFB\\u52A0\\u5546\\u54C1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this); //指定Item布局的配置对象\n\n\n    const formItemLayOut = {\n      labelCol: {\n        span: 2\n      },\n      //左侧label的宽度\n      wrapperCol: {\n        span: 8\n      } //指定右侧包裹的宽度\n\n    }; //输入框最后面的后缀\n\n    const selectAfter = /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u5143\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this); //获取表单验证\n\n\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      title: title,\n      children: /*#__PURE__*/_jsxDEV(_Form, { ...formItemLayOut,\n        children: [/*#__PURE__*/_jsxDEV(Item, {\n          label: \"\\u5546\\u54C1\\u540D\\u79F0\",\n          children: getFieldDecorator('name', {\n            initialValue: '',\n            rules: [{\n              required: true,\n              message: '必须输入商品名称'\n            }]\n          })( /*#__PURE__*/_jsxDEV(_Input, {\n            placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u54C1\\u540D\\u79F0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 32\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          label: \"\\u5546\\u54C1\\u63CF\\u8FF0\",\n          children: getFieldDecorator('desc', {\n            initialValue: '',\n            rules: [{\n              required: true,\n              message: '必须输入商品描述'\n            }]\n          })( /*#__PURE__*/_jsxDEV(TextArea, {\n            placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u54C1\\u63CF\\u8FF0\",\n            autosize: {\n              minRows: 2,\n              maxRows: 6\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 32\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          label: \"\\u5546\\u54C1\\u4EF7\\u683C\",\n          children: getFieldDecorator('price', {\n            initialValue: '',\n            rules: [{\n              required: true,\n              message: '必须输入商品价格'\n            }, {\n              validator: this.validatorPrice\n            }]\n          })( /*#__PURE__*/_jsxDEV(_Input, {\n            type: \"number\",\n            placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u54C1\\u4EF7\\u683C\",\n            addonAfter: selectAfter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 32\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          label: \"\\u5546\\u54C1\\u5206\\u7C7B\",\n          children: /*#__PURE__*/_jsxDEV(_Cascader, {\n            options: this.state.options //需要显示的列表数据\n            ,\n            loadData: this.loadData //指定当选择某个列表项，加载下一级列表的监听回调\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          label: \"\\u5546\\u54C1\\u56FE\\u7247\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\u5546\\u54C1\\u56FE\\u7247\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          label: \"\\u5546\\u54C1\\u8BE6\\u60C5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\u5546\\u54C1\\u8BE6\\u60C5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(_Button, {\n            type: \"primary\",\n            onClick: this.submit,\n            children: \"\\u63D0\\u4EA4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _Form.create()(ProductAddUpdate);","map":{"version":3,"sources":["C:/Users/itryl/Desktop/React client/client/src/pages/products/add-update.jsx"],"names":["React","Component","LinkButton","Item","TextArea","options","value","label","isLeaf","ProductAddUpdate","state","loadData","selectedOptions","targetOption","loading","setTimeout","children","setState","validatorPrice","rule","callback","submit","props","form","validateFields","err","success","render","title","fontSize","formItemLayOut","labelCol","span","wrapperCol","selectAfter","getFieldDecorator","initialValue","rules","required","message","minRows","maxRows","validator","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Card, Icon, Input, Form, Cascader, Upload, Button, message } from 'antd'\r\nimport LinkButton from '../../components/link-button';\r\nconst Item = Form.Item\r\nconst { TextArea } = Input;  //多行输入框\r\n//product的添加和更新的子路由组件\r\nconst options = [\r\n    {\r\n        value: 'zhejiang',\r\n        label: 'Zhejiang',\r\n        isLeaf: false, //是否有分支\r\n    },\r\n    {\r\n        value: 'jiangsu',\r\n        label: 'Jiangsu',\r\n        isLeaf: false,\r\n    },\r\n];\r\nclass ProductAddUpdate extends Component {\r\n    state = {\r\n        options\r\n    }\r\n    //用于加载下一届列表数据的回调\r\n    loadData = selectedOptions => {\r\n        const targetOption = selectedOptions[0];\r\n        targetOption.loading = true;\r\n    \r\n        // load options lazily\r\n        setTimeout(() => {\r\n          targetOption.loading = false;\r\n          targetOption.children = [\r\n            {\r\n              label: `${targetOption.label} Dynamic 1`,\r\n              value: 'dynamic1',\r\n            },\r\n            {\r\n              label: `${targetOption.label} Dynamic 2`,\r\n              value: 'dynamic2',\r\n            },\r\n          ];\r\n          this.setState({\r\n            options: [...this.state.options],\r\n          });\r\n        }, 1000);\r\n      };\r\n    //验证价格 自定义验证函数\r\n    validatorPrice = (rule, value, callback) => {   //value是字符串类型\r\n        // callback()  //验证通过\r\n        // callback('xxxx')   //验证没通过  并且指定错误信息\r\n        if (value * 1 > 0) {\r\n            callback() //验证通过\r\n        } else {\r\n            callback('价格必须大于0')\r\n        }\r\n    }\r\n    //提交按钮\r\n    submit = () => {\r\n        //进行整体表单验证，整体通过才提交\r\n        this.props.form.validateFields((err, value) => {\r\n            if (!err) {\r\n                message.success('添加成功')\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const title = (\r\n            <span>\r\n                <LinkButton>\r\n                    <Icon type='arrow-left' style={{ fontSize: 20 }}></Icon>\r\n                </LinkButton>\r\n                <span>添加商品</span>\r\n            </span>\r\n        )\r\n        //指定Item布局的配置对象\r\n        const formItemLayOut = {\r\n            labelCol: { span: 2 },   //左侧label的宽度\r\n            wrapperCol: { span: 8 }   //指定右侧包裹的宽度\r\n        }\r\n        //输入框最后面的后缀\r\n        const selectAfter = (\r\n            <span>元</span>\r\n        );\r\n\r\n        //获取表单验证\r\n        const { getFieldDecorator } = this.props.form\r\n        return (\r\n            <Card\r\n                title={title}\r\n            >\r\n                <Form {...formItemLayOut}>\r\n                    <Item label=\"商品名称\">\r\n                        {\r\n                            getFieldDecorator('name', {\r\n                                initialValue: '',\r\n                                rules: [\r\n                                    { required: true, message: '必须输入商品名称' }\r\n                                ]\r\n                            })(<Input placeholder='请输入商品名称'></Input>)\r\n                        }\r\n                    </Item>\r\n                    <Item label=\"商品描述\">\r\n                        {\r\n                            getFieldDecorator('desc', {\r\n                                initialValue: '',\r\n                                rules: [\r\n                                    { required: true, message: '必须输入商品描述' }\r\n                                ]\r\n                            })(<TextArea placeholder='请输入商品描述' autosize={{ minRows: 2, maxRows: 6 }} ></TextArea>)\r\n                        }\r\n                    </Item>\r\n                    <Item label=\"商品价格\">\r\n                        {\r\n                            getFieldDecorator('price', {\r\n                                initialValue: '',\r\n                                rules: [\r\n                                    { required: true, message: '必须输入商品价格' },\r\n                                    { validator: this.validatorPrice }\r\n                                ]\r\n                            })(<Input type='number' placeholder='请输入商品价格' addonAfter={selectAfter}></Input>)\r\n                        }\r\n                    </Item>\r\n                    <Item label=\"商品分类\">\r\n                        <Cascader\r\n                            options={this.state.options}    //需要显示的列表数据\r\n                            loadData={this.loadData}        //指定当选择某个列表项，加载下一级列表的监听回调\r\n                        />\r\n                    </Item>\r\n                    <Item label=\"商品图片\">\r\n                        <div>商品图片</div>\r\n                    </Item>\r\n                    <Item label=\"商品详情\">\r\n                        <div>商品详情</div>\r\n                    </Item>\r\n                    <Item >\r\n                        <Button type='primary' onClick={this.submit}>提交</Button>\r\n                    </Item>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nexport default Form.create()(ProductAddUpdate)\r\n"]},"metadata":{},"sourceType":"module"}